% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Preparation_Expand_TableDescription.R
\name{expandTableDescriptionInternal}
\alias{expandTableDescriptionInternal}
\title{Expand Table Description with Specified Expansion Tables}
\usage{
expandTableDescriptionInternal(table_description_collapsed, expansion_tables)
}
\arguments{
\item{table_description_collapsed}{A \code{data.table} object that contains the initial table description to be
expanded.}

\item{expansion_tables}{A list of \code{data.table} objects, each representing an expansion table to be used for
replacing specific rows in the \code{table_description_collapsed}. The names of the list elements should match
the keys used in the \code{fhir_expression} column of \code{table_description_collapsed} to indicate which expansion
table to use.}
}
\value{
A \code{data.table} object with the expanded table description, where specific rows have been replaced
according to the rules defined by the expansion tables.
}
\description{
This function expands a given table description by replacing certain rows with data from expansion tables.
It specifically targets rows with patterns and replaces them based on a set of rules, effectively expanding
the original table description. The expansion is guided by \code{resource_prefix} and \code{fhir_expression} columns.
Rows with \code{NA} in \code{fhir_expression} are removed. The function adjusts the expansion tables to match the
target table's structure, removing unnecessary columns and adding missing ones as \code{NA}. It generates full
column names by combining \code{resource_prefix} with modified \code{fhir_expression} values, replacing slashes with
underscores and appending prefixes. The expansion process might replace a single row with multiple rows
from an expansion table, adjusting \code{count} values and column names accordingly.
Finally, all \code{column_name} entries are converted to lowercase.
}
\examples{
library(data.table)

# Assuming `table_description_collapsed` and `expansion_tables` are predefined
# table_description_collapsed <- data.table(...) # Define your initial table description
# expansion_tables <- list(...) # Define your expansion tables

# Example function call
# expanded_table <- expandTableDescriptionInternal(table_description_collapsed, expansion_tables)
# print(expanded_table)

}
\seealso{
\code{\link{extractReplacePatterns}}, \code{\link[etlutils]{getFirstRowWithPatterns}},
\code{\link[etlutils]{isSimpleNotEmptyString}}, \code{\link[etlutils]{getAfterLastSlash}},
\code{\link[etlutils]{getBeforeLastSlash}}, \code{\link[etlutils]{replacePatternsInString}}
}
