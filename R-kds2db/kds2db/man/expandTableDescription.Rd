% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Preparation_Expand_TableDescription.R
\name{expandTableDescription}
\alias{expandTableDescription}
\title{Expand Table Description from Definition File}
\usage{
expandTableDescription()
}
\value{
This function does not return a value but prints messages based on the length
of the column names in the expanded table description and may write the expanded table
description to an Excel file.
}
\description{
This function reads a table description from 'Table_Description_Definition.xlsx',
expands it, and then checks if any of the resulting column names exceed the maximum
length allowed for column names in Postgres databases (64 characters). If any column
names are too long, it prints a message with these column names. Otherwise, it writes
the expanded table description back to an Excel file named 'Table_Description.xlsx'.
}
\details{
The function does not take any parameters and operates on a predefined Excel file.
It relies on 'expandTableDescriptionFromFile' for the initial table expansion and
uses 'etlutils::writeExcelFile' to save the expanded description.

The function first expands the table description using
'expandTableDescriptionFromFile', passing 'Table_Description_Definition.xlsx' as the
argument. It then checks the length of each column name in the expanded table
description. If any column names are longer than 64 characters, a message is printed
for each offending column name. If all column names are within the limit, a success
message is printed, and the expanded table description is saved to an Excel file.

This function is particularly useful for preparing database schema definitions where
there are constraints on the length of column names, such as in Postgres databases.
}
\examples{
expandTableDescription()

}
\seealso{
\code{\link{expandTableDescriptionFromFile}}
}
