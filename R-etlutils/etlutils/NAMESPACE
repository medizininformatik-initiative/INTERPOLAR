# Generated by roxygen2: do not edit by hand

export(END__)
export(START__)
export(addCharlsonScore)
export(addParamToFHIRRequest)
export(addTableRow)
export(catByVerbose)
export(cat_brown)
export(cat_colourised)
export(cat_cyan)
export(cat_error)
export(cat_green)
export(cat_info)
export(cat_ok)
export(cat_red)
export(cat_warning)
export(cat_yellow)
export(checkError)
export(colourise)
export(combineBundlePaths)
export(combineDataTables)
export(combineLogPaths)
export(complete_table)
export(convertBooleanFormat)
export(convertDateFormat)
export(convertDateTimeFormat)
export(convertDecimalFormat)
export(convertIntegerFormat)
export(convertListColumnsToString)
export(convertTimeFormat)
export(convertVerboseNumbers)
export(countCharsFromEndToLastNewline)
export(countTrailingSpaces)
export(createClock)
export(createFrameString)
export(create_dirs)
export(dataTableAsCharacter)
export(dbAddContent)
export(dbCheckContent)
export(dbConnect)
export(dbDeleteContent)
export(dbDisconnect)
export(dbListTableNames)
export(dbReadTable)
export(downloadAndCrackFHIRResources)
export(downloadAndCrackFHIRResourcesByPIDs)
export(end_logging)
export(existsLocalRdataFile)
export(expandICD)
export(expandICDs)
export(extract_words)
export(fillNAWithLastRowValue)
export(finalize)
export(flattenList)
export(getAfterLastSlash)
export(getAvailableCoreNumber)
export(getBeforeLastSlash)
export(getBetweenQuotes)
export(getClock)
export(getContentFromFile)
export(getFirstRowWithPatterns)
export(getGlobalVariablesByPrefix)
export(getLocalRdataFileInfo)
export(getLocalRdataFileName)
export(getOperationSystem)
export(getPluralSuffix)
export(getResourcesByIDs)
export(getResourcesCounts)
export(getResourcesIDs)
export(getTableFromList)
export(getVarByNameOrDefaultIfMissing)
export(getWhitespacesBeforeWord)
export(getWordIndentation)
export(get_encounters)
export(get_project_dir_names)
export(getcolumnIndex)
export(greplic)
export(human_readable_duration)
export(indexOfSubstring)
export(initConstants)
export(interpolar_expandICDs)
export(isError)
export(isOK)
export(isSimpleFalseOr0)
export(isSimpleNA)
export(isSimpleNotEmptyString)
export(isSimpleTrueOrNot0)
export(isValidTable)
export(limitAvailableCoreNumber)
export(loadFHIRResourcesByOwnID)
export(loadFHIRResourcesByPID)
export(loadMultipleFHIRResourcesByPID)
export(moveColumnBefore)
export(namedListByParam)
export(namedListByValue)
export(normalizeAllPOSIXctToUTC)
export(normalizeTableColumnToUTC)
export(normalizeTimeToUTC)
export(pasteFHIRSearchParams)
export(polar_fhir_search)
export(polar_read_rdata)
export(polar_save_error)
export(polar_save_rdata)
export(polar_save_result_as_rdata)
export(polar_save_result_table_as_csv)
export(polar_save_result_table_as_csv_local)
export(polar_save_table_as_csv)
export(polar_save_table_as_rdata)
export(polar_save_table_as_tsv)
export(polar_write_rdata)
export(printAllTables)
export(printClock)
export(printTable)
export(printTable_summary)
export(rcmd_running)
export(readExcelFileAsTableList)
export(readFirstExcelFileAsTableList)
export(readTablesFromDatabase)
export(refreshFHIRToken)
export(removeANSIEscapeSequences)
export(removeLastCharsIfNotAlphanumeric)
export(removeRowsUpToIndex)
export(removeRowsWithNAorEmpty)
export(removeTableHeader)
export(renameWithCreationTimeIfDirExists)
export(replacePatternsInColumn)
export(replacePatternsInString)
export(retainColumns)
export(returnPathToBundlesDir)
export(returnPathToLogDir)
export(run)
export(runProcess)
export(run_in)
export(run_in_in)
export(run_in_in_ignore_error)
export(run_out)
export(runs)
export(runs_in)
export(runs_in_in)
export(runs_out)
export(savePerformance)
export(sortListByName)
export(sortListByValue)
export(splitColumnToRows)
export(splitTableToList)
export(start_logging)
export(stopOnError)
export(stopWithError)
export(styled_string)
export(toMatrix)
export(trimTableValues)
export(writeExcelFile)
export(writeTablesToDatabase)
exportClasses(Clock)
importFrom(data.table,data.table)
importFrom(data.table,is.data.table)
importFrom(data.table,setDF)
importFrom(data.table,setDT)
importFrom(data.table,setcolorder)
importFrom(methods,new)
importFrom(rlang,":=")
importFrom(stringr,str_pad)
