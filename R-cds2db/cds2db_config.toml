#############################################
# Project Definition for cds2db ETL process #
#############################################

[general]

#################
# VERBOSE LEVELS
#
# VL_00_NOTHING             = 0
# VL_10_MAIN_INFO           = 1
# VL_20_OUTER_SCRIPTS       = 2
# VL_30_INNER_SCRIPTS       = 3
# VL_40_INNER_SCRIPTS_INFOS = 4
# VL_50_TABLES              = 5
# VL_60_ALL_TABLES          = 6
# VL_70_DOWNLOAD            = 7
# VL_80_COI_PROCESSING      = 8
# VL_90_FHIR_RESPONSE       = 9
#################
VERBOSE               = 10 # Retrieval / analysis verbose level

#################
# Set true if every sourcing of the 00_Main file should create result directories in the
# otuputGlobal and otuputLocal directories with a timestamp suffix. If false then every run will
# write in the same subdirectory without a timestamp.
# The default behavior should write in subdirectories with only the project name (false) or in or
# in a subdirectory with the project name and the suffix '_timestamp'.
#################
USE_TIMESTAMP_AS_RESULT_DIR_SUFFIX = false

#################
# Maximum of saved cds2db result folders in outputLocal and outputGlobal
#################
MAX_DIR_COUNT = 5


[retrieve]

[retrieve.fhir_server]

#################
# If you use self-signed certificates to secure the FHIR server (SSL/TLS), please configure
# the corresponding certificates in the 'r-env' service in the 'volumes' section of
# docker-compose.yml so that these certificates can be checked in the CDS Tool Chain.
# Otherwise the connection cannot be established.
#################
FHIR_SERVER_ENDPOINT = "https://mii-agiop-3p.life.uni-leipzig.de/blaze"
FHIR_SERVER_USER = ""
FHIR_SERVER_PASS = ""

FHIR_TOKEN                  = ""
FHIR_TOKEN_REFRESH_URL      = ""
FHIR_TOKEN_REFRESH_USER     = ""
FHIR_TOKEN_REFRESH_PASSWORD = ""

FHIR_SEARCH_CURL_TIMEOUT = 1800 # timeout for curl requests on a FHIR server in seconds

#################
# Per default FHIR search request for resources with a specific subject (e.g. patient) are
# performed with patient="patient_id". If there are any reasons this behavior can be changed
# to "subject=patient_id" by setting the following parameter to TRUE.
#################
#FHIR_SEARCH_PIDS_BY_SUBJECT = TRUE

MAX_CHARACTER_LENGTH_FOR_GET_REQUESTS         = 2083 # max character length for GET-Requests
MAX_CHARACTER_LENGTH_FOR_GET_REQUESTS_RESERVE = 300  # reserve 300 characters for further parameters, whose length cannot estimated [ehemals RES_LEN]

MIN_BIRTHDAY                       = "1910-01-01" # lowest possible birthday
DEFAULT_EMPTY_BIRTHDAY_PATTERN     = ""           # pattern to identify the default birth date if the real date is missing

MAX_ENCOUNTER_BUNDLES              = inf # maximum number of Encounter bundles that will be loaded from the server ('inf' = all)
#COUNT_PER_BUNDLE                   = 100 # as default or use server default ? The number of results that are mapped per FHIR request on a response page [ehemals COUNT]
SORT                               = ""  # some Fhir server require a sort parameter per default
IDS_AT_ONCE                        = 100 # patient / medication ids combined in one request (GET or POST) - specifies the number of ID's, which are summarized in a request (after download of Encounters)

MAX_CORES                          = 0 # paralellization, number of cores used, 0: unlimited
FORCE_DOWNLOAD_AND_CRACK_PARALLEL  = false # if TRUE: force download and crack parallel with basic method, avoid polar_download_by_ids_and_crack_parallel()
NEXT_LINK_ENCODE                   = false # encode special chars in next_link (see polar_download_and_crack_parallel())


[retrieve.fhir_search]

#################
# Only encounters with exactly this status are found. If this Debug parameter is not set, the default
# status "in-progress" applies.
#
# Multiple status can be written as comma separated list.
#################
FHIR_SEARCH_ENCOUNTER_STATUS = "finished,in-progress"

#################
# Attention: This filter is relevant for two queries:
# 1. For the FHIR query to limit the first encounter query to find PIDs per ward.
# Only encounters with exactly this classes are found. If this Debug parameter is not set, then the
# class attribute will not be considered in the FHIR search request.
# See https://simplifier.net/packages/de.basisprofil.r4/1.4.0/files/656744
#  Code   Display
#  AMB    ambulatory
#  IMP    inpatient encounter
#  PRENC  pre-admission
#  VR     virtual
#  SS     short stay
#  HH     home health
#
# 2. For the SQL query on the database to find the active PIDs in the Encounter table.
#
# Multiple classes can be written as comma separated list:
#################
FHIR_SEARCH_ENCOUNTER_CLASS = "IMP,SS"

#################
# If the IDs of the Locations to which the Encounters refer are known, they can be entered here as
# a list or comma-separated and thus appended to the FHIR search query in order to find the relevant
# Encounters.
#################
#FHIR_SEARCH_ENCOUNTER_LOCATION_IDS = [
#  "location_id_1",
#  "location_id_2",
#  "location_id_3"
#]

#################
# This parameter is appended to the existing FHIR search query exactly as specified. Theoretically,
# it can also be used to replace the other FHIR_SEARCH_ENCOUNTER parameters. It can be used to
# further restrict the initially downloaded encounters in a meaningful way.
#################
#FHIR_SEARCH_ENCOUNTER_ADDITIONAL_PARAMETERS = "&_summary=count"


[retrieve.patient_id_filtering]

#################
# Use this definition to set the filters to identify all Encounters of the relevant wards.
# Every entry defines a single condition. An Encounter will be accepted, if at least one condition is
# fulfilled (OR connected). A condition defines which expressions of the Encounter should have which
# value. The values can be defined as grep patterns. Multiple subconditions can be connected by '+'
# (logical AND). All Patterns are Case INSENSITIVE!
# A valid patterns variable name must start with 'ENCOUNTER_FILTER_PATTERN'.
#
# If 2 or more patterns overlap, then the same Encounter could be assigned to multiple wards. In this
# cases the Encounter will be assigned to the first matching ward.
# If the same patient has different encounters in different wards, then the patient will be assigned to
# the first matching ward. At the end, it is ensured that the same patient ID appears with exactly one
# Encounter at exactly one ward. The earliest started Encounters are removed first (period/start). If
# several are left over, the Encounters with the lowest meta/lastUpdated value are removed. If there
# are still several left, the first one is taken as the only one.
#
# The ward_name values given here are ultimately created in REDCap as Data Access Groups (DAG) and
# exactly the names assigned here are also displayed there as ward names. The ward names from the
# FHIR location reference in Encounters are ignored!
#################
ENCOUNTER_FILTER_PATTERN_1 = [
  "ward_name = 'Station 1'",
  "location/location/reference = 'Location/location_id_1'"
]

ENCOUNTER_FILTER_PATTERN_2 = [
  "ward_name = 'Station 2'",
  "location/location/reference = 'Location/location_id_2'"
]

ENCOUNTER_FILTER_PATTERN_3 = [
  "ward_name = 'Station 3'",
  "location/location/reference = 'Location/location_id_3'"
]


[retrieve.debug]

#################
# Sets path for debug config toml files. This referenced toml file can contain
# additional or changed parameters and values for parameters. It can be used to
# enable quick changes of a lot of parameters without changing this main file.
# This mechanism is also used for running integration tests.
#################
#DEBUG_PATH_TO_CONFIG_TOML = "./R-cds2db/debug_config_toml/debug_cds2db_config_1.toml"


[database]

PATH_TO_DB_CONFIG_TOML = "./cds_hub_db_config.toml"
