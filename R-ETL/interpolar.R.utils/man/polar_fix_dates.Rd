% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lib_misc.R
\name{polar_fix_dates}
\alias{polar_fix_dates}
\title{Fix uncommon date formats}
\usage{
polar_fix_dates(dt, date_columns, preserve_time = TRUE)
}
\arguments{
\item{dt}{A data.table containing the data to be processed.}

\item{date_columns}{A character vector specifying the names of the date columns to be fixed.}

\item{preserve_time}{A logical value indicating whether to preserve time information. Default is TRUE.}
}
\value{
The modified data.table with fixed date formats.
}
\description{
This function takes a data.table (\code{dt}), a set of date columns (\code{date_columns}),
and an optional parameter (\code{preserve_time}) to fix uncommon date formats.
It performs the following tasks:
}
\details{
\itemize{
\item If \code{preserve_time} is TRUE, it extracts the time part from each date column
and saves it into respective TimeSpec columns by appending ".TimeSpec" to the
original date column names.
\item It then converts the original date columns to Date format using the
\code{polar_as_date} function.
}
}
\examples{
# Create an example data.table
dt <- data.table::data.table(
  date1 = c("2022", "1990-05", "1980-11"),
  date2 = c("2022-12", "1990-05", "1980-11"),
  value = c(1, 2, 3)
)

# Fix uncommon date formats with time preservation
polar_fix_dates(dt, c("date1", "date2"), preserve_time = TRUE)

# The resulting data.table will have additional columns date1.TimeSpec and date2.TimeSpec
# containing the extracted time information, and the original date columns date1 and date2
# will be converted to Date format.
dt

# Expected output:
#    date1      date2 value date1.TimeSpec date2.TimeSpec
# 1: 2022-01-01 2022-12-01     1       00:00:00       00:00:00
# 2: 1990-05-01 1990-05-01     2       00:00:00       00:00:00
# 3: 1980-11-01 1980-11-01     3       00:00:00       00:00:00

}
\seealso{
\code{\link{polar_as_time}}, \code{\link{polar_as_date}}
}
