-- ########################################################################################################
--
-- This file is generated. Changes should only be made by regenerating the file.
--
-- Rights definition file             : ./Postgres-cds_hub/init/template/User_Schema_Rights_Definition.xlsx
-- Rights definition file last update : 2025-04-07 13:14:52
-- Rights definition file size        : 15808 Byte
--
-- Create SQL Tables in Schema "cds2db_in"
-- Create time: 2025-04-18 00:24:08
-- TABLE_DESCRIPTION:  ./R-cds2db/cds2db/inst/extdata/Table_Description.xlsx[table_description]
-- SCRIPTNAME:  140_cre_table_typ_cds2db_in.sql
-- TEMPLATE:  template_cre_table.sql
-- OWNER_USER:  cds2db_user
-- OWNER_SCHEMA:  cds2db_in
-- TAGS:  TYPED
-- TABLE_PREFIX:  
-- TABLE_POSTFIX:  
-- RIGHTS:  INSERT, DELETE, UPDATE, SELECT
-- GRANT_TARGET_USER:  cds2db_user
-- GRANT_TARGET_USER (2):  db_user
-- COPY_FUNC_SCRIPTNAME:  150_get_last_processing_nr_typed.sql
-- COPY_FUNC_TEMPLATE:  template_get_last_pnr_typed.sql
-- COPY_FUNC_NAME:  get_last_processing_nr_typed
-- SCHEMA_2:  db_log
-- TABLE_POSTFIX_2:  
-- SCHEMA_3:  
-- TABLE_POSTFIX_3:  
-- ########################################################################################################

-----------------------------------------------------
-- Create SQL Tables in Schema "cds2db_in" --
-----------------------------------------------------

-- Table "encounter" in schema "cds2db_in"
-------------------------------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS cds2db_in.encounter (
  encounter_id int PRIMARY KEY DEFAULT nextval('db.db_seq') -- Primary key of the entity
);

DO
$$
DECLARE
    IF EXISTS ( -- Table exists
        SELECT 1 FROM information_schema.columns 
        WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
    ) THEN
        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'input_datetime'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD encounter_raw_id int NOT NULL; -- Primary key of the corresponding raw table
            NULL;
        END IF; -- column

-- Organizational items - fixed for each database table -----------------------------------------
        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'input_datetime'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD input_datetime TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP; -- Time at which data record was created
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'last_check_datetime'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD last_check_datetime TIMESTAMP DEFAULT NULL; -- Time at which data record was last checked
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'current_dataset_status'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD current_dataset_status VARCHAR DEFAULT 'input'; -- Processing status of the data record
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'input_processing_nr'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD input_processing_nr INT; -- (First) Processing number of the data record
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'last_processing_nr'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD last_processing_nr INT; -- Last processing number of the data record
        END IF; -- column

-- Data-leading columns -------------------------------------------------------------------------
        IF NOT EXISTS ( -- column not exists (enc_id)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_id'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_id varchar;   -- id (varchar)
        END IF; -- column (enc_id)
        IF NOT EXISTS ( -- column not exists (enc_meta_versionid)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_meta_versionid'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_meta_versionid varchar;   -- meta/versionId (varchar)
        END IF; -- column (enc_meta_versionid)
        IF NOT EXISTS ( -- column not exists (enc_meta_lastupdated)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_meta_lastupdated'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_meta_lastupdated timestamp;   -- meta/lastUpdated (timestamp)
        END IF; -- column (enc_meta_lastupdated)
        IF NOT EXISTS ( -- column not exists (enc_meta_profile)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_meta_profile'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_meta_profile varchar;   -- meta/profile (varchar)
        END IF; -- column (enc_meta_profile)
        IF NOT EXISTS ( -- column not exists (enc_identifier_use)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_identifier_use'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_identifier_use varchar;   -- identifier/use (varchar)
        END IF; -- column (enc_identifier_use)
        IF NOT EXISTS ( -- column not exists (enc_identifier_type_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_identifier_type_system'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_identifier_type_system varchar;   -- identifier/type/coding/system (varchar)
        END IF; -- column (enc_identifier_type_system)
        IF NOT EXISTS ( -- column not exists (enc_identifier_type_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_identifier_type_version'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_identifier_type_version varchar;   -- identifier/type/coding/version (varchar)
        END IF; -- column (enc_identifier_type_version)
        IF NOT EXISTS ( -- column not exists (enc_identifier_type_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_identifier_type_code'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_identifier_type_code varchar;   -- identifier/type/coding/code (varchar)
        END IF; -- column (enc_identifier_type_code)
        IF NOT EXISTS ( -- column not exists (enc_identifier_type_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_identifier_type_display'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_identifier_type_display varchar;   -- identifier/type/coding/display (varchar)
        END IF; -- column (enc_identifier_type_display)
        IF NOT EXISTS ( -- column not exists (enc_identifier_type_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_identifier_type_text'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_identifier_type_text varchar;   -- identifier/type/text (varchar)
        END IF; -- column (enc_identifier_type_text)
        IF NOT EXISTS ( -- column not exists (enc_identifier_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_identifier_system'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_identifier_system varchar;   -- identifier/system (varchar)
        END IF; -- column (enc_identifier_system)
        IF NOT EXISTS ( -- column not exists (enc_identifier_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_identifier_value'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_identifier_value varchar;   -- identifier/value (varchar)
        END IF; -- column (enc_identifier_value)
        IF NOT EXISTS ( -- column not exists (enc_identifier_start)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_identifier_start'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_identifier_start timestamp;   -- identifier/start (timestamp)
        END IF; -- column (enc_identifier_start)
        IF NOT EXISTS ( -- column not exists (enc_identifier_end)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_identifier_end'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_identifier_end timestamp;   -- identifier/end (timestamp)
        END IF; -- column (enc_identifier_end)
        IF NOT EXISTS ( -- column not exists (enc_patient_ref)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_patient_ref'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_patient_ref varchar;   -- subject/reference (varchar)
        END IF; -- column (enc_patient_ref)
        IF NOT EXISTS ( -- column not exists (enc_partof_ref)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_partof_ref'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_partof_ref varchar;   -- partOf/reference (varchar)
        END IF; -- column (enc_partof_ref)
        IF NOT EXISTS ( -- column not exists (enc_status)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_status'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_status varchar;   -- status (varchar)
        END IF; -- column (enc_status)
        IF NOT EXISTS ( -- column not exists (enc_class_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_class_system'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_class_system varchar;   -- class/system (varchar)
        END IF; -- column (enc_class_system)
        IF NOT EXISTS ( -- column not exists (enc_class_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_class_version'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_class_version varchar;   -- class/version (varchar)
        END IF; -- column (enc_class_version)
        IF NOT EXISTS ( -- column not exists (enc_class_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_class_code'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_class_code varchar;   -- class/code (varchar)
        END IF; -- column (enc_class_code)
        IF NOT EXISTS ( -- column not exists (enc_class_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_class_display'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_class_display varchar;   -- class/display (varchar)
        END IF; -- column (enc_class_display)
        IF NOT EXISTS ( -- column not exists (enc_type_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_type_system'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_type_system varchar;   -- type/coding/system (varchar)
        END IF; -- column (enc_type_system)
        IF NOT EXISTS ( -- column not exists (enc_type_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_type_version'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_type_version varchar;   -- type/coding/version (varchar)
        END IF; -- column (enc_type_version)
        IF NOT EXISTS ( -- column not exists (enc_type_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_type_code'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_type_code varchar;   -- type/coding/code (varchar)
        END IF; -- column (enc_type_code)
        IF NOT EXISTS ( -- column not exists (enc_type_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_type_display'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_type_display varchar;   -- type/coding/display (varchar)
        END IF; -- column (enc_type_display)
        IF NOT EXISTS ( -- column not exists (enc_type_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_type_text'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_type_text varchar;   -- type/text (varchar)
        END IF; -- column (enc_type_text)
        IF NOT EXISTS ( -- column not exists (enc_servicetype_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_servicetype_system'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_servicetype_system varchar;   -- serviceType/coding/system (varchar)
        END IF; -- column (enc_servicetype_system)
        IF NOT EXISTS ( -- column not exists (enc_servicetype_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_servicetype_version'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_servicetype_version varchar;   -- serviceType/coding/version (varchar)
        END IF; -- column (enc_servicetype_version)
        IF NOT EXISTS ( -- column not exists (enc_servicetype_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_servicetype_code'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_servicetype_code varchar;   -- serviceType/coding/code (varchar)
        END IF; -- column (enc_servicetype_code)
        IF NOT EXISTS ( -- column not exists (enc_servicetype_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_servicetype_display'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_servicetype_display varchar;   -- serviceType/coding/display (varchar)
        END IF; -- column (enc_servicetype_display)
        IF NOT EXISTS ( -- column not exists (enc_servicetype_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_servicetype_text'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_servicetype_text varchar;   -- serviceType/text (varchar)
        END IF; -- column (enc_servicetype_text)
        IF NOT EXISTS ( -- column not exists (enc_period_start)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_period_start'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_period_start timestamp;   -- period/start (timestamp)
        END IF; -- column (enc_period_start)
        IF NOT EXISTS ( -- column not exists (enc_period_end)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_period_end'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_period_end timestamp;   -- period/end (timestamp)
        END IF; -- column (enc_period_end)
        IF NOT EXISTS ( -- column not exists (enc_diagnosis_condition_ref)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_diagnosis_condition_ref'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_diagnosis_condition_ref varchar;   -- diagnosis/condition/reference (varchar)
        END IF; -- column (enc_diagnosis_condition_ref)
        IF NOT EXISTS ( -- column not exists (enc_diagnosis_use_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_diagnosis_use_system'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_diagnosis_use_system varchar;   -- diagnosis/use/coding/system (varchar)
        END IF; -- column (enc_diagnosis_use_system)
        IF NOT EXISTS ( -- column not exists (enc_diagnosis_use_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_diagnosis_use_version'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_diagnosis_use_version varchar;   -- diagnosis/use/coding/version (varchar)
        END IF; -- column (enc_diagnosis_use_version)
        IF NOT EXISTS ( -- column not exists (enc_diagnosis_use_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_diagnosis_use_code'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_diagnosis_use_code varchar;   -- diagnosis/use/coding/code (varchar)
        END IF; -- column (enc_diagnosis_use_code)
        IF NOT EXISTS ( -- column not exists (enc_diagnosis_use_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_diagnosis_use_display'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_diagnosis_use_display varchar;   -- diagnosis/use/coding/display (varchar)
        END IF; -- column (enc_diagnosis_use_display)
        IF NOT EXISTS ( -- column not exists (enc_diagnosis_use_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_diagnosis_use_text'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_diagnosis_use_text varchar;   -- diagnosis/use/text (varchar)
        END IF; -- column (enc_diagnosis_use_text)
        IF NOT EXISTS ( -- column not exists (enc_diagnosis_rank)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_diagnosis_rank'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_diagnosis_rank int;   -- diagnosis/rank (int)
        END IF; -- column (enc_diagnosis_rank)
        IF NOT EXISTS ( -- column not exists (enc_hospitalization_admitsource_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_hospitalization_admitsource_system'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_hospitalization_admitsource_system varchar;   -- hospitalization/admitSource/coding/system (varchar)
        END IF; -- column (enc_hospitalization_admitsource_system)
        IF NOT EXISTS ( -- column not exists (enc_hospitalization_admitsource_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_hospitalization_admitsource_version'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_hospitalization_admitsource_version varchar;   -- hospitalization/admitSource/coding/version (varchar)
        END IF; -- column (enc_hospitalization_admitsource_version)
        IF NOT EXISTS ( -- column not exists (enc_hospitalization_admitsource_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_hospitalization_admitsource_code'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_hospitalization_admitsource_code varchar;   -- hospitalization/admitSource/coding/code (varchar)
        END IF; -- column (enc_hospitalization_admitsource_code)
        IF NOT EXISTS ( -- column not exists (enc_hospitalization_admitsource_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_hospitalization_admitsource_display'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_hospitalization_admitsource_display varchar;   -- hospitalization/admitSource/coding/display (varchar)
        END IF; -- column (enc_hospitalization_admitsource_display)
        IF NOT EXISTS ( -- column not exists (enc_hospitalization_admitsource_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_hospitalization_admitsource_text'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_hospitalization_admitsource_text varchar;   -- hospitalization/admitSource/text (varchar)
        END IF; -- column (enc_hospitalization_admitsource_text)
        IF NOT EXISTS ( -- column not exists (enc_hospitalization_dischargedisposition_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_hospitalization_dischargedisposition_system'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_hospitalization_dischargedisposition_system varchar;   -- hospitalization/dischargeDisposition/coding/system (varchar)
        END IF; -- column (enc_hospitalization_dischargedisposition_system)
        IF NOT EXISTS ( -- column not exists (enc_hospitalization_dischargedisposition_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_hospitalization_dischargedisposition_version'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_hospitalization_dischargedisposition_version varchar;   -- hospitalization/dischargeDisposition/coding/version (varchar)
        END IF; -- column (enc_hospitalization_dischargedisposition_version)
        IF NOT EXISTS ( -- column not exists (enc_hospitalization_dischargedisposition_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_hospitalization_dischargedisposition_code'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_hospitalization_dischargedisposition_code varchar;   -- hospitalization/dischargeDisposition/coding/code (varchar)
        END IF; -- column (enc_hospitalization_dischargedisposition_code)
        IF NOT EXISTS ( -- column not exists (enc_hospitalization_dischargedisposition_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_hospitalization_dischargedisposition_display'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_hospitalization_dischargedisposition_display varchar;   -- hospitalization/dischargeDisposition/coding/display (varchar)
        END IF; -- column (enc_hospitalization_dischargedisposition_display)
        IF NOT EXISTS ( -- column not exists (enc_hospitalization_dischargedisposition_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_hospitalization_dischargedisposition_text'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_hospitalization_dischargedisposition_text varchar;   -- hospitalization/dischargeDisposition/text (varchar)
        END IF; -- column (enc_hospitalization_dischargedisposition_text)
        IF NOT EXISTS ( -- column not exists (enc_location_ref)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_location_ref'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_location_ref varchar;   -- location/location/reference (varchar)
        END IF; -- column (enc_location_ref)
        IF NOT EXISTS ( -- column not exists (enc_location_type)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_location_type'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_location_type varchar;   -- location/location/type (varchar)
        END IF; -- column (enc_location_type)
        IF NOT EXISTS ( -- column not exists (enc_location_identifier_use)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_location_identifier_use'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_location_identifier_use varchar;   -- location/location/identifier/use (varchar)
        END IF; -- column (enc_location_identifier_use)
        IF NOT EXISTS ( -- column not exists (enc_location_identifier_type_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_location_identifier_type_system'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_location_identifier_type_system varchar;   -- location/location/identifier/type/coding/system (varchar)
        END IF; -- column (enc_location_identifier_type_system)
        IF NOT EXISTS ( -- column not exists (enc_location_identifier_type_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_location_identifier_type_version'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_location_identifier_type_version varchar;   -- location/location/identifier/type/coding/version (varchar)
        END IF; -- column (enc_location_identifier_type_version)
        IF NOT EXISTS ( -- column not exists (enc_location_identifier_type_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_location_identifier_type_code'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_location_identifier_type_code varchar;   -- location/location/identifier/type/coding/code (varchar)
        END IF; -- column (enc_location_identifier_type_code)
        IF NOT EXISTS ( -- column not exists (enc_location_identifier_type_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_location_identifier_type_display'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_location_identifier_type_display varchar;   -- location/location/identifier/type/coding/display (varchar)
        END IF; -- column (enc_location_identifier_type_display)
        IF NOT EXISTS ( -- column not exists (enc_location_identifier_type_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_location_identifier_type_text'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_location_identifier_type_text varchar;   -- location/location/identifier/type/text (varchar)
        END IF; -- column (enc_location_identifier_type_text)
        IF NOT EXISTS ( -- column not exists (enc_location_identifier_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_location_identifier_system'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_location_identifier_system varchar;   -- location/location/identifier/system (varchar)
        END IF; -- column (enc_location_identifier_system)
        IF NOT EXISTS ( -- column not exists (enc_location_identifier_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_location_identifier_value'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_location_identifier_value varchar;   -- location/location/identifier/value (varchar)
        END IF; -- column (enc_location_identifier_value)
        IF NOT EXISTS ( -- column not exists (enc_location_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_location_display'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_location_display varchar;   -- location/location/display (varchar)
        END IF; -- column (enc_location_display)
        IF NOT EXISTS ( -- column not exists (enc_location_status)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_location_status'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_location_status varchar;   -- location/status (varchar)
        END IF; -- column (enc_location_status)
        IF NOT EXISTS ( -- column not exists (enc_location_physicaltype_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_location_physicaltype_system'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_location_physicaltype_system varchar;   -- location/physicalType/coding/system (varchar)
        END IF; -- column (enc_location_physicaltype_system)
        IF NOT EXISTS ( -- column not exists (enc_location_physicaltype_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_location_physicaltype_version'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_location_physicaltype_version varchar;   -- location/physicalType/coding/version (varchar)
        END IF; -- column (enc_location_physicaltype_version)
        IF NOT EXISTS ( -- column not exists (enc_location_physicaltype_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_location_physicaltype_code'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_location_physicaltype_code varchar;   -- location/physicalType/coding/code (varchar)
        END IF; -- column (enc_location_physicaltype_code)
        IF NOT EXISTS ( -- column not exists (enc_location_physicaltype_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_location_physicaltype_display'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_location_physicaltype_display varchar;   -- location/physicalType/coding/display (varchar)
        END IF; -- column (enc_location_physicaltype_display)
        IF NOT EXISTS ( -- column not exists (enc_location_physicaltype_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_location_physicaltype_text'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_location_physicaltype_text varchar;   -- location/physicalType/text (varchar)
        END IF; -- column (enc_location_physicaltype_text)
        IF NOT EXISTS ( -- column not exists (enc_serviceprovider_ref)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_serviceprovider_ref'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_serviceprovider_ref varchar;   -- serviceProvider/reference (varchar)
        END IF; -- column (enc_serviceprovider_ref)
        IF NOT EXISTS ( -- column not exists (enc_serviceprovider_type)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_serviceprovider_type'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_serviceprovider_type varchar;   -- serviceProvider/type (varchar)
        END IF; -- column (enc_serviceprovider_type)
        IF NOT EXISTS ( -- column not exists (enc_serviceprovider_identifier_use)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_serviceprovider_identifier_use'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_serviceprovider_identifier_use varchar;   -- serviceProvider/identifier/use (varchar)
        END IF; -- column (enc_serviceprovider_identifier_use)
        IF NOT EXISTS ( -- column not exists (enc_serviceprovider_identifier_type_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_serviceprovider_identifier_type_system'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_serviceprovider_identifier_type_system varchar;   -- serviceProvider/identifier/type/coding/system (varchar)
        END IF; -- column (enc_serviceprovider_identifier_type_system)
        IF NOT EXISTS ( -- column not exists (enc_serviceprovider_identifier_type_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_serviceprovider_identifier_type_version'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_serviceprovider_identifier_type_version varchar;   -- serviceProvider/identifier/type/coding/version (varchar)
        END IF; -- column (enc_serviceprovider_identifier_type_version)
        IF NOT EXISTS ( -- column not exists (enc_serviceprovider_identifier_type_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_serviceprovider_identifier_type_code'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_serviceprovider_identifier_type_code varchar;   -- serviceProvider/identifier/type/coding/code (varchar)
        END IF; -- column (enc_serviceprovider_identifier_type_code)
        IF NOT EXISTS ( -- column not exists (enc_serviceprovider_identifier_type_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_serviceprovider_identifier_type_display'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_serviceprovider_identifier_type_display varchar;   -- serviceProvider/identifier/type/coding/display (varchar)
        END IF; -- column (enc_serviceprovider_identifier_type_display)
        IF NOT EXISTS ( -- column not exists (enc_serviceprovider_identifier_type_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_serviceprovider_identifier_type_text'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_serviceprovider_identifier_type_text varchar;   -- serviceProvider/identifier/type/text (varchar)
        END IF; -- column (enc_serviceprovider_identifier_type_text)
        IF NOT EXISTS ( -- column not exists (enc_serviceprovider_identifier_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_serviceprovider_identifier_system'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_serviceprovider_identifier_system varchar;   -- serviceProvider/identifier/system (varchar)
        END IF; -- column (enc_serviceprovider_identifier_system)
        IF NOT EXISTS ( -- column not exists (enc_serviceprovider_identifier_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_serviceprovider_identifier_value'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_serviceprovider_identifier_value varchar;   -- serviceProvider/identifier/value (varchar)
        END IF; -- column (enc_serviceprovider_identifier_value)
        IF NOT EXISTS ( -- column not exists (enc_serviceprovider_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'enc_serviceprovider_display'
        ) THEN
            ALTER TABLE cds2db_in.encounter ADD enc_serviceprovider_display varchar;   -- serviceProvider/display (varchar)
        END IF; -- column (enc_serviceprovider_display)

-- Hash column for comparison on data-bearing columns -------------------------------------------
        IF EXISTS ( -- column exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter' AND column_name = 'hash_index_col'
        ) THEN
            IF NOT EXISTS ( -- column exists
                SELECT 1 FROM information_schema.columns WHERE table_schema = 'cds2db_in' AND table_name = 'encounter' AND column_name = 'hash_index_col'
                AND trim(replace(replace(generation_expression::TEXT,'(',''),')','')) != trim(replace(replace('
	         COALESCE(db.to_char_immutable(enc_id), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_identifier_use), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_identifier_type_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_identifier_type_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_identifier_type_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_identifier_type_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_identifier_type_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_identifier_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_identifier_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_identifier_start), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_identifier_end), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_patient_ref), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_partof_ref), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_status), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_class_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_class_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_class_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_class_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_type_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_type_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_type_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_type_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_type_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_servicetype_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_servicetype_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_servicetype_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_servicetype_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_servicetype_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_period_start), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_period_end), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_diagnosis_condition_ref), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_diagnosis_use_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_diagnosis_use_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_diagnosis_use_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_diagnosis_use_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_diagnosis_use_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_diagnosis_rank), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_hospitalization_admitsource_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_hospitalization_admitsource_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_hospitalization_admitsource_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_hospitalization_admitsource_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_hospitalization_admitsource_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_hospitalization_dischargedisposition_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_hospitalization_dischargedisposition_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_hospitalization_dischargedisposition_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_hospitalization_dischargedisposition_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_hospitalization_dischargedisposition_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_location_ref), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_location_type), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_location_identifier_use), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_location_identifier_type_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_location_identifier_type_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_location_identifier_type_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_location_identifier_type_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_location_identifier_type_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_location_identifier_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_location_identifier_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_location_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_location_status), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_location_physicaltype_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_location_physicaltype_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_location_physicaltype_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_location_physicaltype_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_location_physicaltype_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_serviceprovider_ref), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_serviceprovider_type), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_serviceprovider_identifier_use), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_serviceprovider_identifier_type_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_serviceprovider_identifier_type_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_serviceprovider_identifier_type_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_serviceprovider_identifier_type_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_serviceprovider_identifier_type_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_serviceprovider_identifier_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_serviceprovider_identifier_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(enc_serviceprovider_display), ''#NULL#'') || ''|||'' ||''#''
                ','(',''),')',''))
            ) THEN
            -- Delete the old hash column so that a new one can be created
            ALTER TABLE cds2db_in.encounter DROP COLUMN hash_index_col;

            -- Creating the hash column
            ALTER TABLE cds2db_in.encounter ADD
            hash_index_col TEXT GENERATED ALWAYS AS (
            md5(
	         COALESCE(db.to_char_immutable(enc_id), '#NULL#') || '|||' || -- hash from: id (enc_id)
          COALESCE(db.to_char_immutable(enc_identifier_use), '#NULL#') || '|||' || -- hash from: identifier/use (enc_identifier_use)
          COALESCE(db.to_char_immutable(enc_identifier_type_system), '#NULL#') || '|||' || -- hash from: identifier/type/coding/system (enc_identifier_type_system)
          COALESCE(db.to_char_immutable(enc_identifier_type_version), '#NULL#') || '|||' || -- hash from: identifier/type/coding/version (enc_identifier_type_version)
          COALESCE(db.to_char_immutable(enc_identifier_type_code), '#NULL#') || '|||' || -- hash from: identifier/type/coding/code (enc_identifier_type_code)
          COALESCE(db.to_char_immutable(enc_identifier_type_display), '#NULL#') || '|||' || -- hash from: identifier/type/coding/display (enc_identifier_type_display)
          COALESCE(db.to_char_immutable(enc_identifier_type_text), '#NULL#') || '|||' || -- hash from: identifier/type/text (enc_identifier_type_text)
          COALESCE(db.to_char_immutable(enc_identifier_system), '#NULL#') || '|||' || -- hash from: identifier/system (enc_identifier_system)
          COALESCE(db.to_char_immutable(enc_identifier_value), '#NULL#') || '|||' || -- hash from: identifier/value (enc_identifier_value)
          COALESCE(db.to_char_immutable(enc_identifier_start), '#NULL#') || '|||' || -- hash from: identifier/start (enc_identifier_start)
          COALESCE(db.to_char_immutable(enc_identifier_end), '#NULL#') || '|||' || -- hash from: identifier/end (enc_identifier_end)
          COALESCE(db.to_char_immutable(enc_patient_ref), '#NULL#') || '|||' || -- hash from: subject/reference (enc_patient_ref)
          COALESCE(db.to_char_immutable(enc_partof_ref), '#NULL#') || '|||' || -- hash from: partOf/reference (enc_partof_ref)
          COALESCE(db.to_char_immutable(enc_status), '#NULL#') || '|||' || -- hash from: status (enc_status)
          COALESCE(db.to_char_immutable(enc_class_system), '#NULL#') || '|||' || -- hash from: class/system (enc_class_system)
          COALESCE(db.to_char_immutable(enc_class_version), '#NULL#') || '|||' || -- hash from: class/version (enc_class_version)
          COALESCE(db.to_char_immutable(enc_class_code), '#NULL#') || '|||' || -- hash from: class/code (enc_class_code)
          COALESCE(db.to_char_immutable(enc_class_display), '#NULL#') || '|||' || -- hash from: class/display (enc_class_display)
          COALESCE(db.to_char_immutable(enc_type_system), '#NULL#') || '|||' || -- hash from: type/coding/system (enc_type_system)
          COALESCE(db.to_char_immutable(enc_type_version), '#NULL#') || '|||' || -- hash from: type/coding/version (enc_type_version)
          COALESCE(db.to_char_immutable(enc_type_code), '#NULL#') || '|||' || -- hash from: type/coding/code (enc_type_code)
          COALESCE(db.to_char_immutable(enc_type_display), '#NULL#') || '|||' || -- hash from: type/coding/display (enc_type_display)
          COALESCE(db.to_char_immutable(enc_type_text), '#NULL#') || '|||' || -- hash from: type/text (enc_type_text)
          COALESCE(db.to_char_immutable(enc_servicetype_system), '#NULL#') || '|||' || -- hash from: serviceType/coding/system (enc_servicetype_system)
          COALESCE(db.to_char_immutable(enc_servicetype_version), '#NULL#') || '|||' || -- hash from: serviceType/coding/version (enc_servicetype_version)
          COALESCE(db.to_char_immutable(enc_servicetype_code), '#NULL#') || '|||' || -- hash from: serviceType/coding/code (enc_servicetype_code)
          COALESCE(db.to_char_immutable(enc_servicetype_display), '#NULL#') || '|||' || -- hash from: serviceType/coding/display (enc_servicetype_display)
          COALESCE(db.to_char_immutable(enc_servicetype_text), '#NULL#') || '|||' || -- hash from: serviceType/text (enc_servicetype_text)
          COALESCE(db.to_char_immutable(enc_period_start), '#NULL#') || '|||' || -- hash from: period/start (enc_period_start)
          COALESCE(db.to_char_immutable(enc_period_end), '#NULL#') || '|||' || -- hash from: period/end (enc_period_end)
          COALESCE(db.to_char_immutable(enc_diagnosis_condition_ref), '#NULL#') || '|||' || -- hash from: diagnosis/condition/reference (enc_diagnosis_condition_ref)
          COALESCE(db.to_char_immutable(enc_diagnosis_use_system), '#NULL#') || '|||' || -- hash from: diagnosis/use/coding/system (enc_diagnosis_use_system)
          COALESCE(db.to_char_immutable(enc_diagnosis_use_version), '#NULL#') || '|||' || -- hash from: diagnosis/use/coding/version (enc_diagnosis_use_version)
          COALESCE(db.to_char_immutable(enc_diagnosis_use_code), '#NULL#') || '|||' || -- hash from: diagnosis/use/coding/code (enc_diagnosis_use_code)
          COALESCE(db.to_char_immutable(enc_diagnosis_use_display), '#NULL#') || '|||' || -- hash from: diagnosis/use/coding/display (enc_diagnosis_use_display)
          COALESCE(db.to_char_immutable(enc_diagnosis_use_text), '#NULL#') || '|||' || -- hash from: diagnosis/use/text (enc_diagnosis_use_text)
          COALESCE(db.to_char_immutable(enc_diagnosis_rank), '#NULL#') || '|||' || -- hash from: diagnosis/rank (enc_diagnosis_rank)
          COALESCE(db.to_char_immutable(enc_hospitalization_admitsource_system), '#NULL#') || '|||' || -- hash from: hospitalization/admitSource/coding/system (enc_hospitalization_admitsource_system)
          COALESCE(db.to_char_immutable(enc_hospitalization_admitsource_version), '#NULL#') || '|||' || -- hash from: hospitalization/admitSource/coding/version (enc_hospitalization_admitsource_version)
          COALESCE(db.to_char_immutable(enc_hospitalization_admitsource_code), '#NULL#') || '|||' || -- hash from: hospitalization/admitSource/coding/code (enc_hospitalization_admitsource_code)
          COALESCE(db.to_char_immutable(enc_hospitalization_admitsource_display), '#NULL#') || '|||' || -- hash from: hospitalization/admitSource/coding/display (enc_hospitalization_admitsource_display)
          COALESCE(db.to_char_immutable(enc_hospitalization_admitsource_text), '#NULL#') || '|||' || -- hash from: hospitalization/admitSource/text (enc_hospitalization_admitsource_text)
          COALESCE(db.to_char_immutable(enc_hospitalization_dischargedisposition_system), '#NULL#') || '|||' || -- hash from: hospitalization/dischargeDisposition/coding/system (enc_hospitalization_dischargedisposition_system)
          COALESCE(db.to_char_immutable(enc_hospitalization_dischargedisposition_version), '#NULL#') || '|||' || -- hash from: hospitalization/dischargeDisposition/coding/version (enc_hospitalization_dischargedisposition_version)
          COALESCE(db.to_char_immutable(enc_hospitalization_dischargedisposition_code), '#NULL#') || '|||' || -- hash from: hospitalization/dischargeDisposition/coding/code (enc_hospitalization_dischargedisposition_code)
          COALESCE(db.to_char_immutable(enc_hospitalization_dischargedisposition_display), '#NULL#') || '|||' || -- hash from: hospitalization/dischargeDisposition/coding/display (enc_hospitalization_dischargedisposition_display)
          COALESCE(db.to_char_immutable(enc_hospitalization_dischargedisposition_text), '#NULL#') || '|||' || -- hash from: hospitalization/dischargeDisposition/text (enc_hospitalization_dischargedisposition_text)
          COALESCE(db.to_char_immutable(enc_location_ref), '#NULL#') || '|||' || -- hash from: location/location/reference (enc_location_ref)
          COALESCE(db.to_char_immutable(enc_location_type), '#NULL#') || '|||' || -- hash from: location/location/type (enc_location_type)
          COALESCE(db.to_char_immutable(enc_location_identifier_use), '#NULL#') || '|||' || -- hash from: location/location/identifier/use (enc_location_identifier_use)
          COALESCE(db.to_char_immutable(enc_location_identifier_type_system), '#NULL#') || '|||' || -- hash from: location/location/identifier/type/coding/system (enc_location_identifier_type_system)
          COALESCE(db.to_char_immutable(enc_location_identifier_type_version), '#NULL#') || '|||' || -- hash from: location/location/identifier/type/coding/version (enc_location_identifier_type_version)
          COALESCE(db.to_char_immutable(enc_location_identifier_type_code), '#NULL#') || '|||' || -- hash from: location/location/identifier/type/coding/code (enc_location_identifier_type_code)
          COALESCE(db.to_char_immutable(enc_location_identifier_type_display), '#NULL#') || '|||' || -- hash from: location/location/identifier/type/coding/display (enc_location_identifier_type_display)
          COALESCE(db.to_char_immutable(enc_location_identifier_type_text), '#NULL#') || '|||' || -- hash from: location/location/identifier/type/text (enc_location_identifier_type_text)
          COALESCE(db.to_char_immutable(enc_location_identifier_system), '#NULL#') || '|||' || -- hash from: location/location/identifier/system (enc_location_identifier_system)
          COALESCE(db.to_char_immutable(enc_location_identifier_value), '#NULL#') || '|||' || -- hash from: location/location/identifier/value (enc_location_identifier_value)
          COALESCE(db.to_char_immutable(enc_location_display), '#NULL#') || '|||' || -- hash from: location/location/display (enc_location_display)
          COALESCE(db.to_char_immutable(enc_location_status), '#NULL#') || '|||' || -- hash from: location/status (enc_location_status)
          COALESCE(db.to_char_immutable(enc_location_physicaltype_system), '#NULL#') || '|||' || -- hash from: location/physicalType/coding/system (enc_location_physicaltype_system)
          COALESCE(db.to_char_immutable(enc_location_physicaltype_version), '#NULL#') || '|||' || -- hash from: location/physicalType/coding/version (enc_location_physicaltype_version)
          COALESCE(db.to_char_immutable(enc_location_physicaltype_code), '#NULL#') || '|||' || -- hash from: location/physicalType/coding/code (enc_location_physicaltype_code)
          COALESCE(db.to_char_immutable(enc_location_physicaltype_display), '#NULL#') || '|||' || -- hash from: location/physicalType/coding/display (enc_location_physicaltype_display)
          COALESCE(db.to_char_immutable(enc_location_physicaltype_text), '#NULL#') || '|||' || -- hash from: location/physicalType/text (enc_location_physicaltype_text)
          COALESCE(db.to_char_immutable(enc_serviceprovider_ref), '#NULL#') || '|||' || -- hash from: serviceProvider/reference (enc_serviceprovider_ref)
          COALESCE(db.to_char_immutable(enc_serviceprovider_type), '#NULL#') || '|||' || -- hash from: serviceProvider/type (enc_serviceprovider_type)
          COALESCE(db.to_char_immutable(enc_serviceprovider_identifier_use), '#NULL#') || '|||' || -- hash from: serviceProvider/identifier/use (enc_serviceprovider_identifier_use)
          COALESCE(db.to_char_immutable(enc_serviceprovider_identifier_type_system), '#NULL#') || '|||' || -- hash from: serviceProvider/identifier/type/coding/system (enc_serviceprovider_identifier_type_system)
          COALESCE(db.to_char_immutable(enc_serviceprovider_identifier_type_version), '#NULL#') || '|||' || -- hash from: serviceProvider/identifier/type/coding/version (enc_serviceprovider_identifier_type_version)
          COALESCE(db.to_char_immutable(enc_serviceprovider_identifier_type_code), '#NULL#') || '|||' || -- hash from: serviceProvider/identifier/type/coding/code (enc_serviceprovider_identifier_type_code)
          COALESCE(db.to_char_immutable(enc_serviceprovider_identifier_type_display), '#NULL#') || '|||' || -- hash from: serviceProvider/identifier/type/coding/display (enc_serviceprovider_identifier_type_display)
          COALESCE(db.to_char_immutable(enc_serviceprovider_identifier_type_text), '#NULL#') || '|||' || -- hash from: serviceProvider/identifier/type/text (enc_serviceprovider_identifier_type_text)
          COALESCE(db.to_char_immutable(enc_serviceprovider_identifier_system), '#NULL#') || '|||' || -- hash from: serviceProvider/identifier/system (enc_serviceprovider_identifier_system)
          COALESCE(db.to_char_immutable(enc_serviceprovider_identifier_value), '#NULL#') || '|||' || -- hash from: serviceProvider/identifier/value (enc_serviceprovider_identifier_value)
          COALESCE(db.to_char_immutable(enc_serviceprovider_display), '#NULL#') || '|||' || -- hash from: serviceProvider/display (enc_serviceprovider_display)
                 '#'
               )
            ) STORED; -- Column for hash value for comparing FHIR data - collion check in second step hash_index_col
            END IF; -- currend hash definition
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'encounter'
            AND column_name = 'hash_index_col'
        ) THEN
            -- Creating the hash column
            ALTER TABLE cds2db_in.encounter ADD
            hash_index_col TEXT GENERATED ALWAYS AS (
            md5(
	         COALESCE(db.to_char_immutable(enc_id), '#NULL#') || '|||' || -- hash from: id (enc_id)
          COALESCE(db.to_char_immutable(enc_identifier_use), '#NULL#') || '|||' || -- hash from: identifier/use (enc_identifier_use)
          COALESCE(db.to_char_immutable(enc_identifier_type_system), '#NULL#') || '|||' || -- hash from: identifier/type/coding/system (enc_identifier_type_system)
          COALESCE(db.to_char_immutable(enc_identifier_type_version), '#NULL#') || '|||' || -- hash from: identifier/type/coding/version (enc_identifier_type_version)
          COALESCE(db.to_char_immutable(enc_identifier_type_code), '#NULL#') || '|||' || -- hash from: identifier/type/coding/code (enc_identifier_type_code)
          COALESCE(db.to_char_immutable(enc_identifier_type_display), '#NULL#') || '|||' || -- hash from: identifier/type/coding/display (enc_identifier_type_display)
          COALESCE(db.to_char_immutable(enc_identifier_type_text), '#NULL#') || '|||' || -- hash from: identifier/type/text (enc_identifier_type_text)
          COALESCE(db.to_char_immutable(enc_identifier_system), '#NULL#') || '|||' || -- hash from: identifier/system (enc_identifier_system)
          COALESCE(db.to_char_immutable(enc_identifier_value), '#NULL#') || '|||' || -- hash from: identifier/value (enc_identifier_value)
          COALESCE(db.to_char_immutable(enc_identifier_start), '#NULL#') || '|||' || -- hash from: identifier/start (enc_identifier_start)
          COALESCE(db.to_char_immutable(enc_identifier_end), '#NULL#') || '|||' || -- hash from: identifier/end (enc_identifier_end)
          COALESCE(db.to_char_immutable(enc_patient_ref), '#NULL#') || '|||' || -- hash from: subject/reference (enc_patient_ref)
          COALESCE(db.to_char_immutable(enc_partof_ref), '#NULL#') || '|||' || -- hash from: partOf/reference (enc_partof_ref)
          COALESCE(db.to_char_immutable(enc_status), '#NULL#') || '|||' || -- hash from: status (enc_status)
          COALESCE(db.to_char_immutable(enc_class_system), '#NULL#') || '|||' || -- hash from: class/system (enc_class_system)
          COALESCE(db.to_char_immutable(enc_class_version), '#NULL#') || '|||' || -- hash from: class/version (enc_class_version)
          COALESCE(db.to_char_immutable(enc_class_code), '#NULL#') || '|||' || -- hash from: class/code (enc_class_code)
          COALESCE(db.to_char_immutable(enc_class_display), '#NULL#') || '|||' || -- hash from: class/display (enc_class_display)
          COALESCE(db.to_char_immutable(enc_type_system), '#NULL#') || '|||' || -- hash from: type/coding/system (enc_type_system)
          COALESCE(db.to_char_immutable(enc_type_version), '#NULL#') || '|||' || -- hash from: type/coding/version (enc_type_version)
          COALESCE(db.to_char_immutable(enc_type_code), '#NULL#') || '|||' || -- hash from: type/coding/code (enc_type_code)
          COALESCE(db.to_char_immutable(enc_type_display), '#NULL#') || '|||' || -- hash from: type/coding/display (enc_type_display)
          COALESCE(db.to_char_immutable(enc_type_text), '#NULL#') || '|||' || -- hash from: type/text (enc_type_text)
          COALESCE(db.to_char_immutable(enc_servicetype_system), '#NULL#') || '|||' || -- hash from: serviceType/coding/system (enc_servicetype_system)
          COALESCE(db.to_char_immutable(enc_servicetype_version), '#NULL#') || '|||' || -- hash from: serviceType/coding/version (enc_servicetype_version)
          COALESCE(db.to_char_immutable(enc_servicetype_code), '#NULL#') || '|||' || -- hash from: serviceType/coding/code (enc_servicetype_code)
          COALESCE(db.to_char_immutable(enc_servicetype_display), '#NULL#') || '|||' || -- hash from: serviceType/coding/display (enc_servicetype_display)
          COALESCE(db.to_char_immutable(enc_servicetype_text), '#NULL#') || '|||' || -- hash from: serviceType/text (enc_servicetype_text)
          COALESCE(db.to_char_immutable(enc_period_start), '#NULL#') || '|||' || -- hash from: period/start (enc_period_start)
          COALESCE(db.to_char_immutable(enc_period_end), '#NULL#') || '|||' || -- hash from: period/end (enc_period_end)
          COALESCE(db.to_char_immutable(enc_diagnosis_condition_ref), '#NULL#') || '|||' || -- hash from: diagnosis/condition/reference (enc_diagnosis_condition_ref)
          COALESCE(db.to_char_immutable(enc_diagnosis_use_system), '#NULL#') || '|||' || -- hash from: diagnosis/use/coding/system (enc_diagnosis_use_system)
          COALESCE(db.to_char_immutable(enc_diagnosis_use_version), '#NULL#') || '|||' || -- hash from: diagnosis/use/coding/version (enc_diagnosis_use_version)
          COALESCE(db.to_char_immutable(enc_diagnosis_use_code), '#NULL#') || '|||' || -- hash from: diagnosis/use/coding/code (enc_diagnosis_use_code)
          COALESCE(db.to_char_immutable(enc_diagnosis_use_display), '#NULL#') || '|||' || -- hash from: diagnosis/use/coding/display (enc_diagnosis_use_display)
          COALESCE(db.to_char_immutable(enc_diagnosis_use_text), '#NULL#') || '|||' || -- hash from: diagnosis/use/text (enc_diagnosis_use_text)
          COALESCE(db.to_char_immutable(enc_diagnosis_rank), '#NULL#') || '|||' || -- hash from: diagnosis/rank (enc_diagnosis_rank)
          COALESCE(db.to_char_immutable(enc_hospitalization_admitsource_system), '#NULL#') || '|||' || -- hash from: hospitalization/admitSource/coding/system (enc_hospitalization_admitsource_system)
          COALESCE(db.to_char_immutable(enc_hospitalization_admitsource_version), '#NULL#') || '|||' || -- hash from: hospitalization/admitSource/coding/version (enc_hospitalization_admitsource_version)
          COALESCE(db.to_char_immutable(enc_hospitalization_admitsource_code), '#NULL#') || '|||' || -- hash from: hospitalization/admitSource/coding/code (enc_hospitalization_admitsource_code)
          COALESCE(db.to_char_immutable(enc_hospitalization_admitsource_display), '#NULL#') || '|||' || -- hash from: hospitalization/admitSource/coding/display (enc_hospitalization_admitsource_display)
          COALESCE(db.to_char_immutable(enc_hospitalization_admitsource_text), '#NULL#') || '|||' || -- hash from: hospitalization/admitSource/text (enc_hospitalization_admitsource_text)
          COALESCE(db.to_char_immutable(enc_hospitalization_dischargedisposition_system), '#NULL#') || '|||' || -- hash from: hospitalization/dischargeDisposition/coding/system (enc_hospitalization_dischargedisposition_system)
          COALESCE(db.to_char_immutable(enc_hospitalization_dischargedisposition_version), '#NULL#') || '|||' || -- hash from: hospitalization/dischargeDisposition/coding/version (enc_hospitalization_dischargedisposition_version)
          COALESCE(db.to_char_immutable(enc_hospitalization_dischargedisposition_code), '#NULL#') || '|||' || -- hash from: hospitalization/dischargeDisposition/coding/code (enc_hospitalization_dischargedisposition_code)
          COALESCE(db.to_char_immutable(enc_hospitalization_dischargedisposition_display), '#NULL#') || '|||' || -- hash from: hospitalization/dischargeDisposition/coding/display (enc_hospitalization_dischargedisposition_display)
          COALESCE(db.to_char_immutable(enc_hospitalization_dischargedisposition_text), '#NULL#') || '|||' || -- hash from: hospitalization/dischargeDisposition/text (enc_hospitalization_dischargedisposition_text)
          COALESCE(db.to_char_immutable(enc_location_ref), '#NULL#') || '|||' || -- hash from: location/location/reference (enc_location_ref)
          COALESCE(db.to_char_immutable(enc_location_type), '#NULL#') || '|||' || -- hash from: location/location/type (enc_location_type)
          COALESCE(db.to_char_immutable(enc_location_identifier_use), '#NULL#') || '|||' || -- hash from: location/location/identifier/use (enc_location_identifier_use)
          COALESCE(db.to_char_immutable(enc_location_identifier_type_system), '#NULL#') || '|||' || -- hash from: location/location/identifier/type/coding/system (enc_location_identifier_type_system)
          COALESCE(db.to_char_immutable(enc_location_identifier_type_version), '#NULL#') || '|||' || -- hash from: location/location/identifier/type/coding/version (enc_location_identifier_type_version)
          COALESCE(db.to_char_immutable(enc_location_identifier_type_code), '#NULL#') || '|||' || -- hash from: location/location/identifier/type/coding/code (enc_location_identifier_type_code)
          COALESCE(db.to_char_immutable(enc_location_identifier_type_display), '#NULL#') || '|||' || -- hash from: location/location/identifier/type/coding/display (enc_location_identifier_type_display)
          COALESCE(db.to_char_immutable(enc_location_identifier_type_text), '#NULL#') || '|||' || -- hash from: location/location/identifier/type/text (enc_location_identifier_type_text)
          COALESCE(db.to_char_immutable(enc_location_identifier_system), '#NULL#') || '|||' || -- hash from: location/location/identifier/system (enc_location_identifier_system)
          COALESCE(db.to_char_immutable(enc_location_identifier_value), '#NULL#') || '|||' || -- hash from: location/location/identifier/value (enc_location_identifier_value)
          COALESCE(db.to_char_immutable(enc_location_display), '#NULL#') || '|||' || -- hash from: location/location/display (enc_location_display)
          COALESCE(db.to_char_immutable(enc_location_status), '#NULL#') || '|||' || -- hash from: location/status (enc_location_status)
          COALESCE(db.to_char_immutable(enc_location_physicaltype_system), '#NULL#') || '|||' || -- hash from: location/physicalType/coding/system (enc_location_physicaltype_system)
          COALESCE(db.to_char_immutable(enc_location_physicaltype_version), '#NULL#') || '|||' || -- hash from: location/physicalType/coding/version (enc_location_physicaltype_version)
          COALESCE(db.to_char_immutable(enc_location_physicaltype_code), '#NULL#') || '|||' || -- hash from: location/physicalType/coding/code (enc_location_physicaltype_code)
          COALESCE(db.to_char_immutable(enc_location_physicaltype_display), '#NULL#') || '|||' || -- hash from: location/physicalType/coding/display (enc_location_physicaltype_display)
          COALESCE(db.to_char_immutable(enc_location_physicaltype_text), '#NULL#') || '|||' || -- hash from: location/physicalType/text (enc_location_physicaltype_text)
          COALESCE(db.to_char_immutable(enc_serviceprovider_ref), '#NULL#') || '|||' || -- hash from: serviceProvider/reference (enc_serviceprovider_ref)
          COALESCE(db.to_char_immutable(enc_serviceprovider_type), '#NULL#') || '|||' || -- hash from: serviceProvider/type (enc_serviceprovider_type)
          COALESCE(db.to_char_immutable(enc_serviceprovider_identifier_use), '#NULL#') || '|||' || -- hash from: serviceProvider/identifier/use (enc_serviceprovider_identifier_use)
          COALESCE(db.to_char_immutable(enc_serviceprovider_identifier_type_system), '#NULL#') || '|||' || -- hash from: serviceProvider/identifier/type/coding/system (enc_serviceprovider_identifier_type_system)
          COALESCE(db.to_char_immutable(enc_serviceprovider_identifier_type_version), '#NULL#') || '|||' || -- hash from: serviceProvider/identifier/type/coding/version (enc_serviceprovider_identifier_type_version)
          COALESCE(db.to_char_immutable(enc_serviceprovider_identifier_type_code), '#NULL#') || '|||' || -- hash from: serviceProvider/identifier/type/coding/code (enc_serviceprovider_identifier_type_code)
          COALESCE(db.to_char_immutable(enc_serviceprovider_identifier_type_display), '#NULL#') || '|||' || -- hash from: serviceProvider/identifier/type/coding/display (enc_serviceprovider_identifier_type_display)
          COALESCE(db.to_char_immutable(enc_serviceprovider_identifier_type_text), '#NULL#') || '|||' || -- hash from: serviceProvider/identifier/type/text (enc_serviceprovider_identifier_type_text)
          COALESCE(db.to_char_immutable(enc_serviceprovider_identifier_system), '#NULL#') || '|||' || -- hash from: serviceProvider/identifier/system (enc_serviceprovider_identifier_system)
          COALESCE(db.to_char_immutable(enc_serviceprovider_identifier_value), '#NULL#') || '|||' || -- hash from: serviceProvider/identifier/value (enc_serviceprovider_identifier_value)
          COALESCE(db.to_char_immutable(enc_serviceprovider_display), '#NULL#') || '|||' || -- hash from: serviceProvider/display (enc_serviceprovider_display)
                 '#'
               )
            ) STORED; -- Column for hash value for comparing FHIR data - collion check in second step hash_index_col
        END IF; -- column
    END IF; -- Table
END
$$;
-- Table "patient" in schema "cds2db_in"
-------------------------------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS cds2db_in.patient (
  patient_id int PRIMARY KEY DEFAULT nextval('db.db_seq') -- Primary key of the entity
);

DO
$$
DECLARE
    IF EXISTS ( -- Table exists
        SELECT 1 FROM information_schema.columns 
        WHERE table_schema = 'cds2db_in' AND table_name = 'patient'
    ) THEN
        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'patient'
            AND column_name = 'input_datetime'
        ) THEN
            ALTER TABLE cds2db_in.patient ADD patient_raw_id int NOT NULL; -- Primary key of the corresponding raw table
            NULL;
        END IF; -- column

-- Organizational items - fixed for each database table -----------------------------------------
        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'patient'
            AND column_name = 'input_datetime'
        ) THEN
            ALTER TABLE cds2db_in.patient ADD input_datetime TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP; -- Time at which data record was created
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'patient'
            AND column_name = 'last_check_datetime'
        ) THEN
            ALTER TABLE cds2db_in.patient ADD last_check_datetime TIMESTAMP DEFAULT NULL; -- Time at which data record was last checked
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'patient'
            AND column_name = 'current_dataset_status'
        ) THEN
            ALTER TABLE cds2db_in.patient ADD current_dataset_status VARCHAR DEFAULT 'input'; -- Processing status of the data record
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'patient'
            AND column_name = 'input_processing_nr'
        ) THEN
            ALTER TABLE cds2db_in.patient ADD input_processing_nr INT; -- (First) Processing number of the data record
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'patient'
            AND column_name = 'last_processing_nr'
        ) THEN
            ALTER TABLE cds2db_in.patient ADD last_processing_nr INT; -- Last processing number of the data record
        END IF; -- column

-- Data-leading columns -------------------------------------------------------------------------
        IF NOT EXISTS ( -- column not exists (pat_id)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'patient'
            AND column_name = 'pat_id'
        ) THEN
            ALTER TABLE cds2db_in.patient ADD pat_id varchar;   -- id (varchar)
        END IF; -- column (pat_id)
        IF NOT EXISTS ( -- column not exists (pat_meta_versionid)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'patient'
            AND column_name = 'pat_meta_versionid'
        ) THEN
            ALTER TABLE cds2db_in.patient ADD pat_meta_versionid varchar;   -- meta/versionId (varchar)
        END IF; -- column (pat_meta_versionid)
        IF NOT EXISTS ( -- column not exists (pat_meta_lastupdated)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'patient'
            AND column_name = 'pat_meta_lastupdated'
        ) THEN
            ALTER TABLE cds2db_in.patient ADD pat_meta_lastupdated timestamp;   -- meta/lastUpdated (timestamp)
        END IF; -- column (pat_meta_lastupdated)
        IF NOT EXISTS ( -- column not exists (pat_meta_profile)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'patient'
            AND column_name = 'pat_meta_profile'
        ) THEN
            ALTER TABLE cds2db_in.patient ADD pat_meta_profile varchar;   -- meta/profile (varchar)
        END IF; -- column (pat_meta_profile)
        IF NOT EXISTS ( -- column not exists (pat_identifier_use)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'patient'
            AND column_name = 'pat_identifier_use'
        ) THEN
            ALTER TABLE cds2db_in.patient ADD pat_identifier_use varchar;   -- identifier/use (varchar)
        END IF; -- column (pat_identifier_use)
        IF NOT EXISTS ( -- column not exists (pat_identifier_type_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'patient'
            AND column_name = 'pat_identifier_type_system'
        ) THEN
            ALTER TABLE cds2db_in.patient ADD pat_identifier_type_system varchar;   -- identifier/type/coding/system (varchar)
        END IF; -- column (pat_identifier_type_system)
        IF NOT EXISTS ( -- column not exists (pat_identifier_type_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'patient'
            AND column_name = 'pat_identifier_type_version'
        ) THEN
            ALTER TABLE cds2db_in.patient ADD pat_identifier_type_version varchar;   -- identifier/type/coding/version (varchar)
        END IF; -- column (pat_identifier_type_version)
        IF NOT EXISTS ( -- column not exists (pat_identifier_type_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'patient'
            AND column_name = 'pat_identifier_type_code'
        ) THEN
            ALTER TABLE cds2db_in.patient ADD pat_identifier_type_code varchar;   -- identifier/type/coding/code (varchar)
        END IF; -- column (pat_identifier_type_code)
        IF NOT EXISTS ( -- column not exists (pat_identifier_type_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'patient'
            AND column_name = 'pat_identifier_type_display'
        ) THEN
            ALTER TABLE cds2db_in.patient ADD pat_identifier_type_display varchar;   -- identifier/type/coding/display (varchar)
        END IF; -- column (pat_identifier_type_display)
        IF NOT EXISTS ( -- column not exists (pat_identifier_type_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'patient'
            AND column_name = 'pat_identifier_type_text'
        ) THEN
            ALTER TABLE cds2db_in.patient ADD pat_identifier_type_text varchar;   -- identifier/type/text (varchar)
        END IF; -- column (pat_identifier_type_text)
        IF NOT EXISTS ( -- column not exists (pat_identifier_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'patient'
            AND column_name = 'pat_identifier_system'
        ) THEN
            ALTER TABLE cds2db_in.patient ADD pat_identifier_system varchar;   -- identifier/system (varchar)
        END IF; -- column (pat_identifier_system)
        IF NOT EXISTS ( -- column not exists (pat_identifier_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'patient'
            AND column_name = 'pat_identifier_value'
        ) THEN
            ALTER TABLE cds2db_in.patient ADD pat_identifier_value varchar;   -- identifier/value (varchar)
        END IF; -- column (pat_identifier_value)
        IF NOT EXISTS ( -- column not exists (pat_identifier_start)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'patient'
            AND column_name = 'pat_identifier_start'
        ) THEN
            ALTER TABLE cds2db_in.patient ADD pat_identifier_start timestamp;   -- identifier/start (timestamp)
        END IF; -- column (pat_identifier_start)
        IF NOT EXISTS ( -- column not exists (pat_identifier_end)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'patient'
            AND column_name = 'pat_identifier_end'
        ) THEN
            ALTER TABLE cds2db_in.patient ADD pat_identifier_end timestamp;   -- identifier/end (timestamp)
        END IF; -- column (pat_identifier_end)
        IF NOT EXISTS ( -- column not exists (pat_name_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'patient'
            AND column_name = 'pat_name_text'
        ) THEN
            ALTER TABLE cds2db_in.patient ADD pat_name_text varchar;   -- name/text (varchar)
        END IF; -- column (pat_name_text)
        IF NOT EXISTS ( -- column not exists (pat_name_family)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'patient'
            AND column_name = 'pat_name_family'
        ) THEN
            ALTER TABLE cds2db_in.patient ADD pat_name_family varchar;   -- name/family (varchar)
        END IF; -- column (pat_name_family)
        IF NOT EXISTS ( -- column not exists (pat_name_given)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'patient'
            AND column_name = 'pat_name_given'
        ) THEN
            ALTER TABLE cds2db_in.patient ADD pat_name_given varchar;   -- name/given (varchar)
        END IF; -- column (pat_name_given)
        IF NOT EXISTS ( -- column not exists (pat_gender)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'patient'
            AND column_name = 'pat_gender'
        ) THEN
            ALTER TABLE cds2db_in.patient ADD pat_gender varchar;   -- gender (varchar)
        END IF; -- column (pat_gender)
        IF NOT EXISTS ( -- column not exists (pat_birthdate)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'patient'
            AND column_name = 'pat_birthdate'
        ) THEN
            ALTER TABLE cds2db_in.patient ADD pat_birthdate date;   -- birthDate (date)
        END IF; -- column (pat_birthdate)
        IF NOT EXISTS ( -- column not exists (pat_deceaseddatetime)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'patient'
            AND column_name = 'pat_deceaseddatetime'
        ) THEN
            ALTER TABLE cds2db_in.patient ADD pat_deceaseddatetime timestamp;   -- deceasedDateTime (timestamp)
        END IF; -- column (pat_deceaseddatetime)
        IF NOT EXISTS ( -- column not exists (pat_address_postalcode)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'patient'
            AND column_name = 'pat_address_postalcode'
        ) THEN
            ALTER TABLE cds2db_in.patient ADD pat_address_postalcode varchar;   -- address/postalCode (varchar)
        END IF; -- column (pat_address_postalcode)

-- Hash column for comparison on data-bearing columns -------------------------------------------
        IF EXISTS ( -- column exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'patient' AND column_name = 'hash_index_col'
        ) THEN
            IF NOT EXISTS ( -- column exists
                SELECT 1 FROM information_schema.columns WHERE table_schema = 'cds2db_in' AND table_name = 'patient' AND column_name = 'hash_index_col'
                AND trim(replace(replace(generation_expression::TEXT,'(',''),')','')) != trim(replace(replace('
	         COALESCE(db.to_char_immutable(pat_id), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(pat_identifier_use), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(pat_identifier_type_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(pat_identifier_type_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(pat_identifier_type_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(pat_identifier_type_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(pat_identifier_type_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(pat_identifier_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(pat_identifier_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(pat_identifier_start), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(pat_identifier_end), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(pat_name_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(pat_name_family), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(pat_name_given), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(pat_gender), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(pat_birthdate), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(pat_deceaseddatetime), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(pat_address_postalcode), ''#NULL#'') || ''|||'' ||''#''
                ','(',''),')',''))
            ) THEN
            -- Delete the old hash column so that a new one can be created
            ALTER TABLE cds2db_in.patient DROP COLUMN hash_index_col;

            -- Creating the hash column
            ALTER TABLE cds2db_in.patient ADD
            hash_index_col TEXT GENERATED ALWAYS AS (
            md5(
	         COALESCE(db.to_char_immutable(pat_id), '#NULL#') || '|||' || -- hash from: id (pat_id)
          COALESCE(db.to_char_immutable(pat_identifier_use), '#NULL#') || '|||' || -- hash from: identifier/use (pat_identifier_use)
          COALESCE(db.to_char_immutable(pat_identifier_type_system), '#NULL#') || '|||' || -- hash from: identifier/type/coding/system (pat_identifier_type_system)
          COALESCE(db.to_char_immutable(pat_identifier_type_version), '#NULL#') || '|||' || -- hash from: identifier/type/coding/version (pat_identifier_type_version)
          COALESCE(db.to_char_immutable(pat_identifier_type_code), '#NULL#') || '|||' || -- hash from: identifier/type/coding/code (pat_identifier_type_code)
          COALESCE(db.to_char_immutable(pat_identifier_type_display), '#NULL#') || '|||' || -- hash from: identifier/type/coding/display (pat_identifier_type_display)
          COALESCE(db.to_char_immutable(pat_identifier_type_text), '#NULL#') || '|||' || -- hash from: identifier/type/text (pat_identifier_type_text)
          COALESCE(db.to_char_immutable(pat_identifier_system), '#NULL#') || '|||' || -- hash from: identifier/system (pat_identifier_system)
          COALESCE(db.to_char_immutable(pat_identifier_value), '#NULL#') || '|||' || -- hash from: identifier/value (pat_identifier_value)
          COALESCE(db.to_char_immutable(pat_identifier_start), '#NULL#') || '|||' || -- hash from: identifier/start (pat_identifier_start)
          COALESCE(db.to_char_immutable(pat_identifier_end), '#NULL#') || '|||' || -- hash from: identifier/end (pat_identifier_end)
          COALESCE(db.to_char_immutable(pat_name_text), '#NULL#') || '|||' || -- hash from: name/text (pat_name_text)
          COALESCE(db.to_char_immutable(pat_name_family), '#NULL#') || '|||' || -- hash from: name/family (pat_name_family)
          COALESCE(db.to_char_immutable(pat_name_given), '#NULL#') || '|||' || -- hash from: name/given (pat_name_given)
          COALESCE(db.to_char_immutable(pat_gender), '#NULL#') || '|||' || -- hash from: gender (pat_gender)
          COALESCE(db.to_char_immutable(pat_birthdate), '#NULL#') || '|||' || -- hash from: birthDate (pat_birthdate)
          COALESCE(db.to_char_immutable(pat_deceaseddatetime), '#NULL#') || '|||' || -- hash from: deceasedDateTime (pat_deceaseddatetime)
          COALESCE(db.to_char_immutable(pat_address_postalcode), '#NULL#') || '|||' || -- hash from: address/postalCode (pat_address_postalcode)
                 '#'
               )
            ) STORED; -- Column for hash value for comparing FHIR data - collion check in second step hash_index_col
            END IF; -- currend hash definition
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'patient'
            AND column_name = 'hash_index_col'
        ) THEN
            -- Creating the hash column
            ALTER TABLE cds2db_in.patient ADD
            hash_index_col TEXT GENERATED ALWAYS AS (
            md5(
	         COALESCE(db.to_char_immutable(pat_id), '#NULL#') || '|||' || -- hash from: id (pat_id)
          COALESCE(db.to_char_immutable(pat_identifier_use), '#NULL#') || '|||' || -- hash from: identifier/use (pat_identifier_use)
          COALESCE(db.to_char_immutable(pat_identifier_type_system), '#NULL#') || '|||' || -- hash from: identifier/type/coding/system (pat_identifier_type_system)
          COALESCE(db.to_char_immutable(pat_identifier_type_version), '#NULL#') || '|||' || -- hash from: identifier/type/coding/version (pat_identifier_type_version)
          COALESCE(db.to_char_immutable(pat_identifier_type_code), '#NULL#') || '|||' || -- hash from: identifier/type/coding/code (pat_identifier_type_code)
          COALESCE(db.to_char_immutable(pat_identifier_type_display), '#NULL#') || '|||' || -- hash from: identifier/type/coding/display (pat_identifier_type_display)
          COALESCE(db.to_char_immutable(pat_identifier_type_text), '#NULL#') || '|||' || -- hash from: identifier/type/text (pat_identifier_type_text)
          COALESCE(db.to_char_immutable(pat_identifier_system), '#NULL#') || '|||' || -- hash from: identifier/system (pat_identifier_system)
          COALESCE(db.to_char_immutable(pat_identifier_value), '#NULL#') || '|||' || -- hash from: identifier/value (pat_identifier_value)
          COALESCE(db.to_char_immutable(pat_identifier_start), '#NULL#') || '|||' || -- hash from: identifier/start (pat_identifier_start)
          COALESCE(db.to_char_immutable(pat_identifier_end), '#NULL#') || '|||' || -- hash from: identifier/end (pat_identifier_end)
          COALESCE(db.to_char_immutable(pat_name_text), '#NULL#') || '|||' || -- hash from: name/text (pat_name_text)
          COALESCE(db.to_char_immutable(pat_name_family), '#NULL#') || '|||' || -- hash from: name/family (pat_name_family)
          COALESCE(db.to_char_immutable(pat_name_given), '#NULL#') || '|||' || -- hash from: name/given (pat_name_given)
          COALESCE(db.to_char_immutable(pat_gender), '#NULL#') || '|||' || -- hash from: gender (pat_gender)
          COALESCE(db.to_char_immutable(pat_birthdate), '#NULL#') || '|||' || -- hash from: birthDate (pat_birthdate)
          COALESCE(db.to_char_immutable(pat_deceaseddatetime), '#NULL#') || '|||' || -- hash from: deceasedDateTime (pat_deceaseddatetime)
          COALESCE(db.to_char_immutable(pat_address_postalcode), '#NULL#') || '|||' || -- hash from: address/postalCode (pat_address_postalcode)
                 '#'
               )
            ) STORED; -- Column for hash value for comparing FHIR data - collion check in second step hash_index_col
        END IF; -- column
    END IF; -- Table
END
$$;
-- Table "condition" in schema "cds2db_in"
-------------------------------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS cds2db_in.condition (
  condition_id int PRIMARY KEY DEFAULT nextval('db.db_seq') -- Primary key of the entity
);

DO
$$
DECLARE
    IF EXISTS ( -- Table exists
        SELECT 1 FROM information_schema.columns 
        WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
    ) THEN
        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'input_datetime'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD condition_raw_id int NOT NULL; -- Primary key of the corresponding raw table
            NULL;
        END IF; -- column

-- Organizational items - fixed for each database table -----------------------------------------
        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'input_datetime'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD input_datetime TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP; -- Time at which data record was created
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'last_check_datetime'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD last_check_datetime TIMESTAMP DEFAULT NULL; -- Time at which data record was last checked
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'current_dataset_status'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD current_dataset_status VARCHAR DEFAULT 'input'; -- Processing status of the data record
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'input_processing_nr'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD input_processing_nr INT; -- (First) Processing number of the data record
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'last_processing_nr'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD last_processing_nr INT; -- Last processing number of the data record
        END IF; -- column

-- Data-leading columns -------------------------------------------------------------------------
        IF NOT EXISTS ( -- column not exists (con_id)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_id'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_id varchar;   -- id (varchar)
        END IF; -- column (con_id)
        IF NOT EXISTS ( -- column not exists (con_meta_versionid)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_meta_versionid'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_meta_versionid varchar;   -- meta/versionId (varchar)
        END IF; -- column (con_meta_versionid)
        IF NOT EXISTS ( -- column not exists (con_meta_lastupdated)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_meta_lastupdated'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_meta_lastupdated timestamp;   -- meta/lastUpdated (timestamp)
        END IF; -- column (con_meta_lastupdated)
        IF NOT EXISTS ( -- column not exists (con_meta_profile)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_meta_profile'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_meta_profile varchar;   -- meta/profile (varchar)
        END IF; -- column (con_meta_profile)
        IF NOT EXISTS ( -- column not exists (con_identifier_use)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_identifier_use'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_identifier_use varchar;   -- identifier/use (varchar)
        END IF; -- column (con_identifier_use)
        IF NOT EXISTS ( -- column not exists (con_identifier_type_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_identifier_type_system'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_identifier_type_system varchar;   -- identifier/type/coding/system (varchar)
        END IF; -- column (con_identifier_type_system)
        IF NOT EXISTS ( -- column not exists (con_identifier_type_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_identifier_type_version'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_identifier_type_version varchar;   -- identifier/type/coding/version (varchar)
        END IF; -- column (con_identifier_type_version)
        IF NOT EXISTS ( -- column not exists (con_identifier_type_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_identifier_type_code'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_identifier_type_code varchar;   -- identifier/type/coding/code (varchar)
        END IF; -- column (con_identifier_type_code)
        IF NOT EXISTS ( -- column not exists (con_identifier_type_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_identifier_type_display'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_identifier_type_display varchar;   -- identifier/type/coding/display (varchar)
        END IF; -- column (con_identifier_type_display)
        IF NOT EXISTS ( -- column not exists (con_identifier_type_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_identifier_type_text'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_identifier_type_text varchar;   -- identifier/type/text (varchar)
        END IF; -- column (con_identifier_type_text)
        IF NOT EXISTS ( -- column not exists (con_identifier_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_identifier_system'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_identifier_system varchar;   -- identifier/system (varchar)
        END IF; -- column (con_identifier_system)
        IF NOT EXISTS ( -- column not exists (con_identifier_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_identifier_value'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_identifier_value varchar;   -- identifier/value (varchar)
        END IF; -- column (con_identifier_value)
        IF NOT EXISTS ( -- column not exists (con_identifier_start)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_identifier_start'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_identifier_start timestamp;   -- identifier/start (timestamp)
        END IF; -- column (con_identifier_start)
        IF NOT EXISTS ( -- column not exists (con_identifier_end)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_identifier_end'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_identifier_end timestamp;   -- identifier/end (timestamp)
        END IF; -- column (con_identifier_end)
        IF NOT EXISTS ( -- column not exists (con_encounter_ref)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_encounter_ref'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_encounter_ref varchar;   -- encounter/reference (varchar)
        END IF; -- column (con_encounter_ref)
        IF NOT EXISTS ( -- column not exists (con_patient_ref)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_patient_ref'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_patient_ref varchar;   -- subject/reference (varchar)
        END IF; -- column (con_patient_ref)
        IF NOT EXISTS ( -- column not exists (con_clinicalstatus_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_clinicalstatus_system'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_clinicalstatus_system varchar;   -- clinicalStatus/coding/system (varchar)
        END IF; -- column (con_clinicalstatus_system)
        IF NOT EXISTS ( -- column not exists (con_clinicalstatus_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_clinicalstatus_version'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_clinicalstatus_version varchar;   -- clinicalStatus/coding/version (varchar)
        END IF; -- column (con_clinicalstatus_version)
        IF NOT EXISTS ( -- column not exists (con_clinicalstatus_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_clinicalstatus_code'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_clinicalstatus_code varchar;   -- clinicalStatus/coding/code (varchar)
        END IF; -- column (con_clinicalstatus_code)
        IF NOT EXISTS ( -- column not exists (con_clinicalstatus_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_clinicalstatus_display'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_clinicalstatus_display varchar;   -- clinicalStatus/coding/display (varchar)
        END IF; -- column (con_clinicalstatus_display)
        IF NOT EXISTS ( -- column not exists (con_clinicalstatus_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_clinicalstatus_text'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_clinicalstatus_text varchar;   -- clinicalStatus/text (varchar)
        END IF; -- column (con_clinicalstatus_text)
        IF NOT EXISTS ( -- column not exists (con_verificationstatus_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_verificationstatus_system'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_verificationstatus_system varchar;   -- verificationStatus/coding/system (varchar)
        END IF; -- column (con_verificationstatus_system)
        IF NOT EXISTS ( -- column not exists (con_verificationstatus_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_verificationstatus_version'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_verificationstatus_version varchar;   -- verificationStatus/coding/version (varchar)
        END IF; -- column (con_verificationstatus_version)
        IF NOT EXISTS ( -- column not exists (con_verificationstatus_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_verificationstatus_code'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_verificationstatus_code varchar;   -- verificationStatus/coding/code (varchar)
        END IF; -- column (con_verificationstatus_code)
        IF NOT EXISTS ( -- column not exists (con_verificationstatus_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_verificationstatus_display'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_verificationstatus_display varchar;   -- verificationStatus/coding/display (varchar)
        END IF; -- column (con_verificationstatus_display)
        IF NOT EXISTS ( -- column not exists (con_verificationstatus_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_verificationstatus_text'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_verificationstatus_text varchar;   -- verificationStatus/text (varchar)
        END IF; -- column (con_verificationstatus_text)
        IF NOT EXISTS ( -- column not exists (con_category_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_category_system'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_category_system varchar;   -- category/coding/system (varchar)
        END IF; -- column (con_category_system)
        IF NOT EXISTS ( -- column not exists (con_category_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_category_version'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_category_version varchar;   -- category/coding/version (varchar)
        END IF; -- column (con_category_version)
        IF NOT EXISTS ( -- column not exists (con_category_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_category_code'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_category_code varchar;   -- category/coding/code (varchar)
        END IF; -- column (con_category_code)
        IF NOT EXISTS ( -- column not exists (con_category_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_category_display'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_category_display varchar;   -- category/coding/display (varchar)
        END IF; -- column (con_category_display)
        IF NOT EXISTS ( -- column not exists (con_category_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_category_text'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_category_text varchar;   -- category/text (varchar)
        END IF; -- column (con_category_text)
        IF NOT EXISTS ( -- column not exists (con_severity_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_severity_system'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_severity_system varchar;   -- severity/coding/system (varchar)
        END IF; -- column (con_severity_system)
        IF NOT EXISTS ( -- column not exists (con_severity_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_severity_version'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_severity_version varchar;   -- severity/coding/version (varchar)
        END IF; -- column (con_severity_version)
        IF NOT EXISTS ( -- column not exists (con_severity_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_severity_code'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_severity_code varchar;   -- severity/coding/code (varchar)
        END IF; -- column (con_severity_code)
        IF NOT EXISTS ( -- column not exists (con_severity_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_severity_display'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_severity_display varchar;   -- severity/coding/display (varchar)
        END IF; -- column (con_severity_display)
        IF NOT EXISTS ( -- column not exists (con_severity_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_severity_text'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_severity_text varchar;   -- severity/text (varchar)
        END IF; -- column (con_severity_text)
        IF NOT EXISTS ( -- column not exists (con_code_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_code_system'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_code_system varchar;   -- code/coding/system (varchar)
        END IF; -- column (con_code_system)
        IF NOT EXISTS ( -- column not exists (con_code_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_code_version'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_code_version varchar;   -- code/coding/version (varchar)
        END IF; -- column (con_code_version)
        IF NOT EXISTS ( -- column not exists (con_code_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_code_code'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_code_code varchar;   -- code/coding/code (varchar)
        END IF; -- column (con_code_code)
        IF NOT EXISTS ( -- column not exists (con_code_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_code_display'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_code_display varchar;   -- code/coding/display (varchar)
        END IF; -- column (con_code_display)
        IF NOT EXISTS ( -- column not exists (con_code_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_code_text'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_code_text varchar;   -- code/text (varchar)
        END IF; -- column (con_code_text)
        IF NOT EXISTS ( -- column not exists (con_bodysite_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_bodysite_system'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_bodysite_system varchar;   -- bodySite/coding/system (varchar)
        END IF; -- column (con_bodysite_system)
        IF NOT EXISTS ( -- column not exists (con_bodysite_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_bodysite_version'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_bodysite_version varchar;   -- bodySite/coding/version (varchar)
        END IF; -- column (con_bodysite_version)
        IF NOT EXISTS ( -- column not exists (con_bodysite_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_bodysite_code'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_bodysite_code varchar;   -- bodySite/coding/code (varchar)
        END IF; -- column (con_bodysite_code)
        IF NOT EXISTS ( -- column not exists (con_bodysite_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_bodysite_display'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_bodysite_display varchar;   -- bodySite/coding/display (varchar)
        END IF; -- column (con_bodysite_display)
        IF NOT EXISTS ( -- column not exists (con_bodysite_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_bodysite_text'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_bodysite_text varchar;   -- bodySite/text (varchar)
        END IF; -- column (con_bodysite_text)
        IF NOT EXISTS ( -- column not exists (con_onsetperiod_start)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_onsetperiod_start'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_onsetperiod_start timestamp;   -- onsetPeriod/start (timestamp)
        END IF; -- column (con_onsetperiod_start)
        IF NOT EXISTS ( -- column not exists (con_onsetperiod_end)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_onsetperiod_end'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_onsetperiod_end timestamp;   -- onsetPeriod/end (timestamp)
        END IF; -- column (con_onsetperiod_end)
        IF NOT EXISTS ( -- column not exists (con_onsetdatetime)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_onsetdatetime'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_onsetdatetime timestamp;   -- onsetDateTime (timestamp)
        END IF; -- column (con_onsetdatetime)
        IF NOT EXISTS ( -- column not exists (con_abatementdatetime)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_abatementdatetime'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_abatementdatetime timestamp;   -- abatementDateTime (timestamp)
        END IF; -- column (con_abatementdatetime)
        IF NOT EXISTS ( -- column not exists (con_abatementage_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_abatementage_value'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_abatementage_value double precision;   -- abatementAge/value (double precision)
        END IF; -- column (con_abatementage_value)
        IF NOT EXISTS ( -- column not exists (con_abatementage_comparator)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_abatementage_comparator'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_abatementage_comparator varchar;   -- abatementAge/comparator (varchar)
        END IF; -- column (con_abatementage_comparator)
        IF NOT EXISTS ( -- column not exists (con_abatementage_unit)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_abatementage_unit'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_abatementage_unit varchar;   -- abatementAge/unit (varchar)
        END IF; -- column (con_abatementage_unit)
        IF NOT EXISTS ( -- column not exists (con_abatementage_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_abatementage_system'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_abatementage_system varchar;   -- abatementAge/system (varchar)
        END IF; -- column (con_abatementage_system)
        IF NOT EXISTS ( -- column not exists (con_abatementage_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_abatementage_code'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_abatementage_code varchar;   -- abatementAge/code (varchar)
        END IF; -- column (con_abatementage_code)
        IF NOT EXISTS ( -- column not exists (con_abatementperiod_start)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_abatementperiod_start'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_abatementperiod_start timestamp;   -- abatementPeriod/start (timestamp)
        END IF; -- column (con_abatementperiod_start)
        IF NOT EXISTS ( -- column not exists (con_abatementperiod_end)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_abatementperiod_end'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_abatementperiod_end timestamp;   -- abatementPeriod/end (timestamp)
        END IF; -- column (con_abatementperiod_end)
        IF NOT EXISTS ( -- column not exists (con_abatementrange_low_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_abatementrange_low_value'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_abatementrange_low_value double precision;   -- abatementRange/low/value (double precision)
        END IF; -- column (con_abatementrange_low_value)
        IF NOT EXISTS ( -- column not exists (con_abatementrange_low_unit)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_abatementrange_low_unit'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_abatementrange_low_unit varchar;   -- abatementRange/low/unit (varchar)
        END IF; -- column (con_abatementrange_low_unit)
        IF NOT EXISTS ( -- column not exists (con_abatementrange_low_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_abatementrange_low_system'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_abatementrange_low_system varchar;   -- abatementRange/low/system (varchar)
        END IF; -- column (con_abatementrange_low_system)
        IF NOT EXISTS ( -- column not exists (con_abatementrange_low_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_abatementrange_low_code'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_abatementrange_low_code varchar;   -- abatementRange/low/code (varchar)
        END IF; -- column (con_abatementrange_low_code)
        IF NOT EXISTS ( -- column not exists (con_abatementrange_high_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_abatementrange_high_value'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_abatementrange_high_value double precision;   -- abatementRange/high/value (double precision)
        END IF; -- column (con_abatementrange_high_value)
        IF NOT EXISTS ( -- column not exists (con_abatementrange_high_unit)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_abatementrange_high_unit'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_abatementrange_high_unit varchar;   -- abatementRange/high/unit (varchar)
        END IF; -- column (con_abatementrange_high_unit)
        IF NOT EXISTS ( -- column not exists (con_abatementrange_high_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_abatementrange_high_system'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_abatementrange_high_system varchar;   -- abatementRange/high/system (varchar)
        END IF; -- column (con_abatementrange_high_system)
        IF NOT EXISTS ( -- column not exists (con_abatementrange_high_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_abatementrange_high_code'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_abatementrange_high_code varchar;   -- abatementRange/high/code (varchar)
        END IF; -- column (con_abatementrange_high_code)
        IF NOT EXISTS ( -- column not exists (con_abatementstring)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_abatementstring'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_abatementstring varchar;   -- abatementString (varchar)
        END IF; -- column (con_abatementstring)
        IF NOT EXISTS ( -- column not exists (con_recordeddate)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_recordeddate'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_recordeddate timestamp;   -- recordedDate (timestamp)
        END IF; -- column (con_recordeddate)
        IF NOT EXISTS ( -- column not exists (con_recorder_ref)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_recorder_ref'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_recorder_ref varchar;   -- recorder/reference (varchar)
        END IF; -- column (con_recorder_ref)
        IF NOT EXISTS ( -- column not exists (con_recorder_type)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_recorder_type'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_recorder_type varchar;   -- recorder/type (varchar)
        END IF; -- column (con_recorder_type)
        IF NOT EXISTS ( -- column not exists (con_recorder_identifier_use)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_recorder_identifier_use'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_recorder_identifier_use varchar;   -- recorder/identifier/use (varchar)
        END IF; -- column (con_recorder_identifier_use)
        IF NOT EXISTS ( -- column not exists (con_recorder_identifier_type_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_recorder_identifier_type_system'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_recorder_identifier_type_system varchar;   -- recorder/identifier/type/coding/system (varchar)
        END IF; -- column (con_recorder_identifier_type_system)
        IF NOT EXISTS ( -- column not exists (con_recorder_identifier_type_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_recorder_identifier_type_version'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_recorder_identifier_type_version varchar;   -- recorder/identifier/type/coding/version (varchar)
        END IF; -- column (con_recorder_identifier_type_version)
        IF NOT EXISTS ( -- column not exists (con_recorder_identifier_type_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_recorder_identifier_type_code'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_recorder_identifier_type_code varchar;   -- recorder/identifier/type/coding/code (varchar)
        END IF; -- column (con_recorder_identifier_type_code)
        IF NOT EXISTS ( -- column not exists (con_recorder_identifier_type_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_recorder_identifier_type_display'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_recorder_identifier_type_display varchar;   -- recorder/identifier/type/coding/display (varchar)
        END IF; -- column (con_recorder_identifier_type_display)
        IF NOT EXISTS ( -- column not exists (con_recorder_identifier_type_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_recorder_identifier_type_text'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_recorder_identifier_type_text varchar;   -- recorder/identifier/type/text (varchar)
        END IF; -- column (con_recorder_identifier_type_text)
        IF NOT EXISTS ( -- column not exists (con_recorder_identifier_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_recorder_identifier_system'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_recorder_identifier_system varchar;   -- recorder/identifier/system (varchar)
        END IF; -- column (con_recorder_identifier_system)
        IF NOT EXISTS ( -- column not exists (con_recorder_identifier_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_recorder_identifier_value'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_recorder_identifier_value varchar;   -- recorder/identifier/value (varchar)
        END IF; -- column (con_recorder_identifier_value)
        IF NOT EXISTS ( -- column not exists (con_recorder_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_recorder_display'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_recorder_display varchar;   -- recorder/display (varchar)
        END IF; -- column (con_recorder_display)
        IF NOT EXISTS ( -- column not exists (con_asserter_ref)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_asserter_ref'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_asserter_ref varchar;   -- asserter/reference (varchar)
        END IF; -- column (con_asserter_ref)
        IF NOT EXISTS ( -- column not exists (con_asserter_type)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_asserter_type'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_asserter_type varchar;   -- asserter/type (varchar)
        END IF; -- column (con_asserter_type)
        IF NOT EXISTS ( -- column not exists (con_asserter_identifier_use)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_asserter_identifier_use'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_asserter_identifier_use varchar;   -- asserter/identifier/use (varchar)
        END IF; -- column (con_asserter_identifier_use)
        IF NOT EXISTS ( -- column not exists (con_asserter_identifier_type_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_asserter_identifier_type_system'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_asserter_identifier_type_system varchar;   -- asserter/identifier/type/coding/system (varchar)
        END IF; -- column (con_asserter_identifier_type_system)
        IF NOT EXISTS ( -- column not exists (con_asserter_identifier_type_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_asserter_identifier_type_version'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_asserter_identifier_type_version varchar;   -- asserter/identifier/type/coding/version (varchar)
        END IF; -- column (con_asserter_identifier_type_version)
        IF NOT EXISTS ( -- column not exists (con_asserter_identifier_type_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_asserter_identifier_type_code'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_asserter_identifier_type_code varchar;   -- asserter/identifier/type/coding/code (varchar)
        END IF; -- column (con_asserter_identifier_type_code)
        IF NOT EXISTS ( -- column not exists (con_asserter_identifier_type_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_asserter_identifier_type_display'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_asserter_identifier_type_display varchar;   -- asserter/identifier/type/coding/display (varchar)
        END IF; -- column (con_asserter_identifier_type_display)
        IF NOT EXISTS ( -- column not exists (con_asserter_identifier_type_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_asserter_identifier_type_text'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_asserter_identifier_type_text varchar;   -- asserter/identifier/type/text (varchar)
        END IF; -- column (con_asserter_identifier_type_text)
        IF NOT EXISTS ( -- column not exists (con_asserter_identifier_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_asserter_identifier_system'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_asserter_identifier_system varchar;   -- asserter/identifier/system (varchar)
        END IF; -- column (con_asserter_identifier_system)
        IF NOT EXISTS ( -- column not exists (con_asserter_identifier_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_asserter_identifier_value'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_asserter_identifier_value varchar;   -- asserter/identifier/value (varchar)
        END IF; -- column (con_asserter_identifier_value)
        IF NOT EXISTS ( -- column not exists (con_asserter_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_asserter_display'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_asserter_display varchar;   -- asserter/display (varchar)
        END IF; -- column (con_asserter_display)
        IF NOT EXISTS ( -- column not exists (con_stage_summary_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_stage_summary_system'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_stage_summary_system varchar;   -- stage/summary/coding/system (varchar)
        END IF; -- column (con_stage_summary_system)
        IF NOT EXISTS ( -- column not exists (con_stage_summary_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_stage_summary_version'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_stage_summary_version varchar;   -- stage/summary/coding/version (varchar)
        END IF; -- column (con_stage_summary_version)
        IF NOT EXISTS ( -- column not exists (con_stage_summary_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_stage_summary_code'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_stage_summary_code varchar;   -- stage/summary/coding/code (varchar)
        END IF; -- column (con_stage_summary_code)
        IF NOT EXISTS ( -- column not exists (con_stage_summary_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_stage_summary_display'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_stage_summary_display varchar;   -- stage/summary/coding/display (varchar)
        END IF; -- column (con_stage_summary_display)
        IF NOT EXISTS ( -- column not exists (con_stage_summary_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_stage_summary_text'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_stage_summary_text varchar;   -- stage/summary/text (varchar)
        END IF; -- column (con_stage_summary_text)
        IF NOT EXISTS ( -- column not exists (con_stage_assessment_ref)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_stage_assessment_ref'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_stage_assessment_ref varchar;   -- stage/assessment/reference (varchar)
        END IF; -- column (con_stage_assessment_ref)
        IF NOT EXISTS ( -- column not exists (con_stage_assessment_type)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_stage_assessment_type'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_stage_assessment_type varchar;   -- stage/assessment/type (varchar)
        END IF; -- column (con_stage_assessment_type)
        IF NOT EXISTS ( -- column not exists (con_stage_assessment_identifier_use)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_stage_assessment_identifier_use'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_stage_assessment_identifier_use varchar;   -- stage/assessment/identifier/use (varchar)
        END IF; -- column (con_stage_assessment_identifier_use)
        IF NOT EXISTS ( -- column not exists (con_stage_assessment_identifier_type_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_stage_assessment_identifier_type_system'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_stage_assessment_identifier_type_system varchar;   -- stage/assessment/identifier/type/coding/system (varchar)
        END IF; -- column (con_stage_assessment_identifier_type_system)
        IF NOT EXISTS ( -- column not exists (con_stage_assessment_identifier_type_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_stage_assessment_identifier_type_version'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_stage_assessment_identifier_type_version varchar;   -- stage/assessment/identifier/type/coding/version (varchar)
        END IF; -- column (con_stage_assessment_identifier_type_version)
        IF NOT EXISTS ( -- column not exists (con_stage_assessment_identifier_type_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_stage_assessment_identifier_type_code'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_stage_assessment_identifier_type_code varchar;   -- stage/assessment/identifier/type/coding/code (varchar)
        END IF; -- column (con_stage_assessment_identifier_type_code)
        IF NOT EXISTS ( -- column not exists (con_stage_assessment_identifier_type_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_stage_assessment_identifier_type_display'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_stage_assessment_identifier_type_display varchar;   -- stage/assessment/identifier/type/coding/display (varchar)
        END IF; -- column (con_stage_assessment_identifier_type_display)
        IF NOT EXISTS ( -- column not exists (con_stage_assessment_identifier_type_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_stage_assessment_identifier_type_text'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_stage_assessment_identifier_type_text varchar;   -- stage/assessment/identifier/type/text (varchar)
        END IF; -- column (con_stage_assessment_identifier_type_text)
        IF NOT EXISTS ( -- column not exists (con_stage_assessment_identifier_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_stage_assessment_identifier_system'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_stage_assessment_identifier_system varchar;   -- stage/assessment/identifier/system (varchar)
        END IF; -- column (con_stage_assessment_identifier_system)
        IF NOT EXISTS ( -- column not exists (con_stage_assessment_identifier_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_stage_assessment_identifier_value'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_stage_assessment_identifier_value varchar;   -- stage/assessment/identifier/value (varchar)
        END IF; -- column (con_stage_assessment_identifier_value)
        IF NOT EXISTS ( -- column not exists (con_stage_assessment_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_stage_assessment_display'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_stage_assessment_display varchar;   -- stage/assessment/display (varchar)
        END IF; -- column (con_stage_assessment_display)
        IF NOT EXISTS ( -- column not exists (con_stage_type_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_stage_type_system'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_stage_type_system varchar;   -- stage/type/coding/system (varchar)
        END IF; -- column (con_stage_type_system)
        IF NOT EXISTS ( -- column not exists (con_stage_type_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_stage_type_version'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_stage_type_version varchar;   -- stage/type/coding/version (varchar)
        END IF; -- column (con_stage_type_version)
        IF NOT EXISTS ( -- column not exists (con_stage_type_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_stage_type_code'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_stage_type_code varchar;   -- stage/type/coding/code (varchar)
        END IF; -- column (con_stage_type_code)
        IF NOT EXISTS ( -- column not exists (con_stage_type_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_stage_type_display'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_stage_type_display varchar;   -- stage/type/coding/display (varchar)
        END IF; -- column (con_stage_type_display)
        IF NOT EXISTS ( -- column not exists (con_stage_type_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_stage_type_text'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_stage_type_text varchar;   -- stage/type/text (varchar)
        END IF; -- column (con_stage_type_text)
        IF NOT EXISTS ( -- column not exists (con_note_authorstring)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_note_authorstring'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_note_authorstring varchar;   -- note/authorString (varchar)
        END IF; -- column (con_note_authorstring)
        IF NOT EXISTS ( -- column not exists (con_note_authorreference_ref)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_note_authorreference_ref'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_note_authorreference_ref varchar;   -- note/authorReference/reference (varchar)
        END IF; -- column (con_note_authorreference_ref)
        IF NOT EXISTS ( -- column not exists (con_note_authorreference_type)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_note_authorreference_type'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_note_authorreference_type varchar;   -- note/authorReference/type (varchar)
        END IF; -- column (con_note_authorreference_type)
        IF NOT EXISTS ( -- column not exists (con_note_authorreference_identifier_use)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_note_authorreference_identifier_use'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_note_authorreference_identifier_use varchar;   -- note/authorReference/identifier/use (varchar)
        END IF; -- column (con_note_authorreference_identifier_use)
        IF NOT EXISTS ( -- column not exists (con_note_authorreference_identifier_type_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_note_authorreference_identifier_type_system'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_note_authorreference_identifier_type_system varchar;   -- note/authorReference/identifier/type/coding/system (varchar)
        END IF; -- column (con_note_authorreference_identifier_type_system)
        IF NOT EXISTS ( -- column not exists (con_note_authorreference_identifier_type_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_note_authorreference_identifier_type_version'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_note_authorreference_identifier_type_version varchar;   -- note/authorReference/identifier/type/coding/version (varchar)
        END IF; -- column (con_note_authorreference_identifier_type_version)
        IF NOT EXISTS ( -- column not exists (con_note_authorreference_identifier_type_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_note_authorreference_identifier_type_code'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_note_authorreference_identifier_type_code varchar;   -- note/authorReference/identifier/type/coding/code (varchar)
        END IF; -- column (con_note_authorreference_identifier_type_code)
        IF NOT EXISTS ( -- column not exists (con_note_authorreference_identifier_type_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_note_authorreference_identifier_type_display'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_note_authorreference_identifier_type_display varchar;   -- note/authorReference/identifier/type/coding/display (varchar)
        END IF; -- column (con_note_authorreference_identifier_type_display)
        IF NOT EXISTS ( -- column not exists (con_note_authorreference_identifier_type_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_note_authorreference_identifier_type_text'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_note_authorreference_identifier_type_text varchar;   -- note/authorReference/identifier/type/text (varchar)
        END IF; -- column (con_note_authorreference_identifier_type_text)
        IF NOT EXISTS ( -- column not exists (con_note_authorreference_identifier_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_note_authorreference_identifier_system'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_note_authorreference_identifier_system varchar;   -- note/authorReference/identifier/system (varchar)
        END IF; -- column (con_note_authorreference_identifier_system)
        IF NOT EXISTS ( -- column not exists (con_note_authorreference_identifier_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_note_authorreference_identifier_value'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_note_authorreference_identifier_value varchar;   -- note/authorReference/identifier/value (varchar)
        END IF; -- column (con_note_authorreference_identifier_value)
        IF NOT EXISTS ( -- column not exists (con_note_authorreference_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_note_authorreference_display'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_note_authorreference_display varchar;   -- note/authorReference/display (varchar)
        END IF; -- column (con_note_authorreference_display)
        IF NOT EXISTS ( -- column not exists (con_note_time)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_note_time'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_note_time timestamp;   -- note/time (timestamp)
        END IF; -- column (con_note_time)
        IF NOT EXISTS ( -- column not exists (con_note_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'con_note_text'
        ) THEN
            ALTER TABLE cds2db_in.condition ADD con_note_text varchar;   -- note/text (varchar)
        END IF; -- column (con_note_text)

-- Hash column for comparison on data-bearing columns -------------------------------------------
        IF EXISTS ( -- column exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition' AND column_name = 'hash_index_col'
        ) THEN
            IF NOT EXISTS ( -- column exists
                SELECT 1 FROM information_schema.columns WHERE table_schema = 'cds2db_in' AND table_name = 'condition' AND column_name = 'hash_index_col'
                AND trim(replace(replace(generation_expression::TEXT,'(',''),')','')) != trim(replace(replace('
	         COALESCE(db.to_char_immutable(con_id), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_identifier_use), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_identifier_type_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_identifier_type_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_identifier_type_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_identifier_type_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_identifier_type_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_identifier_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_identifier_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_identifier_start), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_identifier_end), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_encounter_ref), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_patient_ref), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_clinicalstatus_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_clinicalstatus_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_clinicalstatus_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_clinicalstatus_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_clinicalstatus_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_verificationstatus_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_verificationstatus_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_verificationstatus_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_verificationstatus_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_verificationstatus_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_category_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_category_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_category_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_category_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_category_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_severity_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_severity_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_severity_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_severity_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_severity_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_code_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_code_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_code_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_code_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_code_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_bodysite_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_bodysite_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_bodysite_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_bodysite_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_bodysite_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_onsetperiod_start), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_onsetperiod_end), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_onsetdatetime), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_abatementdatetime), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_abatementage_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_abatementage_comparator), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_abatementage_unit), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_abatementage_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_abatementage_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_abatementperiod_start), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_abatementperiod_end), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_abatementrange_low_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_abatementrange_low_unit), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_abatementrange_low_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_abatementrange_low_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_abatementrange_high_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_abatementrange_high_unit), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_abatementrange_high_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_abatementrange_high_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_abatementstring), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_recordeddate), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_recorder_ref), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_recorder_type), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_recorder_identifier_use), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_recorder_identifier_type_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_recorder_identifier_type_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_recorder_identifier_type_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_recorder_identifier_type_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_recorder_identifier_type_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_recorder_identifier_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_recorder_identifier_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_recorder_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_asserter_ref), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_asserter_type), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_asserter_identifier_use), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_asserter_identifier_type_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_asserter_identifier_type_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_asserter_identifier_type_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_asserter_identifier_type_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_asserter_identifier_type_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_asserter_identifier_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_asserter_identifier_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_asserter_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_stage_summary_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_stage_summary_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_stage_summary_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_stage_summary_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_stage_summary_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_stage_assessment_ref), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_stage_assessment_type), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_stage_assessment_identifier_use), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_stage_assessment_identifier_type_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_stage_assessment_identifier_type_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_stage_assessment_identifier_type_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_stage_assessment_identifier_type_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_stage_assessment_identifier_type_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_stage_assessment_identifier_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_stage_assessment_identifier_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_stage_assessment_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_stage_type_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_stage_type_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_stage_type_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_stage_type_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_stage_type_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_note_authorstring), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_note_authorreference_ref), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_note_authorreference_type), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_note_authorreference_identifier_use), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_note_authorreference_identifier_type_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_note_authorreference_identifier_type_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_note_authorreference_identifier_type_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_note_authorreference_identifier_type_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_note_authorreference_identifier_type_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_note_authorreference_identifier_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_note_authorreference_identifier_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_note_authorreference_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_note_time), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(con_note_text), ''#NULL#'') || ''|||'' ||''#''
                ','(',''),')',''))
            ) THEN
            -- Delete the old hash column so that a new one can be created
            ALTER TABLE cds2db_in.condition DROP COLUMN hash_index_col;

            -- Creating the hash column
            ALTER TABLE cds2db_in.condition ADD
            hash_index_col TEXT GENERATED ALWAYS AS (
            md5(
	         COALESCE(db.to_char_immutable(con_id), '#NULL#') || '|||' || -- hash from: id (con_id)
          COALESCE(db.to_char_immutable(con_identifier_use), '#NULL#') || '|||' || -- hash from: identifier/use (con_identifier_use)
          COALESCE(db.to_char_immutable(con_identifier_type_system), '#NULL#') || '|||' || -- hash from: identifier/type/coding/system (con_identifier_type_system)
          COALESCE(db.to_char_immutable(con_identifier_type_version), '#NULL#') || '|||' || -- hash from: identifier/type/coding/version (con_identifier_type_version)
          COALESCE(db.to_char_immutable(con_identifier_type_code), '#NULL#') || '|||' || -- hash from: identifier/type/coding/code (con_identifier_type_code)
          COALESCE(db.to_char_immutable(con_identifier_type_display), '#NULL#') || '|||' || -- hash from: identifier/type/coding/display (con_identifier_type_display)
          COALESCE(db.to_char_immutable(con_identifier_type_text), '#NULL#') || '|||' || -- hash from: identifier/type/text (con_identifier_type_text)
          COALESCE(db.to_char_immutable(con_identifier_system), '#NULL#') || '|||' || -- hash from: identifier/system (con_identifier_system)
          COALESCE(db.to_char_immutable(con_identifier_value), '#NULL#') || '|||' || -- hash from: identifier/value (con_identifier_value)
          COALESCE(db.to_char_immutable(con_identifier_start), '#NULL#') || '|||' || -- hash from: identifier/start (con_identifier_start)
          COALESCE(db.to_char_immutable(con_identifier_end), '#NULL#') || '|||' || -- hash from: identifier/end (con_identifier_end)
          COALESCE(db.to_char_immutable(con_encounter_ref), '#NULL#') || '|||' || -- hash from: encounter/reference (con_encounter_ref)
          COALESCE(db.to_char_immutable(con_patient_ref), '#NULL#') || '|||' || -- hash from: subject/reference (con_patient_ref)
          COALESCE(db.to_char_immutable(con_clinicalstatus_system), '#NULL#') || '|||' || -- hash from: clinicalStatus/coding/system (con_clinicalstatus_system)
          COALESCE(db.to_char_immutable(con_clinicalstatus_version), '#NULL#') || '|||' || -- hash from: clinicalStatus/coding/version (con_clinicalstatus_version)
          COALESCE(db.to_char_immutable(con_clinicalstatus_code), '#NULL#') || '|||' || -- hash from: clinicalStatus/coding/code (con_clinicalstatus_code)
          COALESCE(db.to_char_immutable(con_clinicalstatus_display), '#NULL#') || '|||' || -- hash from: clinicalStatus/coding/display (con_clinicalstatus_display)
          COALESCE(db.to_char_immutable(con_clinicalstatus_text), '#NULL#') || '|||' || -- hash from: clinicalStatus/text (con_clinicalstatus_text)
          COALESCE(db.to_char_immutable(con_verificationstatus_system), '#NULL#') || '|||' || -- hash from: verificationStatus/coding/system (con_verificationstatus_system)
          COALESCE(db.to_char_immutable(con_verificationstatus_version), '#NULL#') || '|||' || -- hash from: verificationStatus/coding/version (con_verificationstatus_version)
          COALESCE(db.to_char_immutable(con_verificationstatus_code), '#NULL#') || '|||' || -- hash from: verificationStatus/coding/code (con_verificationstatus_code)
          COALESCE(db.to_char_immutable(con_verificationstatus_display), '#NULL#') || '|||' || -- hash from: verificationStatus/coding/display (con_verificationstatus_display)
          COALESCE(db.to_char_immutable(con_verificationstatus_text), '#NULL#') || '|||' || -- hash from: verificationStatus/text (con_verificationstatus_text)
          COALESCE(db.to_char_immutable(con_category_system), '#NULL#') || '|||' || -- hash from: category/coding/system (con_category_system)
          COALESCE(db.to_char_immutable(con_category_version), '#NULL#') || '|||' || -- hash from: category/coding/version (con_category_version)
          COALESCE(db.to_char_immutable(con_category_code), '#NULL#') || '|||' || -- hash from: category/coding/code (con_category_code)
          COALESCE(db.to_char_immutable(con_category_display), '#NULL#') || '|||' || -- hash from: category/coding/display (con_category_display)
          COALESCE(db.to_char_immutable(con_category_text), '#NULL#') || '|||' || -- hash from: category/text (con_category_text)
          COALESCE(db.to_char_immutable(con_severity_system), '#NULL#') || '|||' || -- hash from: severity/coding/system (con_severity_system)
          COALESCE(db.to_char_immutable(con_severity_version), '#NULL#') || '|||' || -- hash from: severity/coding/version (con_severity_version)
          COALESCE(db.to_char_immutable(con_severity_code), '#NULL#') || '|||' || -- hash from: severity/coding/code (con_severity_code)
          COALESCE(db.to_char_immutable(con_severity_display), '#NULL#') || '|||' || -- hash from: severity/coding/display (con_severity_display)
          COALESCE(db.to_char_immutable(con_severity_text), '#NULL#') || '|||' || -- hash from: severity/text (con_severity_text)
          COALESCE(db.to_char_immutable(con_code_system), '#NULL#') || '|||' || -- hash from: code/coding/system (con_code_system)
          COALESCE(db.to_char_immutable(con_code_version), '#NULL#') || '|||' || -- hash from: code/coding/version (con_code_version)
          COALESCE(db.to_char_immutable(con_code_code), '#NULL#') || '|||' || -- hash from: code/coding/code (con_code_code)
          COALESCE(db.to_char_immutable(con_code_display), '#NULL#') || '|||' || -- hash from: code/coding/display (con_code_display)
          COALESCE(db.to_char_immutable(con_code_text), '#NULL#') || '|||' || -- hash from: code/text (con_code_text)
          COALESCE(db.to_char_immutable(con_bodysite_system), '#NULL#') || '|||' || -- hash from: bodySite/coding/system (con_bodysite_system)
          COALESCE(db.to_char_immutable(con_bodysite_version), '#NULL#') || '|||' || -- hash from: bodySite/coding/version (con_bodysite_version)
          COALESCE(db.to_char_immutable(con_bodysite_code), '#NULL#') || '|||' || -- hash from: bodySite/coding/code (con_bodysite_code)
          COALESCE(db.to_char_immutable(con_bodysite_display), '#NULL#') || '|||' || -- hash from: bodySite/coding/display (con_bodysite_display)
          COALESCE(db.to_char_immutable(con_bodysite_text), '#NULL#') || '|||' || -- hash from: bodySite/text (con_bodysite_text)
          COALESCE(db.to_char_immutable(con_onsetperiod_start), '#NULL#') || '|||' || -- hash from: onsetPeriod/start (con_onsetperiod_start)
          COALESCE(db.to_char_immutable(con_onsetperiod_end), '#NULL#') || '|||' || -- hash from: onsetPeriod/end (con_onsetperiod_end)
          COALESCE(db.to_char_immutable(con_onsetdatetime), '#NULL#') || '|||' || -- hash from: onsetDateTime (con_onsetdatetime)
          COALESCE(db.to_char_immutable(con_abatementdatetime), '#NULL#') || '|||' || -- hash from: abatementDateTime (con_abatementdatetime)
          COALESCE(db.to_char_immutable(con_abatementage_value), '#NULL#') || '|||' || -- hash from: abatementAge/value (con_abatementage_value)
          COALESCE(db.to_char_immutable(con_abatementage_comparator), '#NULL#') || '|||' || -- hash from: abatementAge/comparator (con_abatementage_comparator)
          COALESCE(db.to_char_immutable(con_abatementage_unit), '#NULL#') || '|||' || -- hash from: abatementAge/unit (con_abatementage_unit)
          COALESCE(db.to_char_immutable(con_abatementage_system), '#NULL#') || '|||' || -- hash from: abatementAge/system (con_abatementage_system)
          COALESCE(db.to_char_immutable(con_abatementage_code), '#NULL#') || '|||' || -- hash from: abatementAge/code (con_abatementage_code)
          COALESCE(db.to_char_immutable(con_abatementperiod_start), '#NULL#') || '|||' || -- hash from: abatementPeriod/start (con_abatementperiod_start)
          COALESCE(db.to_char_immutable(con_abatementperiod_end), '#NULL#') || '|||' || -- hash from: abatementPeriod/end (con_abatementperiod_end)
          COALESCE(db.to_char_immutable(con_abatementrange_low_value), '#NULL#') || '|||' || -- hash from: abatementRange/low/value (con_abatementrange_low_value)
          COALESCE(db.to_char_immutable(con_abatementrange_low_unit), '#NULL#') || '|||' || -- hash from: abatementRange/low/unit (con_abatementrange_low_unit)
          COALESCE(db.to_char_immutable(con_abatementrange_low_system), '#NULL#') || '|||' || -- hash from: abatementRange/low/system (con_abatementrange_low_system)
          COALESCE(db.to_char_immutable(con_abatementrange_low_code), '#NULL#') || '|||' || -- hash from: abatementRange/low/code (con_abatementrange_low_code)
          COALESCE(db.to_char_immutable(con_abatementrange_high_value), '#NULL#') || '|||' || -- hash from: abatementRange/high/value (con_abatementrange_high_value)
          COALESCE(db.to_char_immutable(con_abatementrange_high_unit), '#NULL#') || '|||' || -- hash from: abatementRange/high/unit (con_abatementrange_high_unit)
          COALESCE(db.to_char_immutable(con_abatementrange_high_system), '#NULL#') || '|||' || -- hash from: abatementRange/high/system (con_abatementrange_high_system)
          COALESCE(db.to_char_immutable(con_abatementrange_high_code), '#NULL#') || '|||' || -- hash from: abatementRange/high/code (con_abatementrange_high_code)
          COALESCE(db.to_char_immutable(con_abatementstring), '#NULL#') || '|||' || -- hash from: abatementString (con_abatementstring)
          COALESCE(db.to_char_immutable(con_recordeddate), '#NULL#') || '|||' || -- hash from: recordedDate (con_recordeddate)
          COALESCE(db.to_char_immutable(con_recorder_ref), '#NULL#') || '|||' || -- hash from: recorder/reference (con_recorder_ref)
          COALESCE(db.to_char_immutable(con_recorder_type), '#NULL#') || '|||' || -- hash from: recorder/type (con_recorder_type)
          COALESCE(db.to_char_immutable(con_recorder_identifier_use), '#NULL#') || '|||' || -- hash from: recorder/identifier/use (con_recorder_identifier_use)
          COALESCE(db.to_char_immutable(con_recorder_identifier_type_system), '#NULL#') || '|||' || -- hash from: recorder/identifier/type/coding/system (con_recorder_identifier_type_system)
          COALESCE(db.to_char_immutable(con_recorder_identifier_type_version), '#NULL#') || '|||' || -- hash from: recorder/identifier/type/coding/version (con_recorder_identifier_type_version)
          COALESCE(db.to_char_immutable(con_recorder_identifier_type_code), '#NULL#') || '|||' || -- hash from: recorder/identifier/type/coding/code (con_recorder_identifier_type_code)
          COALESCE(db.to_char_immutable(con_recorder_identifier_type_display), '#NULL#') || '|||' || -- hash from: recorder/identifier/type/coding/display (con_recorder_identifier_type_display)
          COALESCE(db.to_char_immutable(con_recorder_identifier_type_text), '#NULL#') || '|||' || -- hash from: recorder/identifier/type/text (con_recorder_identifier_type_text)
          COALESCE(db.to_char_immutable(con_recorder_identifier_system), '#NULL#') || '|||' || -- hash from: recorder/identifier/system (con_recorder_identifier_system)
          COALESCE(db.to_char_immutable(con_recorder_identifier_value), '#NULL#') || '|||' || -- hash from: recorder/identifier/value (con_recorder_identifier_value)
          COALESCE(db.to_char_immutable(con_recorder_display), '#NULL#') || '|||' || -- hash from: recorder/display (con_recorder_display)
          COALESCE(db.to_char_immutable(con_asserter_ref), '#NULL#') || '|||' || -- hash from: asserter/reference (con_asserter_ref)
          COALESCE(db.to_char_immutable(con_asserter_type), '#NULL#') || '|||' || -- hash from: asserter/type (con_asserter_type)
          COALESCE(db.to_char_immutable(con_asserter_identifier_use), '#NULL#') || '|||' || -- hash from: asserter/identifier/use (con_asserter_identifier_use)
          COALESCE(db.to_char_immutable(con_asserter_identifier_type_system), '#NULL#') || '|||' || -- hash from: asserter/identifier/type/coding/system (con_asserter_identifier_type_system)
          COALESCE(db.to_char_immutable(con_asserter_identifier_type_version), '#NULL#') || '|||' || -- hash from: asserter/identifier/type/coding/version (con_asserter_identifier_type_version)
          COALESCE(db.to_char_immutable(con_asserter_identifier_type_code), '#NULL#') || '|||' || -- hash from: asserter/identifier/type/coding/code (con_asserter_identifier_type_code)
          COALESCE(db.to_char_immutable(con_asserter_identifier_type_display), '#NULL#') || '|||' || -- hash from: asserter/identifier/type/coding/display (con_asserter_identifier_type_display)
          COALESCE(db.to_char_immutable(con_asserter_identifier_type_text), '#NULL#') || '|||' || -- hash from: asserter/identifier/type/text (con_asserter_identifier_type_text)
          COALESCE(db.to_char_immutable(con_asserter_identifier_system), '#NULL#') || '|||' || -- hash from: asserter/identifier/system (con_asserter_identifier_system)
          COALESCE(db.to_char_immutable(con_asserter_identifier_value), '#NULL#') || '|||' || -- hash from: asserter/identifier/value (con_asserter_identifier_value)
          COALESCE(db.to_char_immutable(con_asserter_display), '#NULL#') || '|||' || -- hash from: asserter/display (con_asserter_display)
          COALESCE(db.to_char_immutable(con_stage_summary_system), '#NULL#') || '|||' || -- hash from: stage/summary/coding/system (con_stage_summary_system)
          COALESCE(db.to_char_immutable(con_stage_summary_version), '#NULL#') || '|||' || -- hash from: stage/summary/coding/version (con_stage_summary_version)
          COALESCE(db.to_char_immutable(con_stage_summary_code), '#NULL#') || '|||' || -- hash from: stage/summary/coding/code (con_stage_summary_code)
          COALESCE(db.to_char_immutable(con_stage_summary_display), '#NULL#') || '|||' || -- hash from: stage/summary/coding/display (con_stage_summary_display)
          COALESCE(db.to_char_immutable(con_stage_summary_text), '#NULL#') || '|||' || -- hash from: stage/summary/text (con_stage_summary_text)
          COALESCE(db.to_char_immutable(con_stage_assessment_ref), '#NULL#') || '|||' || -- hash from: stage/assessment/reference (con_stage_assessment_ref)
          COALESCE(db.to_char_immutable(con_stage_assessment_type), '#NULL#') || '|||' || -- hash from: stage/assessment/type (con_stage_assessment_type)
          COALESCE(db.to_char_immutable(con_stage_assessment_identifier_use), '#NULL#') || '|||' || -- hash from: stage/assessment/identifier/use (con_stage_assessment_identifier_use)
          COALESCE(db.to_char_immutable(con_stage_assessment_identifier_type_system), '#NULL#') || '|||' || -- hash from: stage/assessment/identifier/type/coding/system (con_stage_assessment_identifier_type_system)
          COALESCE(db.to_char_immutable(con_stage_assessment_identifier_type_version), '#NULL#') || '|||' || -- hash from: stage/assessment/identifier/type/coding/version (con_stage_assessment_identifier_type_version)
          COALESCE(db.to_char_immutable(con_stage_assessment_identifier_type_code), '#NULL#') || '|||' || -- hash from: stage/assessment/identifier/type/coding/code (con_stage_assessment_identifier_type_code)
          COALESCE(db.to_char_immutable(con_stage_assessment_identifier_type_display), '#NULL#') || '|||' || -- hash from: stage/assessment/identifier/type/coding/display (con_stage_assessment_identifier_type_display)
          COALESCE(db.to_char_immutable(con_stage_assessment_identifier_type_text), '#NULL#') || '|||' || -- hash from: stage/assessment/identifier/type/text (con_stage_assessment_identifier_type_text)
          COALESCE(db.to_char_immutable(con_stage_assessment_identifier_system), '#NULL#') || '|||' || -- hash from: stage/assessment/identifier/system (con_stage_assessment_identifier_system)
          COALESCE(db.to_char_immutable(con_stage_assessment_identifier_value), '#NULL#') || '|||' || -- hash from: stage/assessment/identifier/value (con_stage_assessment_identifier_value)
          COALESCE(db.to_char_immutable(con_stage_assessment_display), '#NULL#') || '|||' || -- hash from: stage/assessment/display (con_stage_assessment_display)
          COALESCE(db.to_char_immutable(con_stage_type_system), '#NULL#') || '|||' || -- hash from: stage/type/coding/system (con_stage_type_system)
          COALESCE(db.to_char_immutable(con_stage_type_version), '#NULL#') || '|||' || -- hash from: stage/type/coding/version (con_stage_type_version)
          COALESCE(db.to_char_immutable(con_stage_type_code), '#NULL#') || '|||' || -- hash from: stage/type/coding/code (con_stage_type_code)
          COALESCE(db.to_char_immutable(con_stage_type_display), '#NULL#') || '|||' || -- hash from: stage/type/coding/display (con_stage_type_display)
          COALESCE(db.to_char_immutable(con_stage_type_text), '#NULL#') || '|||' || -- hash from: stage/type/text (con_stage_type_text)
          COALESCE(db.to_char_immutable(con_note_authorstring), '#NULL#') || '|||' || -- hash from: note/authorString (con_note_authorstring)
          COALESCE(db.to_char_immutable(con_note_authorreference_ref), '#NULL#') || '|||' || -- hash from: note/authorReference/reference (con_note_authorreference_ref)
          COALESCE(db.to_char_immutable(con_note_authorreference_type), '#NULL#') || '|||' || -- hash from: note/authorReference/type (con_note_authorreference_type)
          COALESCE(db.to_char_immutable(con_note_authorreference_identifier_use), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/use (con_note_authorreference_identifier_use)
          COALESCE(db.to_char_immutable(con_note_authorreference_identifier_type_system), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/type/coding/system (con_note_authorreference_identifier_type_system)
          COALESCE(db.to_char_immutable(con_note_authorreference_identifier_type_version), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/type/coding/version (con_note_authorreference_identifier_type_version)
          COALESCE(db.to_char_immutable(con_note_authorreference_identifier_type_code), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/type/coding/code (con_note_authorreference_identifier_type_code)
          COALESCE(db.to_char_immutable(con_note_authorreference_identifier_type_display), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/type/coding/display (con_note_authorreference_identifier_type_display)
          COALESCE(db.to_char_immutable(con_note_authorreference_identifier_type_text), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/type/text (con_note_authorreference_identifier_type_text)
          COALESCE(db.to_char_immutable(con_note_authorreference_identifier_system), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/system (con_note_authorreference_identifier_system)
          COALESCE(db.to_char_immutable(con_note_authorreference_identifier_value), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/value (con_note_authorreference_identifier_value)
          COALESCE(db.to_char_immutable(con_note_authorreference_display), '#NULL#') || '|||' || -- hash from: note/authorReference/display (con_note_authorreference_display)
          COALESCE(db.to_char_immutable(con_note_time), '#NULL#') || '|||' || -- hash from: note/time (con_note_time)
          COALESCE(db.to_char_immutable(con_note_text), '#NULL#') || '|||' || -- hash from: note/text (con_note_text)
                 '#'
               )
            ) STORED; -- Column for hash value for comparing FHIR data - collion check in second step hash_index_col
            END IF; -- currend hash definition
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'condition'
            AND column_name = 'hash_index_col'
        ) THEN
            -- Creating the hash column
            ALTER TABLE cds2db_in.condition ADD
            hash_index_col TEXT GENERATED ALWAYS AS (
            md5(
	         COALESCE(db.to_char_immutable(con_id), '#NULL#') || '|||' || -- hash from: id (con_id)
          COALESCE(db.to_char_immutable(con_identifier_use), '#NULL#') || '|||' || -- hash from: identifier/use (con_identifier_use)
          COALESCE(db.to_char_immutable(con_identifier_type_system), '#NULL#') || '|||' || -- hash from: identifier/type/coding/system (con_identifier_type_system)
          COALESCE(db.to_char_immutable(con_identifier_type_version), '#NULL#') || '|||' || -- hash from: identifier/type/coding/version (con_identifier_type_version)
          COALESCE(db.to_char_immutable(con_identifier_type_code), '#NULL#') || '|||' || -- hash from: identifier/type/coding/code (con_identifier_type_code)
          COALESCE(db.to_char_immutable(con_identifier_type_display), '#NULL#') || '|||' || -- hash from: identifier/type/coding/display (con_identifier_type_display)
          COALESCE(db.to_char_immutable(con_identifier_type_text), '#NULL#') || '|||' || -- hash from: identifier/type/text (con_identifier_type_text)
          COALESCE(db.to_char_immutable(con_identifier_system), '#NULL#') || '|||' || -- hash from: identifier/system (con_identifier_system)
          COALESCE(db.to_char_immutable(con_identifier_value), '#NULL#') || '|||' || -- hash from: identifier/value (con_identifier_value)
          COALESCE(db.to_char_immutable(con_identifier_start), '#NULL#') || '|||' || -- hash from: identifier/start (con_identifier_start)
          COALESCE(db.to_char_immutable(con_identifier_end), '#NULL#') || '|||' || -- hash from: identifier/end (con_identifier_end)
          COALESCE(db.to_char_immutable(con_encounter_ref), '#NULL#') || '|||' || -- hash from: encounter/reference (con_encounter_ref)
          COALESCE(db.to_char_immutable(con_patient_ref), '#NULL#') || '|||' || -- hash from: subject/reference (con_patient_ref)
          COALESCE(db.to_char_immutable(con_clinicalstatus_system), '#NULL#') || '|||' || -- hash from: clinicalStatus/coding/system (con_clinicalstatus_system)
          COALESCE(db.to_char_immutable(con_clinicalstatus_version), '#NULL#') || '|||' || -- hash from: clinicalStatus/coding/version (con_clinicalstatus_version)
          COALESCE(db.to_char_immutable(con_clinicalstatus_code), '#NULL#') || '|||' || -- hash from: clinicalStatus/coding/code (con_clinicalstatus_code)
          COALESCE(db.to_char_immutable(con_clinicalstatus_display), '#NULL#') || '|||' || -- hash from: clinicalStatus/coding/display (con_clinicalstatus_display)
          COALESCE(db.to_char_immutable(con_clinicalstatus_text), '#NULL#') || '|||' || -- hash from: clinicalStatus/text (con_clinicalstatus_text)
          COALESCE(db.to_char_immutable(con_verificationstatus_system), '#NULL#') || '|||' || -- hash from: verificationStatus/coding/system (con_verificationstatus_system)
          COALESCE(db.to_char_immutable(con_verificationstatus_version), '#NULL#') || '|||' || -- hash from: verificationStatus/coding/version (con_verificationstatus_version)
          COALESCE(db.to_char_immutable(con_verificationstatus_code), '#NULL#') || '|||' || -- hash from: verificationStatus/coding/code (con_verificationstatus_code)
          COALESCE(db.to_char_immutable(con_verificationstatus_display), '#NULL#') || '|||' || -- hash from: verificationStatus/coding/display (con_verificationstatus_display)
          COALESCE(db.to_char_immutable(con_verificationstatus_text), '#NULL#') || '|||' || -- hash from: verificationStatus/text (con_verificationstatus_text)
          COALESCE(db.to_char_immutable(con_category_system), '#NULL#') || '|||' || -- hash from: category/coding/system (con_category_system)
          COALESCE(db.to_char_immutable(con_category_version), '#NULL#') || '|||' || -- hash from: category/coding/version (con_category_version)
          COALESCE(db.to_char_immutable(con_category_code), '#NULL#') || '|||' || -- hash from: category/coding/code (con_category_code)
          COALESCE(db.to_char_immutable(con_category_display), '#NULL#') || '|||' || -- hash from: category/coding/display (con_category_display)
          COALESCE(db.to_char_immutable(con_category_text), '#NULL#') || '|||' || -- hash from: category/text (con_category_text)
          COALESCE(db.to_char_immutable(con_severity_system), '#NULL#') || '|||' || -- hash from: severity/coding/system (con_severity_system)
          COALESCE(db.to_char_immutable(con_severity_version), '#NULL#') || '|||' || -- hash from: severity/coding/version (con_severity_version)
          COALESCE(db.to_char_immutable(con_severity_code), '#NULL#') || '|||' || -- hash from: severity/coding/code (con_severity_code)
          COALESCE(db.to_char_immutable(con_severity_display), '#NULL#') || '|||' || -- hash from: severity/coding/display (con_severity_display)
          COALESCE(db.to_char_immutable(con_severity_text), '#NULL#') || '|||' || -- hash from: severity/text (con_severity_text)
          COALESCE(db.to_char_immutable(con_code_system), '#NULL#') || '|||' || -- hash from: code/coding/system (con_code_system)
          COALESCE(db.to_char_immutable(con_code_version), '#NULL#') || '|||' || -- hash from: code/coding/version (con_code_version)
          COALESCE(db.to_char_immutable(con_code_code), '#NULL#') || '|||' || -- hash from: code/coding/code (con_code_code)
          COALESCE(db.to_char_immutable(con_code_display), '#NULL#') || '|||' || -- hash from: code/coding/display (con_code_display)
          COALESCE(db.to_char_immutable(con_code_text), '#NULL#') || '|||' || -- hash from: code/text (con_code_text)
          COALESCE(db.to_char_immutable(con_bodysite_system), '#NULL#') || '|||' || -- hash from: bodySite/coding/system (con_bodysite_system)
          COALESCE(db.to_char_immutable(con_bodysite_version), '#NULL#') || '|||' || -- hash from: bodySite/coding/version (con_bodysite_version)
          COALESCE(db.to_char_immutable(con_bodysite_code), '#NULL#') || '|||' || -- hash from: bodySite/coding/code (con_bodysite_code)
          COALESCE(db.to_char_immutable(con_bodysite_display), '#NULL#') || '|||' || -- hash from: bodySite/coding/display (con_bodysite_display)
          COALESCE(db.to_char_immutable(con_bodysite_text), '#NULL#') || '|||' || -- hash from: bodySite/text (con_bodysite_text)
          COALESCE(db.to_char_immutable(con_onsetperiod_start), '#NULL#') || '|||' || -- hash from: onsetPeriod/start (con_onsetperiod_start)
          COALESCE(db.to_char_immutable(con_onsetperiod_end), '#NULL#') || '|||' || -- hash from: onsetPeriod/end (con_onsetperiod_end)
          COALESCE(db.to_char_immutable(con_onsetdatetime), '#NULL#') || '|||' || -- hash from: onsetDateTime (con_onsetdatetime)
          COALESCE(db.to_char_immutable(con_abatementdatetime), '#NULL#') || '|||' || -- hash from: abatementDateTime (con_abatementdatetime)
          COALESCE(db.to_char_immutable(con_abatementage_value), '#NULL#') || '|||' || -- hash from: abatementAge/value (con_abatementage_value)
          COALESCE(db.to_char_immutable(con_abatementage_comparator), '#NULL#') || '|||' || -- hash from: abatementAge/comparator (con_abatementage_comparator)
          COALESCE(db.to_char_immutable(con_abatementage_unit), '#NULL#') || '|||' || -- hash from: abatementAge/unit (con_abatementage_unit)
          COALESCE(db.to_char_immutable(con_abatementage_system), '#NULL#') || '|||' || -- hash from: abatementAge/system (con_abatementage_system)
          COALESCE(db.to_char_immutable(con_abatementage_code), '#NULL#') || '|||' || -- hash from: abatementAge/code (con_abatementage_code)
          COALESCE(db.to_char_immutable(con_abatementperiod_start), '#NULL#') || '|||' || -- hash from: abatementPeriod/start (con_abatementperiod_start)
          COALESCE(db.to_char_immutable(con_abatementperiod_end), '#NULL#') || '|||' || -- hash from: abatementPeriod/end (con_abatementperiod_end)
          COALESCE(db.to_char_immutable(con_abatementrange_low_value), '#NULL#') || '|||' || -- hash from: abatementRange/low/value (con_abatementrange_low_value)
          COALESCE(db.to_char_immutable(con_abatementrange_low_unit), '#NULL#') || '|||' || -- hash from: abatementRange/low/unit (con_abatementrange_low_unit)
          COALESCE(db.to_char_immutable(con_abatementrange_low_system), '#NULL#') || '|||' || -- hash from: abatementRange/low/system (con_abatementrange_low_system)
          COALESCE(db.to_char_immutable(con_abatementrange_low_code), '#NULL#') || '|||' || -- hash from: abatementRange/low/code (con_abatementrange_low_code)
          COALESCE(db.to_char_immutable(con_abatementrange_high_value), '#NULL#') || '|||' || -- hash from: abatementRange/high/value (con_abatementrange_high_value)
          COALESCE(db.to_char_immutable(con_abatementrange_high_unit), '#NULL#') || '|||' || -- hash from: abatementRange/high/unit (con_abatementrange_high_unit)
          COALESCE(db.to_char_immutable(con_abatementrange_high_system), '#NULL#') || '|||' || -- hash from: abatementRange/high/system (con_abatementrange_high_system)
          COALESCE(db.to_char_immutable(con_abatementrange_high_code), '#NULL#') || '|||' || -- hash from: abatementRange/high/code (con_abatementrange_high_code)
          COALESCE(db.to_char_immutable(con_abatementstring), '#NULL#') || '|||' || -- hash from: abatementString (con_abatementstring)
          COALESCE(db.to_char_immutable(con_recordeddate), '#NULL#') || '|||' || -- hash from: recordedDate (con_recordeddate)
          COALESCE(db.to_char_immutable(con_recorder_ref), '#NULL#') || '|||' || -- hash from: recorder/reference (con_recorder_ref)
          COALESCE(db.to_char_immutable(con_recorder_type), '#NULL#') || '|||' || -- hash from: recorder/type (con_recorder_type)
          COALESCE(db.to_char_immutable(con_recorder_identifier_use), '#NULL#') || '|||' || -- hash from: recorder/identifier/use (con_recorder_identifier_use)
          COALESCE(db.to_char_immutable(con_recorder_identifier_type_system), '#NULL#') || '|||' || -- hash from: recorder/identifier/type/coding/system (con_recorder_identifier_type_system)
          COALESCE(db.to_char_immutable(con_recorder_identifier_type_version), '#NULL#') || '|||' || -- hash from: recorder/identifier/type/coding/version (con_recorder_identifier_type_version)
          COALESCE(db.to_char_immutable(con_recorder_identifier_type_code), '#NULL#') || '|||' || -- hash from: recorder/identifier/type/coding/code (con_recorder_identifier_type_code)
          COALESCE(db.to_char_immutable(con_recorder_identifier_type_display), '#NULL#') || '|||' || -- hash from: recorder/identifier/type/coding/display (con_recorder_identifier_type_display)
          COALESCE(db.to_char_immutable(con_recorder_identifier_type_text), '#NULL#') || '|||' || -- hash from: recorder/identifier/type/text (con_recorder_identifier_type_text)
          COALESCE(db.to_char_immutable(con_recorder_identifier_system), '#NULL#') || '|||' || -- hash from: recorder/identifier/system (con_recorder_identifier_system)
          COALESCE(db.to_char_immutable(con_recorder_identifier_value), '#NULL#') || '|||' || -- hash from: recorder/identifier/value (con_recorder_identifier_value)
          COALESCE(db.to_char_immutable(con_recorder_display), '#NULL#') || '|||' || -- hash from: recorder/display (con_recorder_display)
          COALESCE(db.to_char_immutable(con_asserter_ref), '#NULL#') || '|||' || -- hash from: asserter/reference (con_asserter_ref)
          COALESCE(db.to_char_immutable(con_asserter_type), '#NULL#') || '|||' || -- hash from: asserter/type (con_asserter_type)
          COALESCE(db.to_char_immutable(con_asserter_identifier_use), '#NULL#') || '|||' || -- hash from: asserter/identifier/use (con_asserter_identifier_use)
          COALESCE(db.to_char_immutable(con_asserter_identifier_type_system), '#NULL#') || '|||' || -- hash from: asserter/identifier/type/coding/system (con_asserter_identifier_type_system)
          COALESCE(db.to_char_immutable(con_asserter_identifier_type_version), '#NULL#') || '|||' || -- hash from: asserter/identifier/type/coding/version (con_asserter_identifier_type_version)
          COALESCE(db.to_char_immutable(con_asserter_identifier_type_code), '#NULL#') || '|||' || -- hash from: asserter/identifier/type/coding/code (con_asserter_identifier_type_code)
          COALESCE(db.to_char_immutable(con_asserter_identifier_type_display), '#NULL#') || '|||' || -- hash from: asserter/identifier/type/coding/display (con_asserter_identifier_type_display)
          COALESCE(db.to_char_immutable(con_asserter_identifier_type_text), '#NULL#') || '|||' || -- hash from: asserter/identifier/type/text (con_asserter_identifier_type_text)
          COALESCE(db.to_char_immutable(con_asserter_identifier_system), '#NULL#') || '|||' || -- hash from: asserter/identifier/system (con_asserter_identifier_system)
          COALESCE(db.to_char_immutable(con_asserter_identifier_value), '#NULL#') || '|||' || -- hash from: asserter/identifier/value (con_asserter_identifier_value)
          COALESCE(db.to_char_immutable(con_asserter_display), '#NULL#') || '|||' || -- hash from: asserter/display (con_asserter_display)
          COALESCE(db.to_char_immutable(con_stage_summary_system), '#NULL#') || '|||' || -- hash from: stage/summary/coding/system (con_stage_summary_system)
          COALESCE(db.to_char_immutable(con_stage_summary_version), '#NULL#') || '|||' || -- hash from: stage/summary/coding/version (con_stage_summary_version)
          COALESCE(db.to_char_immutable(con_stage_summary_code), '#NULL#') || '|||' || -- hash from: stage/summary/coding/code (con_stage_summary_code)
          COALESCE(db.to_char_immutable(con_stage_summary_display), '#NULL#') || '|||' || -- hash from: stage/summary/coding/display (con_stage_summary_display)
          COALESCE(db.to_char_immutable(con_stage_summary_text), '#NULL#') || '|||' || -- hash from: stage/summary/text (con_stage_summary_text)
          COALESCE(db.to_char_immutable(con_stage_assessment_ref), '#NULL#') || '|||' || -- hash from: stage/assessment/reference (con_stage_assessment_ref)
          COALESCE(db.to_char_immutable(con_stage_assessment_type), '#NULL#') || '|||' || -- hash from: stage/assessment/type (con_stage_assessment_type)
          COALESCE(db.to_char_immutable(con_stage_assessment_identifier_use), '#NULL#') || '|||' || -- hash from: stage/assessment/identifier/use (con_stage_assessment_identifier_use)
          COALESCE(db.to_char_immutable(con_stage_assessment_identifier_type_system), '#NULL#') || '|||' || -- hash from: stage/assessment/identifier/type/coding/system (con_stage_assessment_identifier_type_system)
          COALESCE(db.to_char_immutable(con_stage_assessment_identifier_type_version), '#NULL#') || '|||' || -- hash from: stage/assessment/identifier/type/coding/version (con_stage_assessment_identifier_type_version)
          COALESCE(db.to_char_immutable(con_stage_assessment_identifier_type_code), '#NULL#') || '|||' || -- hash from: stage/assessment/identifier/type/coding/code (con_stage_assessment_identifier_type_code)
          COALESCE(db.to_char_immutable(con_stage_assessment_identifier_type_display), '#NULL#') || '|||' || -- hash from: stage/assessment/identifier/type/coding/display (con_stage_assessment_identifier_type_display)
          COALESCE(db.to_char_immutable(con_stage_assessment_identifier_type_text), '#NULL#') || '|||' || -- hash from: stage/assessment/identifier/type/text (con_stage_assessment_identifier_type_text)
          COALESCE(db.to_char_immutable(con_stage_assessment_identifier_system), '#NULL#') || '|||' || -- hash from: stage/assessment/identifier/system (con_stage_assessment_identifier_system)
          COALESCE(db.to_char_immutable(con_stage_assessment_identifier_value), '#NULL#') || '|||' || -- hash from: stage/assessment/identifier/value (con_stage_assessment_identifier_value)
          COALESCE(db.to_char_immutable(con_stage_assessment_display), '#NULL#') || '|||' || -- hash from: stage/assessment/display (con_stage_assessment_display)
          COALESCE(db.to_char_immutable(con_stage_type_system), '#NULL#') || '|||' || -- hash from: stage/type/coding/system (con_stage_type_system)
          COALESCE(db.to_char_immutable(con_stage_type_version), '#NULL#') || '|||' || -- hash from: stage/type/coding/version (con_stage_type_version)
          COALESCE(db.to_char_immutable(con_stage_type_code), '#NULL#') || '|||' || -- hash from: stage/type/coding/code (con_stage_type_code)
          COALESCE(db.to_char_immutable(con_stage_type_display), '#NULL#') || '|||' || -- hash from: stage/type/coding/display (con_stage_type_display)
          COALESCE(db.to_char_immutable(con_stage_type_text), '#NULL#') || '|||' || -- hash from: stage/type/text (con_stage_type_text)
          COALESCE(db.to_char_immutable(con_note_authorstring), '#NULL#') || '|||' || -- hash from: note/authorString (con_note_authorstring)
          COALESCE(db.to_char_immutable(con_note_authorreference_ref), '#NULL#') || '|||' || -- hash from: note/authorReference/reference (con_note_authorreference_ref)
          COALESCE(db.to_char_immutable(con_note_authorreference_type), '#NULL#') || '|||' || -- hash from: note/authorReference/type (con_note_authorreference_type)
          COALESCE(db.to_char_immutable(con_note_authorreference_identifier_use), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/use (con_note_authorreference_identifier_use)
          COALESCE(db.to_char_immutable(con_note_authorreference_identifier_type_system), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/type/coding/system (con_note_authorreference_identifier_type_system)
          COALESCE(db.to_char_immutable(con_note_authorreference_identifier_type_version), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/type/coding/version (con_note_authorreference_identifier_type_version)
          COALESCE(db.to_char_immutable(con_note_authorreference_identifier_type_code), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/type/coding/code (con_note_authorreference_identifier_type_code)
          COALESCE(db.to_char_immutable(con_note_authorreference_identifier_type_display), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/type/coding/display (con_note_authorreference_identifier_type_display)
          COALESCE(db.to_char_immutable(con_note_authorreference_identifier_type_text), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/type/text (con_note_authorreference_identifier_type_text)
          COALESCE(db.to_char_immutable(con_note_authorreference_identifier_system), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/system (con_note_authorreference_identifier_system)
          COALESCE(db.to_char_immutable(con_note_authorreference_identifier_value), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/value (con_note_authorreference_identifier_value)
          COALESCE(db.to_char_immutable(con_note_authorreference_display), '#NULL#') || '|||' || -- hash from: note/authorReference/display (con_note_authorreference_display)
          COALESCE(db.to_char_immutable(con_note_time), '#NULL#') || '|||' || -- hash from: note/time (con_note_time)
          COALESCE(db.to_char_immutable(con_note_text), '#NULL#') || '|||' || -- hash from: note/text (con_note_text)
                 '#'
               )
            ) STORED; -- Column for hash value for comparing FHIR data - collion check in second step hash_index_col
        END IF; -- column
    END IF; -- Table
END
$$;
-- Table "medication" in schema "cds2db_in"
-------------------------------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS cds2db_in.medication (
  medication_id int PRIMARY KEY DEFAULT nextval('db.db_seq') -- Primary key of the entity
);

DO
$$
DECLARE
    IF EXISTS ( -- Table exists
        SELECT 1 FROM information_schema.columns 
        WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
    ) THEN
        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'input_datetime'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD medication_raw_id int NOT NULL; -- Primary key of the corresponding raw table
            NULL;
        END IF; -- column

-- Organizational items - fixed for each database table -----------------------------------------
        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'input_datetime'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD input_datetime TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP; -- Time at which data record was created
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'last_check_datetime'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD last_check_datetime TIMESTAMP DEFAULT NULL; -- Time at which data record was last checked
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'current_dataset_status'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD current_dataset_status VARCHAR DEFAULT 'input'; -- Processing status of the data record
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'input_processing_nr'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD input_processing_nr INT; -- (First) Processing number of the data record
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'last_processing_nr'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD last_processing_nr INT; -- Last processing number of the data record
        END IF; -- column

-- Data-leading columns -------------------------------------------------------------------------
        IF NOT EXISTS ( -- column not exists (med_id)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'med_id'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD med_id varchar;   -- id (varchar)
        END IF; -- column (med_id)
        IF NOT EXISTS ( -- column not exists (med_meta_versionid)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'med_meta_versionid'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD med_meta_versionid varchar;   -- meta/versionId (varchar)
        END IF; -- column (med_meta_versionid)
        IF NOT EXISTS ( -- column not exists (med_meta_lastupdated)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'med_meta_lastupdated'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD med_meta_lastupdated timestamp;   -- meta/lastUpdated (timestamp)
        END IF; -- column (med_meta_lastupdated)
        IF NOT EXISTS ( -- column not exists (med_meta_profile)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'med_meta_profile'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD med_meta_profile varchar;   -- meta/profile (varchar)
        END IF; -- column (med_meta_profile)
        IF NOT EXISTS ( -- column not exists (med_identifier_use)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'med_identifier_use'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD med_identifier_use varchar;   -- identifier/use (varchar)
        END IF; -- column (med_identifier_use)
        IF NOT EXISTS ( -- column not exists (med_identifier_type_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'med_identifier_type_system'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD med_identifier_type_system varchar;   -- identifier/type/coding/system (varchar)
        END IF; -- column (med_identifier_type_system)
        IF NOT EXISTS ( -- column not exists (med_identifier_type_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'med_identifier_type_version'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD med_identifier_type_version varchar;   -- identifier/type/coding/version (varchar)
        END IF; -- column (med_identifier_type_version)
        IF NOT EXISTS ( -- column not exists (med_identifier_type_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'med_identifier_type_code'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD med_identifier_type_code varchar;   -- identifier/type/coding/code (varchar)
        END IF; -- column (med_identifier_type_code)
        IF NOT EXISTS ( -- column not exists (med_identifier_type_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'med_identifier_type_display'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD med_identifier_type_display varchar;   -- identifier/type/coding/display (varchar)
        END IF; -- column (med_identifier_type_display)
        IF NOT EXISTS ( -- column not exists (med_identifier_type_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'med_identifier_type_text'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD med_identifier_type_text varchar;   -- identifier/type/text (varchar)
        END IF; -- column (med_identifier_type_text)
        IF NOT EXISTS ( -- column not exists (med_identifier_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'med_identifier_system'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD med_identifier_system varchar;   -- identifier/system (varchar)
        END IF; -- column (med_identifier_system)
        IF NOT EXISTS ( -- column not exists (med_identifier_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'med_identifier_value'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD med_identifier_value varchar;   -- identifier/value (varchar)
        END IF; -- column (med_identifier_value)
        IF NOT EXISTS ( -- column not exists (med_identifier_start)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'med_identifier_start'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD med_identifier_start timestamp;   -- identifier/start (timestamp)
        END IF; -- column (med_identifier_start)
        IF NOT EXISTS ( -- column not exists (med_identifier_end)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'med_identifier_end'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD med_identifier_end timestamp;   -- identifier/end (timestamp)
        END IF; -- column (med_identifier_end)
        IF NOT EXISTS ( -- column not exists (med_code_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'med_code_system'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD med_code_system varchar;   -- code/coding/system (varchar)
        END IF; -- column (med_code_system)
        IF NOT EXISTS ( -- column not exists (med_code_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'med_code_version'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD med_code_version varchar;   -- code/coding/version (varchar)
        END IF; -- column (med_code_version)
        IF NOT EXISTS ( -- column not exists (med_code_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'med_code_code'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD med_code_code varchar;   -- code/coding/code (varchar)
        END IF; -- column (med_code_code)
        IF NOT EXISTS ( -- column not exists (med_code_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'med_code_display'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD med_code_display varchar;   -- code/coding/display (varchar)
        END IF; -- column (med_code_display)
        IF NOT EXISTS ( -- column not exists (med_code_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'med_code_text'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD med_code_text varchar;   -- code/text (varchar)
        END IF; -- column (med_code_text)
        IF NOT EXISTS ( -- column not exists (med_status)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'med_status'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD med_status varchar;   -- status (varchar)
        END IF; -- column (med_status)
        IF NOT EXISTS ( -- column not exists (med_form_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'med_form_system'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD med_form_system varchar;   -- form/coding/system (varchar)
        END IF; -- column (med_form_system)
        IF NOT EXISTS ( -- column not exists (med_form_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'med_form_version'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD med_form_version varchar;   -- form/coding/version (varchar)
        END IF; -- column (med_form_version)
        IF NOT EXISTS ( -- column not exists (med_form_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'med_form_code'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD med_form_code varchar;   -- form/coding/code (varchar)
        END IF; -- column (med_form_code)
        IF NOT EXISTS ( -- column not exists (med_form_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'med_form_display'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD med_form_display varchar;   -- form/coding/display (varchar)
        END IF; -- column (med_form_display)
        IF NOT EXISTS ( -- column not exists (med_form_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'med_form_text'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD med_form_text varchar;   -- form/text (varchar)
        END IF; -- column (med_form_text)
        IF NOT EXISTS ( -- column not exists (med_amount_numerator_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'med_amount_numerator_value'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD med_amount_numerator_value double precision;   -- amount/numerator/value (double precision)
        END IF; -- column (med_amount_numerator_value)
        IF NOT EXISTS ( -- column not exists (med_amount_numerator_comparator)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'med_amount_numerator_comparator'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD med_amount_numerator_comparator varchar;   -- amount/numerator/comparator (varchar)
        END IF; -- column (med_amount_numerator_comparator)
        IF NOT EXISTS ( -- column not exists (med_amount_numerator_unit)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'med_amount_numerator_unit'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD med_amount_numerator_unit varchar;   -- amount/numerator/unit (varchar)
        END IF; -- column (med_amount_numerator_unit)
        IF NOT EXISTS ( -- column not exists (med_amount_numerator_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'med_amount_numerator_system'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD med_amount_numerator_system varchar;   -- amount/numerator/system (varchar)
        END IF; -- column (med_amount_numerator_system)
        IF NOT EXISTS ( -- column not exists (med_amount_numerator_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'med_amount_numerator_code'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD med_amount_numerator_code varchar;   -- amount/numerator/code (varchar)
        END IF; -- column (med_amount_numerator_code)
        IF NOT EXISTS ( -- column not exists (med_amount_denominator_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'med_amount_denominator_value'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD med_amount_denominator_value double precision;   -- amount/denominator/value (double precision)
        END IF; -- column (med_amount_denominator_value)
        IF NOT EXISTS ( -- column not exists (med_amount_denominator_comparator)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'med_amount_denominator_comparator'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD med_amount_denominator_comparator varchar;   -- amount/denominator/comparator (varchar)
        END IF; -- column (med_amount_denominator_comparator)
        IF NOT EXISTS ( -- column not exists (med_amount_denominator_unit)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'med_amount_denominator_unit'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD med_amount_denominator_unit varchar;   -- amount/denominator/unit (varchar)
        END IF; -- column (med_amount_denominator_unit)
        IF NOT EXISTS ( -- column not exists (med_amount_denominator_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'med_amount_denominator_system'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD med_amount_denominator_system varchar;   -- amount/denominator/system (varchar)
        END IF; -- column (med_amount_denominator_system)
        IF NOT EXISTS ( -- column not exists (med_amount_denominator_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'med_amount_denominator_code'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD med_amount_denominator_code varchar;   -- amount/denominator/code (varchar)
        END IF; -- column (med_amount_denominator_code)
        IF NOT EXISTS ( -- column not exists (med_ingredient_strength_numerator_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'med_ingredient_strength_numerator_value'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD med_ingredient_strength_numerator_value double precision;   -- ingredient/strength/numerator/value (double precision)
        END IF; -- column (med_ingredient_strength_numerator_value)
        IF NOT EXISTS ( -- column not exists (med_ingredient_strength_numerator_comparator)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'med_ingredient_strength_numerator_comparator'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD med_ingredient_strength_numerator_comparator varchar;   -- ingredient/strength/numerator/comparator (varchar)
        END IF; -- column (med_ingredient_strength_numerator_comparator)
        IF NOT EXISTS ( -- column not exists (med_ingredient_strength_numerator_unit)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'med_ingredient_strength_numerator_unit'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD med_ingredient_strength_numerator_unit varchar;   -- ingredient/strength/numerator/unit (varchar)
        END IF; -- column (med_ingredient_strength_numerator_unit)
        IF NOT EXISTS ( -- column not exists (med_ingredient_strength_numerator_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'med_ingredient_strength_numerator_system'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD med_ingredient_strength_numerator_system varchar;   -- ingredient/strength/numerator/system (varchar)
        END IF; -- column (med_ingredient_strength_numerator_system)
        IF NOT EXISTS ( -- column not exists (med_ingredient_strength_numerator_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'med_ingredient_strength_numerator_code'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD med_ingredient_strength_numerator_code varchar;   -- ingredient/strength/numerator/code (varchar)
        END IF; -- column (med_ingredient_strength_numerator_code)
        IF NOT EXISTS ( -- column not exists (med_ingredient_strength_denominator_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'med_ingredient_strength_denominator_value'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD med_ingredient_strength_denominator_value double precision;   -- ingredient/strength/denominator/value (double precision)
        END IF; -- column (med_ingredient_strength_denominator_value)
        IF NOT EXISTS ( -- column not exists (med_ingredient_strength_denominator_comparator)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'med_ingredient_strength_denominator_comparator'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD med_ingredient_strength_denominator_comparator varchar;   -- ingredient/strength/denominator/comparator (varchar)
        END IF; -- column (med_ingredient_strength_denominator_comparator)
        IF NOT EXISTS ( -- column not exists (med_ingredient_strength_denominator_unit)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'med_ingredient_strength_denominator_unit'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD med_ingredient_strength_denominator_unit varchar;   -- ingredient/strength/denominator/unit (varchar)
        END IF; -- column (med_ingredient_strength_denominator_unit)
        IF NOT EXISTS ( -- column not exists (med_ingredient_strength_denominator_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'med_ingredient_strength_denominator_system'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD med_ingredient_strength_denominator_system varchar;   -- ingredient/strength/denominator/system (varchar)
        END IF; -- column (med_ingredient_strength_denominator_system)
        IF NOT EXISTS ( -- column not exists (med_ingredient_strength_denominator_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'med_ingredient_strength_denominator_code'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD med_ingredient_strength_denominator_code varchar;   -- ingredient/strength/denominator/code (varchar)
        END IF; -- column (med_ingredient_strength_denominator_code)
        IF NOT EXISTS ( -- column not exists (med_ingredient_itemcodeableconcept_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'med_ingredient_itemcodeableconcept_system'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD med_ingredient_itemcodeableconcept_system varchar;   -- ingredient/itemCodeableConcept/coding/system (varchar)
        END IF; -- column (med_ingredient_itemcodeableconcept_system)
        IF NOT EXISTS ( -- column not exists (med_ingredient_itemcodeableconcept_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'med_ingredient_itemcodeableconcept_version'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD med_ingredient_itemcodeableconcept_version varchar;   -- ingredient/itemCodeableConcept/coding/version (varchar)
        END IF; -- column (med_ingredient_itemcodeableconcept_version)
        IF NOT EXISTS ( -- column not exists (med_ingredient_itemcodeableconcept_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'med_ingredient_itemcodeableconcept_code'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD med_ingredient_itemcodeableconcept_code varchar;   -- ingredient/itemCodeableConcept/coding/code (varchar)
        END IF; -- column (med_ingredient_itemcodeableconcept_code)
        IF NOT EXISTS ( -- column not exists (med_ingredient_itemcodeableconcept_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'med_ingredient_itemcodeableconcept_display'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD med_ingredient_itemcodeableconcept_display varchar;   -- ingredient/itemCodeableConcept/coding/display (varchar)
        END IF; -- column (med_ingredient_itemcodeableconcept_display)
        IF NOT EXISTS ( -- column not exists (med_ingredient_itemcodeableconcept_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'med_ingredient_itemcodeableconcept_text'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD med_ingredient_itemcodeableconcept_text varchar;   -- ingredient/itemCodeableConcept/text (varchar)
        END IF; -- column (med_ingredient_itemcodeableconcept_text)
        IF NOT EXISTS ( -- column not exists (med_ingredient_itemreference_ref)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'med_ingredient_itemreference_ref'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD med_ingredient_itemreference_ref varchar;   -- ingredient/itemReference/reference (varchar)
        END IF; -- column (med_ingredient_itemreference_ref)
        IF NOT EXISTS ( -- column not exists (med_ingredient_itemreference_type)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'med_ingredient_itemreference_type'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD med_ingredient_itemreference_type varchar;   -- ingredient/itemReference/type (varchar)
        END IF; -- column (med_ingredient_itemreference_type)
        IF NOT EXISTS ( -- column not exists (med_ingredient_itemreference_identifier_use)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'med_ingredient_itemreference_identifier_use'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD med_ingredient_itemreference_identifier_use varchar;   -- ingredient/itemReference/identifier/use (varchar)
        END IF; -- column (med_ingredient_itemreference_identifier_use)
        IF NOT EXISTS ( -- column not exists (med_ingredient_itemreference_identifier_type_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'med_ingredient_itemreference_identifier_type_system'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD med_ingredient_itemreference_identifier_type_system varchar;   -- ingredient/itemReference/identifier/type/coding/system (varchar)
        END IF; -- column (med_ingredient_itemreference_identifier_type_system)
        IF NOT EXISTS ( -- column not exists (med_ingredient_itemreference_identifier_type_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'med_ingredient_itemreference_identifier_type_version'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD med_ingredient_itemreference_identifier_type_version varchar;   -- ingredient/itemReference/identifier/type/coding/version (varchar)
        END IF; -- column (med_ingredient_itemreference_identifier_type_version)
        IF NOT EXISTS ( -- column not exists (med_ingredient_itemreference_identifier_type_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'med_ingredient_itemreference_identifier_type_code'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD med_ingredient_itemreference_identifier_type_code varchar;   -- ingredient/itemReference/identifier/type/coding/code (varchar)
        END IF; -- column (med_ingredient_itemreference_identifier_type_code)
        IF NOT EXISTS ( -- column not exists (med_ingredient_itemreference_identifier_type_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'med_ingredient_itemreference_identifier_type_display'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD med_ingredient_itemreference_identifier_type_display varchar;   -- ingredient/itemReference/identifier/type/coding/display (varchar)
        END IF; -- column (med_ingredient_itemreference_identifier_type_display)
        IF NOT EXISTS ( -- column not exists (med_ingredient_itemreference_identifier_type_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'med_ingredient_itemreference_identifier_type_text'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD med_ingredient_itemreference_identifier_type_text varchar;   -- ingredient/itemReference/identifier/type/text (varchar)
        END IF; -- column (med_ingredient_itemreference_identifier_type_text)
        IF NOT EXISTS ( -- column not exists (med_ingredient_itemreference_identifier_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'med_ingredient_itemreference_identifier_system'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD med_ingredient_itemreference_identifier_system varchar;   -- ingredient/itemReference/identifier/system (varchar)
        END IF; -- column (med_ingredient_itemreference_identifier_system)
        IF NOT EXISTS ( -- column not exists (med_ingredient_itemreference_identifier_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'med_ingredient_itemreference_identifier_value'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD med_ingredient_itemreference_identifier_value varchar;   -- ingredient/itemReference/identifier/value (varchar)
        END IF; -- column (med_ingredient_itemreference_identifier_value)
        IF NOT EXISTS ( -- column not exists (med_ingredient_itemreference_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'med_ingredient_itemreference_display'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD med_ingredient_itemreference_display varchar;   -- ingredient/itemReference/display (varchar)
        END IF; -- column (med_ingredient_itemreference_display)
        IF NOT EXISTS ( -- column not exists (med_ingredient_isactive)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'med_ingredient_isactive'
        ) THEN
            ALTER TABLE cds2db_in.medication ADD med_ingredient_isactive boolean;   -- ingredient/isActive (boolean)
        END IF; -- column (med_ingredient_isactive)

-- Hash column for comparison on data-bearing columns -------------------------------------------
        IF EXISTS ( -- column exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication' AND column_name = 'hash_index_col'
        ) THEN
            IF NOT EXISTS ( -- column exists
                SELECT 1 FROM information_schema.columns WHERE table_schema = 'cds2db_in' AND table_name = 'medication' AND column_name = 'hash_index_col'
                AND trim(replace(replace(generation_expression::TEXT,'(',''),')','')) != trim(replace(replace('
	         COALESCE(db.to_char_immutable(med_id), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(med_identifier_use), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(med_identifier_type_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(med_identifier_type_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(med_identifier_type_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(med_identifier_type_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(med_identifier_type_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(med_identifier_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(med_identifier_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(med_identifier_start), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(med_identifier_end), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(med_code_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(med_code_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(med_code_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(med_code_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(med_code_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(med_status), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(med_form_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(med_form_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(med_form_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(med_form_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(med_form_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(med_amount_numerator_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(med_amount_numerator_comparator), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(med_amount_numerator_unit), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(med_amount_numerator_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(med_amount_numerator_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(med_amount_denominator_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(med_amount_denominator_comparator), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(med_amount_denominator_unit), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(med_amount_denominator_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(med_amount_denominator_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(med_ingredient_strength_numerator_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(med_ingredient_strength_numerator_comparator), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(med_ingredient_strength_numerator_unit), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(med_ingredient_strength_numerator_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(med_ingredient_strength_numerator_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(med_ingredient_strength_denominator_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(med_ingredient_strength_denominator_comparator), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(med_ingredient_strength_denominator_unit), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(med_ingredient_strength_denominator_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(med_ingredient_strength_denominator_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(med_ingredient_itemcodeableconcept_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(med_ingredient_itemcodeableconcept_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(med_ingredient_itemcodeableconcept_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(med_ingredient_itemcodeableconcept_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(med_ingredient_itemcodeableconcept_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(med_ingredient_itemreference_ref), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(med_ingredient_itemreference_type), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(med_ingredient_itemreference_identifier_use), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(med_ingredient_itemreference_identifier_type_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(med_ingredient_itemreference_identifier_type_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(med_ingredient_itemreference_identifier_type_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(med_ingredient_itemreference_identifier_type_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(med_ingredient_itemreference_identifier_type_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(med_ingredient_itemreference_identifier_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(med_ingredient_itemreference_identifier_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(med_ingredient_itemreference_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(med_ingredient_isactive), ''#NULL#'') || ''|||'' ||''#''
                ','(',''),')',''))
            ) THEN
            -- Delete the old hash column so that a new one can be created
            ALTER TABLE cds2db_in.medication DROP COLUMN hash_index_col;

            -- Creating the hash column
            ALTER TABLE cds2db_in.medication ADD
            hash_index_col TEXT GENERATED ALWAYS AS (
            md5(
	         COALESCE(db.to_char_immutable(med_id), '#NULL#') || '|||' || -- hash from: id (med_id)
          COALESCE(db.to_char_immutable(med_identifier_use), '#NULL#') || '|||' || -- hash from: identifier/use (med_identifier_use)
          COALESCE(db.to_char_immutable(med_identifier_type_system), '#NULL#') || '|||' || -- hash from: identifier/type/coding/system (med_identifier_type_system)
          COALESCE(db.to_char_immutable(med_identifier_type_version), '#NULL#') || '|||' || -- hash from: identifier/type/coding/version (med_identifier_type_version)
          COALESCE(db.to_char_immutable(med_identifier_type_code), '#NULL#') || '|||' || -- hash from: identifier/type/coding/code (med_identifier_type_code)
          COALESCE(db.to_char_immutable(med_identifier_type_display), '#NULL#') || '|||' || -- hash from: identifier/type/coding/display (med_identifier_type_display)
          COALESCE(db.to_char_immutable(med_identifier_type_text), '#NULL#') || '|||' || -- hash from: identifier/type/text (med_identifier_type_text)
          COALESCE(db.to_char_immutable(med_identifier_system), '#NULL#') || '|||' || -- hash from: identifier/system (med_identifier_system)
          COALESCE(db.to_char_immutable(med_identifier_value), '#NULL#') || '|||' || -- hash from: identifier/value (med_identifier_value)
          COALESCE(db.to_char_immutable(med_identifier_start), '#NULL#') || '|||' || -- hash from: identifier/start (med_identifier_start)
          COALESCE(db.to_char_immutable(med_identifier_end), '#NULL#') || '|||' || -- hash from: identifier/end (med_identifier_end)
          COALESCE(db.to_char_immutable(med_code_system), '#NULL#') || '|||' || -- hash from: code/coding/system (med_code_system)
          COALESCE(db.to_char_immutable(med_code_version), '#NULL#') || '|||' || -- hash from: code/coding/version (med_code_version)
          COALESCE(db.to_char_immutable(med_code_code), '#NULL#') || '|||' || -- hash from: code/coding/code (med_code_code)
          COALESCE(db.to_char_immutable(med_code_display), '#NULL#') || '|||' || -- hash from: code/coding/display (med_code_display)
          COALESCE(db.to_char_immutable(med_code_text), '#NULL#') || '|||' || -- hash from: code/text (med_code_text)
          COALESCE(db.to_char_immutable(med_status), '#NULL#') || '|||' || -- hash from: status (med_status)
          COALESCE(db.to_char_immutable(med_form_system), '#NULL#') || '|||' || -- hash from: form/coding/system (med_form_system)
          COALESCE(db.to_char_immutable(med_form_version), '#NULL#') || '|||' || -- hash from: form/coding/version (med_form_version)
          COALESCE(db.to_char_immutable(med_form_code), '#NULL#') || '|||' || -- hash from: form/coding/code (med_form_code)
          COALESCE(db.to_char_immutable(med_form_display), '#NULL#') || '|||' || -- hash from: form/coding/display (med_form_display)
          COALESCE(db.to_char_immutable(med_form_text), '#NULL#') || '|||' || -- hash from: form/text (med_form_text)
          COALESCE(db.to_char_immutable(med_amount_numerator_value), '#NULL#') || '|||' || -- hash from: amount/numerator/value (med_amount_numerator_value)
          COALESCE(db.to_char_immutable(med_amount_numerator_comparator), '#NULL#') || '|||' || -- hash from: amount/numerator/comparator (med_amount_numerator_comparator)
          COALESCE(db.to_char_immutable(med_amount_numerator_unit), '#NULL#') || '|||' || -- hash from: amount/numerator/unit (med_amount_numerator_unit)
          COALESCE(db.to_char_immutable(med_amount_numerator_system), '#NULL#') || '|||' || -- hash from: amount/numerator/system (med_amount_numerator_system)
          COALESCE(db.to_char_immutable(med_amount_numerator_code), '#NULL#') || '|||' || -- hash from: amount/numerator/code (med_amount_numerator_code)
          COALESCE(db.to_char_immutable(med_amount_denominator_value), '#NULL#') || '|||' || -- hash from: amount/denominator/value (med_amount_denominator_value)
          COALESCE(db.to_char_immutable(med_amount_denominator_comparator), '#NULL#') || '|||' || -- hash from: amount/denominator/comparator (med_amount_denominator_comparator)
          COALESCE(db.to_char_immutable(med_amount_denominator_unit), '#NULL#') || '|||' || -- hash from: amount/denominator/unit (med_amount_denominator_unit)
          COALESCE(db.to_char_immutable(med_amount_denominator_system), '#NULL#') || '|||' || -- hash from: amount/denominator/system (med_amount_denominator_system)
          COALESCE(db.to_char_immutable(med_amount_denominator_code), '#NULL#') || '|||' || -- hash from: amount/denominator/code (med_amount_denominator_code)
          COALESCE(db.to_char_immutable(med_ingredient_strength_numerator_value), '#NULL#') || '|||' || -- hash from: ingredient/strength/numerator/value (med_ingredient_strength_numerator_value)
          COALESCE(db.to_char_immutable(med_ingredient_strength_numerator_comparator), '#NULL#') || '|||' || -- hash from: ingredient/strength/numerator/comparator (med_ingredient_strength_numerator_comparator)
          COALESCE(db.to_char_immutable(med_ingredient_strength_numerator_unit), '#NULL#') || '|||' || -- hash from: ingredient/strength/numerator/unit (med_ingredient_strength_numerator_unit)
          COALESCE(db.to_char_immutable(med_ingredient_strength_numerator_system), '#NULL#') || '|||' || -- hash from: ingredient/strength/numerator/system (med_ingredient_strength_numerator_system)
          COALESCE(db.to_char_immutable(med_ingredient_strength_numerator_code), '#NULL#') || '|||' || -- hash from: ingredient/strength/numerator/code (med_ingredient_strength_numerator_code)
          COALESCE(db.to_char_immutable(med_ingredient_strength_denominator_value), '#NULL#') || '|||' || -- hash from: ingredient/strength/denominator/value (med_ingredient_strength_denominator_value)
          COALESCE(db.to_char_immutable(med_ingredient_strength_denominator_comparator), '#NULL#') || '|||' || -- hash from: ingredient/strength/denominator/comparator (med_ingredient_strength_denominator_comparator)
          COALESCE(db.to_char_immutable(med_ingredient_strength_denominator_unit), '#NULL#') || '|||' || -- hash from: ingredient/strength/denominator/unit (med_ingredient_strength_denominator_unit)
          COALESCE(db.to_char_immutable(med_ingredient_strength_denominator_system), '#NULL#') || '|||' || -- hash from: ingredient/strength/denominator/system (med_ingredient_strength_denominator_system)
          COALESCE(db.to_char_immutable(med_ingredient_strength_denominator_code), '#NULL#') || '|||' || -- hash from: ingredient/strength/denominator/code (med_ingredient_strength_denominator_code)
          COALESCE(db.to_char_immutable(med_ingredient_itemcodeableconcept_system), '#NULL#') || '|||' || -- hash from: ingredient/itemCodeableConcept/coding/system (med_ingredient_itemcodeableconcept_system)
          COALESCE(db.to_char_immutable(med_ingredient_itemcodeableconcept_version), '#NULL#') || '|||' || -- hash from: ingredient/itemCodeableConcept/coding/version (med_ingredient_itemcodeableconcept_version)
          COALESCE(db.to_char_immutable(med_ingredient_itemcodeableconcept_code), '#NULL#') || '|||' || -- hash from: ingredient/itemCodeableConcept/coding/code (med_ingredient_itemcodeableconcept_code)
          COALESCE(db.to_char_immutable(med_ingredient_itemcodeableconcept_display), '#NULL#') || '|||' || -- hash from: ingredient/itemCodeableConcept/coding/display (med_ingredient_itemcodeableconcept_display)
          COALESCE(db.to_char_immutable(med_ingredient_itemcodeableconcept_text), '#NULL#') || '|||' || -- hash from: ingredient/itemCodeableConcept/text (med_ingredient_itemcodeableconcept_text)
          COALESCE(db.to_char_immutable(med_ingredient_itemreference_ref), '#NULL#') || '|||' || -- hash from: ingredient/itemReference/reference (med_ingredient_itemreference_ref)
          COALESCE(db.to_char_immutable(med_ingredient_itemreference_type), '#NULL#') || '|||' || -- hash from: ingredient/itemReference/type (med_ingredient_itemreference_type)
          COALESCE(db.to_char_immutable(med_ingredient_itemreference_identifier_use), '#NULL#') || '|||' || -- hash from: ingredient/itemReference/identifier/use (med_ingredient_itemreference_identifier_use)
          COALESCE(db.to_char_immutable(med_ingredient_itemreference_identifier_type_system), '#NULL#') || '|||' || -- hash from: ingredient/itemReference/identifier/type/coding/system (med_ingredient_itemreference_identifier_type_system)
          COALESCE(db.to_char_immutable(med_ingredient_itemreference_identifier_type_version), '#NULL#') || '|||' || -- hash from: ingredient/itemReference/identifier/type/coding/version (med_ingredient_itemreference_identifier_type_version)
          COALESCE(db.to_char_immutable(med_ingredient_itemreference_identifier_type_code), '#NULL#') || '|||' || -- hash from: ingredient/itemReference/identifier/type/coding/code (med_ingredient_itemreference_identifier_type_code)
          COALESCE(db.to_char_immutable(med_ingredient_itemreference_identifier_type_display), '#NULL#') || '|||' || -- hash from: ingredient/itemReference/identifier/type/coding/display (med_ingredient_itemreference_identifier_type_display)
          COALESCE(db.to_char_immutable(med_ingredient_itemreference_identifier_type_text), '#NULL#') || '|||' || -- hash from: ingredient/itemReference/identifier/type/text (med_ingredient_itemreference_identifier_type_text)
          COALESCE(db.to_char_immutable(med_ingredient_itemreference_identifier_system), '#NULL#') || '|||' || -- hash from: ingredient/itemReference/identifier/system (med_ingredient_itemreference_identifier_system)
          COALESCE(db.to_char_immutable(med_ingredient_itemreference_identifier_value), '#NULL#') || '|||' || -- hash from: ingredient/itemReference/identifier/value (med_ingredient_itemreference_identifier_value)
          COALESCE(db.to_char_immutable(med_ingredient_itemreference_display), '#NULL#') || '|||' || -- hash from: ingredient/itemReference/display (med_ingredient_itemreference_display)
          COALESCE(db.to_char_immutable(med_ingredient_isactive), '#NULL#') || '|||' || -- hash from: ingredient/isActive (med_ingredient_isactive)
                 '#'
               )
            ) STORED; -- Column for hash value for comparing FHIR data - collion check in second step hash_index_col
            END IF; -- currend hash definition
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medication'
            AND column_name = 'hash_index_col'
        ) THEN
            -- Creating the hash column
            ALTER TABLE cds2db_in.medication ADD
            hash_index_col TEXT GENERATED ALWAYS AS (
            md5(
	         COALESCE(db.to_char_immutable(med_id), '#NULL#') || '|||' || -- hash from: id (med_id)
          COALESCE(db.to_char_immutable(med_identifier_use), '#NULL#') || '|||' || -- hash from: identifier/use (med_identifier_use)
          COALESCE(db.to_char_immutable(med_identifier_type_system), '#NULL#') || '|||' || -- hash from: identifier/type/coding/system (med_identifier_type_system)
          COALESCE(db.to_char_immutable(med_identifier_type_version), '#NULL#') || '|||' || -- hash from: identifier/type/coding/version (med_identifier_type_version)
          COALESCE(db.to_char_immutable(med_identifier_type_code), '#NULL#') || '|||' || -- hash from: identifier/type/coding/code (med_identifier_type_code)
          COALESCE(db.to_char_immutable(med_identifier_type_display), '#NULL#') || '|||' || -- hash from: identifier/type/coding/display (med_identifier_type_display)
          COALESCE(db.to_char_immutable(med_identifier_type_text), '#NULL#') || '|||' || -- hash from: identifier/type/text (med_identifier_type_text)
          COALESCE(db.to_char_immutable(med_identifier_system), '#NULL#') || '|||' || -- hash from: identifier/system (med_identifier_system)
          COALESCE(db.to_char_immutable(med_identifier_value), '#NULL#') || '|||' || -- hash from: identifier/value (med_identifier_value)
          COALESCE(db.to_char_immutable(med_identifier_start), '#NULL#') || '|||' || -- hash from: identifier/start (med_identifier_start)
          COALESCE(db.to_char_immutable(med_identifier_end), '#NULL#') || '|||' || -- hash from: identifier/end (med_identifier_end)
          COALESCE(db.to_char_immutable(med_code_system), '#NULL#') || '|||' || -- hash from: code/coding/system (med_code_system)
          COALESCE(db.to_char_immutable(med_code_version), '#NULL#') || '|||' || -- hash from: code/coding/version (med_code_version)
          COALESCE(db.to_char_immutable(med_code_code), '#NULL#') || '|||' || -- hash from: code/coding/code (med_code_code)
          COALESCE(db.to_char_immutable(med_code_display), '#NULL#') || '|||' || -- hash from: code/coding/display (med_code_display)
          COALESCE(db.to_char_immutable(med_code_text), '#NULL#') || '|||' || -- hash from: code/text (med_code_text)
          COALESCE(db.to_char_immutable(med_status), '#NULL#') || '|||' || -- hash from: status (med_status)
          COALESCE(db.to_char_immutable(med_form_system), '#NULL#') || '|||' || -- hash from: form/coding/system (med_form_system)
          COALESCE(db.to_char_immutable(med_form_version), '#NULL#') || '|||' || -- hash from: form/coding/version (med_form_version)
          COALESCE(db.to_char_immutable(med_form_code), '#NULL#') || '|||' || -- hash from: form/coding/code (med_form_code)
          COALESCE(db.to_char_immutable(med_form_display), '#NULL#') || '|||' || -- hash from: form/coding/display (med_form_display)
          COALESCE(db.to_char_immutable(med_form_text), '#NULL#') || '|||' || -- hash from: form/text (med_form_text)
          COALESCE(db.to_char_immutable(med_amount_numerator_value), '#NULL#') || '|||' || -- hash from: amount/numerator/value (med_amount_numerator_value)
          COALESCE(db.to_char_immutable(med_amount_numerator_comparator), '#NULL#') || '|||' || -- hash from: amount/numerator/comparator (med_amount_numerator_comparator)
          COALESCE(db.to_char_immutable(med_amount_numerator_unit), '#NULL#') || '|||' || -- hash from: amount/numerator/unit (med_amount_numerator_unit)
          COALESCE(db.to_char_immutable(med_amount_numerator_system), '#NULL#') || '|||' || -- hash from: amount/numerator/system (med_amount_numerator_system)
          COALESCE(db.to_char_immutable(med_amount_numerator_code), '#NULL#') || '|||' || -- hash from: amount/numerator/code (med_amount_numerator_code)
          COALESCE(db.to_char_immutable(med_amount_denominator_value), '#NULL#') || '|||' || -- hash from: amount/denominator/value (med_amount_denominator_value)
          COALESCE(db.to_char_immutable(med_amount_denominator_comparator), '#NULL#') || '|||' || -- hash from: amount/denominator/comparator (med_amount_denominator_comparator)
          COALESCE(db.to_char_immutable(med_amount_denominator_unit), '#NULL#') || '|||' || -- hash from: amount/denominator/unit (med_amount_denominator_unit)
          COALESCE(db.to_char_immutable(med_amount_denominator_system), '#NULL#') || '|||' || -- hash from: amount/denominator/system (med_amount_denominator_system)
          COALESCE(db.to_char_immutable(med_amount_denominator_code), '#NULL#') || '|||' || -- hash from: amount/denominator/code (med_amount_denominator_code)
          COALESCE(db.to_char_immutable(med_ingredient_strength_numerator_value), '#NULL#') || '|||' || -- hash from: ingredient/strength/numerator/value (med_ingredient_strength_numerator_value)
          COALESCE(db.to_char_immutable(med_ingredient_strength_numerator_comparator), '#NULL#') || '|||' || -- hash from: ingredient/strength/numerator/comparator (med_ingredient_strength_numerator_comparator)
          COALESCE(db.to_char_immutable(med_ingredient_strength_numerator_unit), '#NULL#') || '|||' || -- hash from: ingredient/strength/numerator/unit (med_ingredient_strength_numerator_unit)
          COALESCE(db.to_char_immutable(med_ingredient_strength_numerator_system), '#NULL#') || '|||' || -- hash from: ingredient/strength/numerator/system (med_ingredient_strength_numerator_system)
          COALESCE(db.to_char_immutable(med_ingredient_strength_numerator_code), '#NULL#') || '|||' || -- hash from: ingredient/strength/numerator/code (med_ingredient_strength_numerator_code)
          COALESCE(db.to_char_immutable(med_ingredient_strength_denominator_value), '#NULL#') || '|||' || -- hash from: ingredient/strength/denominator/value (med_ingredient_strength_denominator_value)
          COALESCE(db.to_char_immutable(med_ingredient_strength_denominator_comparator), '#NULL#') || '|||' || -- hash from: ingredient/strength/denominator/comparator (med_ingredient_strength_denominator_comparator)
          COALESCE(db.to_char_immutable(med_ingredient_strength_denominator_unit), '#NULL#') || '|||' || -- hash from: ingredient/strength/denominator/unit (med_ingredient_strength_denominator_unit)
          COALESCE(db.to_char_immutable(med_ingredient_strength_denominator_system), '#NULL#') || '|||' || -- hash from: ingredient/strength/denominator/system (med_ingredient_strength_denominator_system)
          COALESCE(db.to_char_immutable(med_ingredient_strength_denominator_code), '#NULL#') || '|||' || -- hash from: ingredient/strength/denominator/code (med_ingredient_strength_denominator_code)
          COALESCE(db.to_char_immutable(med_ingredient_itemcodeableconcept_system), '#NULL#') || '|||' || -- hash from: ingredient/itemCodeableConcept/coding/system (med_ingredient_itemcodeableconcept_system)
          COALESCE(db.to_char_immutable(med_ingredient_itemcodeableconcept_version), '#NULL#') || '|||' || -- hash from: ingredient/itemCodeableConcept/coding/version (med_ingredient_itemcodeableconcept_version)
          COALESCE(db.to_char_immutable(med_ingredient_itemcodeableconcept_code), '#NULL#') || '|||' || -- hash from: ingredient/itemCodeableConcept/coding/code (med_ingredient_itemcodeableconcept_code)
          COALESCE(db.to_char_immutable(med_ingredient_itemcodeableconcept_display), '#NULL#') || '|||' || -- hash from: ingredient/itemCodeableConcept/coding/display (med_ingredient_itemcodeableconcept_display)
          COALESCE(db.to_char_immutable(med_ingredient_itemcodeableconcept_text), '#NULL#') || '|||' || -- hash from: ingredient/itemCodeableConcept/text (med_ingredient_itemcodeableconcept_text)
          COALESCE(db.to_char_immutable(med_ingredient_itemreference_ref), '#NULL#') || '|||' || -- hash from: ingredient/itemReference/reference (med_ingredient_itemreference_ref)
          COALESCE(db.to_char_immutable(med_ingredient_itemreference_type), '#NULL#') || '|||' || -- hash from: ingredient/itemReference/type (med_ingredient_itemreference_type)
          COALESCE(db.to_char_immutable(med_ingredient_itemreference_identifier_use), '#NULL#') || '|||' || -- hash from: ingredient/itemReference/identifier/use (med_ingredient_itemreference_identifier_use)
          COALESCE(db.to_char_immutable(med_ingredient_itemreference_identifier_type_system), '#NULL#') || '|||' || -- hash from: ingredient/itemReference/identifier/type/coding/system (med_ingredient_itemreference_identifier_type_system)
          COALESCE(db.to_char_immutable(med_ingredient_itemreference_identifier_type_version), '#NULL#') || '|||' || -- hash from: ingredient/itemReference/identifier/type/coding/version (med_ingredient_itemreference_identifier_type_version)
          COALESCE(db.to_char_immutable(med_ingredient_itemreference_identifier_type_code), '#NULL#') || '|||' || -- hash from: ingredient/itemReference/identifier/type/coding/code (med_ingredient_itemreference_identifier_type_code)
          COALESCE(db.to_char_immutable(med_ingredient_itemreference_identifier_type_display), '#NULL#') || '|||' || -- hash from: ingredient/itemReference/identifier/type/coding/display (med_ingredient_itemreference_identifier_type_display)
          COALESCE(db.to_char_immutable(med_ingredient_itemreference_identifier_type_text), '#NULL#') || '|||' || -- hash from: ingredient/itemReference/identifier/type/text (med_ingredient_itemreference_identifier_type_text)
          COALESCE(db.to_char_immutable(med_ingredient_itemreference_identifier_system), '#NULL#') || '|||' || -- hash from: ingredient/itemReference/identifier/system (med_ingredient_itemreference_identifier_system)
          COALESCE(db.to_char_immutable(med_ingredient_itemreference_identifier_value), '#NULL#') || '|||' || -- hash from: ingredient/itemReference/identifier/value (med_ingredient_itemreference_identifier_value)
          COALESCE(db.to_char_immutable(med_ingredient_itemreference_display), '#NULL#') || '|||' || -- hash from: ingredient/itemReference/display (med_ingredient_itemreference_display)
          COALESCE(db.to_char_immutable(med_ingredient_isactive), '#NULL#') || '|||' || -- hash from: ingredient/isActive (med_ingredient_isactive)
                 '#'
               )
            ) STORED; -- Column for hash value for comparing FHIR data - collion check in second step hash_index_col
        END IF; -- column
    END IF; -- Table
END
$$;
-- Table "medicationrequest" in schema "cds2db_in"
-------------------------------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS cds2db_in.medicationrequest (
  medicationrequest_id int PRIMARY KEY DEFAULT nextval('db.db_seq') -- Primary key of the entity
);

DO
$$
DECLARE
    IF EXISTS ( -- Table exists
        SELECT 1 FROM information_schema.columns 
        WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
    ) THEN
        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'input_datetime'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medicationrequest_raw_id int NOT NULL; -- Primary key of the corresponding raw table
            NULL;
        END IF; -- column

-- Organizational items - fixed for each database table -----------------------------------------
        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'input_datetime'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD input_datetime TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP; -- Time at which data record was created
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'last_check_datetime'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD last_check_datetime TIMESTAMP DEFAULT NULL; -- Time at which data record was last checked
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'current_dataset_status'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD current_dataset_status VARCHAR DEFAULT 'input'; -- Processing status of the data record
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'input_processing_nr'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD input_processing_nr INT; -- (First) Processing number of the data record
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'last_processing_nr'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD last_processing_nr INT; -- Last processing number of the data record
        END IF; -- column

-- Data-leading columns -------------------------------------------------------------------------
        IF NOT EXISTS ( -- column not exists (medreq_id)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_id'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_id varchar;   -- id (varchar)
        END IF; -- column (medreq_id)
        IF NOT EXISTS ( -- column not exists (medreq_meta_versionid)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_meta_versionid'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_meta_versionid varchar;   -- meta/versionId (varchar)
        END IF; -- column (medreq_meta_versionid)
        IF NOT EXISTS ( -- column not exists (medreq_meta_lastupdated)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_meta_lastupdated'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_meta_lastupdated timestamp;   -- meta/lastUpdated (timestamp)
        END IF; -- column (medreq_meta_lastupdated)
        IF NOT EXISTS ( -- column not exists (medreq_meta_profile)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_meta_profile'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_meta_profile varchar;   -- meta/profile (varchar)
        END IF; -- column (medreq_meta_profile)
        IF NOT EXISTS ( -- column not exists (medreq_identifier_use)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_identifier_use'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_identifier_use varchar;   -- identifier/use (varchar)
        END IF; -- column (medreq_identifier_use)
        IF NOT EXISTS ( -- column not exists (medreq_identifier_type_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_identifier_type_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_identifier_type_system varchar;   -- identifier/type/coding/system (varchar)
        END IF; -- column (medreq_identifier_type_system)
        IF NOT EXISTS ( -- column not exists (medreq_identifier_type_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_identifier_type_version'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_identifier_type_version varchar;   -- identifier/type/coding/version (varchar)
        END IF; -- column (medreq_identifier_type_version)
        IF NOT EXISTS ( -- column not exists (medreq_identifier_type_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_identifier_type_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_identifier_type_code varchar;   -- identifier/type/coding/code (varchar)
        END IF; -- column (medreq_identifier_type_code)
        IF NOT EXISTS ( -- column not exists (medreq_identifier_type_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_identifier_type_display'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_identifier_type_display varchar;   -- identifier/type/coding/display (varchar)
        END IF; -- column (medreq_identifier_type_display)
        IF NOT EXISTS ( -- column not exists (medreq_identifier_type_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_identifier_type_text'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_identifier_type_text varchar;   -- identifier/type/text (varchar)
        END IF; -- column (medreq_identifier_type_text)
        IF NOT EXISTS ( -- column not exists (medreq_identifier_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_identifier_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_identifier_system varchar;   -- identifier/system (varchar)
        END IF; -- column (medreq_identifier_system)
        IF NOT EXISTS ( -- column not exists (medreq_identifier_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_identifier_value'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_identifier_value varchar;   -- identifier/value (varchar)
        END IF; -- column (medreq_identifier_value)
        IF NOT EXISTS ( -- column not exists (medreq_identifier_start)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_identifier_start'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_identifier_start timestamp;   -- identifier/start (timestamp)
        END IF; -- column (medreq_identifier_start)
        IF NOT EXISTS ( -- column not exists (medreq_identifier_end)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_identifier_end'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_identifier_end timestamp;   -- identifier/end (timestamp)
        END IF; -- column (medreq_identifier_end)
        IF NOT EXISTS ( -- column not exists (medreq_encounter_ref)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_encounter_ref'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_encounter_ref varchar;   -- encounter/reference (varchar)
        END IF; -- column (medreq_encounter_ref)
        IF NOT EXISTS ( -- column not exists (medreq_patient_ref)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_patient_ref'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_patient_ref varchar;   -- subject/reference (varchar)
        END IF; -- column (medreq_patient_ref)
        IF NOT EXISTS ( -- column not exists (medreq_medicationreference_ref)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_medicationreference_ref'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_medicationreference_ref varchar;   -- medicationReference/reference (varchar)
        END IF; -- column (medreq_medicationreference_ref)
        IF NOT EXISTS ( -- column not exists (medreq_status)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_status'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_status varchar;   -- status (varchar)
        END IF; -- column (medreq_status)
        IF NOT EXISTS ( -- column not exists (medreq_statusreason_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_statusreason_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_statusreason_system varchar;   -- statusReason/coding/system (varchar)
        END IF; -- column (medreq_statusreason_system)
        IF NOT EXISTS ( -- column not exists (medreq_statusreason_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_statusreason_version'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_statusreason_version varchar;   -- statusReason/coding/version (varchar)
        END IF; -- column (medreq_statusreason_version)
        IF NOT EXISTS ( -- column not exists (medreq_statusreason_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_statusreason_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_statusreason_code varchar;   -- statusReason/coding/code (varchar)
        END IF; -- column (medreq_statusreason_code)
        IF NOT EXISTS ( -- column not exists (medreq_statusreason_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_statusreason_display'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_statusreason_display varchar;   -- statusReason/coding/display (varchar)
        END IF; -- column (medreq_statusreason_display)
        IF NOT EXISTS ( -- column not exists (medreq_statusreason_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_statusreason_text'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_statusreason_text varchar;   -- statusReason/text (varchar)
        END IF; -- column (medreq_statusreason_text)
        IF NOT EXISTS ( -- column not exists (medreq_intend)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_intend'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_intend varchar;   -- intend (varchar)
        END IF; -- column (medreq_intend)
        IF NOT EXISTS ( -- column not exists (medreq_intent)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_intent'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_intent varchar;   -- intent (varchar)
        END IF; -- column (medreq_intent)
        IF NOT EXISTS ( -- column not exists (medreq_category_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_category_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_category_system varchar;   -- category/coding/system (varchar)
        END IF; -- column (medreq_category_system)
        IF NOT EXISTS ( -- column not exists (medreq_category_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_category_version'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_category_version varchar;   -- category/coding/version (varchar)
        END IF; -- column (medreq_category_version)
        IF NOT EXISTS ( -- column not exists (medreq_category_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_category_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_category_code varchar;   -- category/coding/code (varchar)
        END IF; -- column (medreq_category_code)
        IF NOT EXISTS ( -- column not exists (medreq_category_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_category_display'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_category_display varchar;   -- category/coding/display (varchar)
        END IF; -- column (medreq_category_display)
        IF NOT EXISTS ( -- column not exists (medreq_category_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_category_text'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_category_text varchar;   -- category/text (varchar)
        END IF; -- column (medreq_category_text)
        IF NOT EXISTS ( -- column not exists (medreq_priority)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_priority'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_priority varchar;   -- priority (varchar)
        END IF; -- column (medreq_priority)
        IF NOT EXISTS ( -- column not exists (medreq_reportedboolean)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_reportedboolean'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_reportedboolean boolean;   -- reportedBoolean (boolean)
        END IF; -- column (medreq_reportedboolean)
        IF NOT EXISTS ( -- column not exists (medreq_reportedreference_ref)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_reportedreference_ref'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_reportedreference_ref varchar;   -- reportedReference/reference (varchar)
        END IF; -- column (medreq_reportedreference_ref)
        IF NOT EXISTS ( -- column not exists (medreq_reportedreference_type)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_reportedreference_type'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_reportedreference_type varchar;   -- reportedReference/type (varchar)
        END IF; -- column (medreq_reportedreference_type)
        IF NOT EXISTS ( -- column not exists (medreq_reportedreference_identifier_use)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_reportedreference_identifier_use'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_reportedreference_identifier_use varchar;   -- reportedReference/identifier/use (varchar)
        END IF; -- column (medreq_reportedreference_identifier_use)
        IF NOT EXISTS ( -- column not exists (medreq_reportedreference_identifier_type_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_reportedreference_identifier_type_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_reportedreference_identifier_type_system varchar;   -- reportedReference/identifier/type/coding/system (varchar)
        END IF; -- column (medreq_reportedreference_identifier_type_system)
        IF NOT EXISTS ( -- column not exists (medreq_reportedreference_identifier_type_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_reportedreference_identifier_type_version'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_reportedreference_identifier_type_version varchar;   -- reportedReference/identifier/type/coding/version (varchar)
        END IF; -- column (medreq_reportedreference_identifier_type_version)
        IF NOT EXISTS ( -- column not exists (medreq_reportedreference_identifier_type_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_reportedreference_identifier_type_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_reportedreference_identifier_type_code varchar;   -- reportedReference/identifier/type/coding/code (varchar)
        END IF; -- column (medreq_reportedreference_identifier_type_code)
        IF NOT EXISTS ( -- column not exists (medreq_reportedreference_identifier_type_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_reportedreference_identifier_type_display'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_reportedreference_identifier_type_display varchar;   -- reportedReference/identifier/type/coding/display (varchar)
        END IF; -- column (medreq_reportedreference_identifier_type_display)
        IF NOT EXISTS ( -- column not exists (medreq_reportedreference_identifier_type_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_reportedreference_identifier_type_text'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_reportedreference_identifier_type_text varchar;   -- reportedReference/identifier/type/text (varchar)
        END IF; -- column (medreq_reportedreference_identifier_type_text)
        IF NOT EXISTS ( -- column not exists (medreq_reportedreference_identifier_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_reportedreference_identifier_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_reportedreference_identifier_system varchar;   -- reportedReference/identifier/system (varchar)
        END IF; -- column (medreq_reportedreference_identifier_system)
        IF NOT EXISTS ( -- column not exists (medreq_reportedreference_identifier_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_reportedreference_identifier_value'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_reportedreference_identifier_value varchar;   -- reportedReference/identifier/value (varchar)
        END IF; -- column (medreq_reportedreference_identifier_value)
        IF NOT EXISTS ( -- column not exists (medreq_reportedreference_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_reportedreference_display'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_reportedreference_display varchar;   -- reportedReference/display (varchar)
        END IF; -- column (medreq_reportedreference_display)
        IF NOT EXISTS ( -- column not exists (medreq_medicationcodeableconcept_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_medicationcodeableconcept_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_medicationcodeableconcept_system varchar;   -- medicationCodeableConcept/coding/system (varchar)
        END IF; -- column (medreq_medicationcodeableconcept_system)
        IF NOT EXISTS ( -- column not exists (medreq_medicationcodeableconcept_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_medicationcodeableconcept_version'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_medicationcodeableconcept_version varchar;   -- medicationCodeableConcept/coding/version (varchar)
        END IF; -- column (medreq_medicationcodeableconcept_version)
        IF NOT EXISTS ( -- column not exists (medreq_medicationcodeableconcept_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_medicationcodeableconcept_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_medicationcodeableconcept_code varchar;   -- medicationCodeableConcept/coding/code (varchar)
        END IF; -- column (medreq_medicationcodeableconcept_code)
        IF NOT EXISTS ( -- column not exists (medreq_medicationcodeableconcept_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_medicationcodeableconcept_display'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_medicationcodeableconcept_display varchar;   -- medicationCodeableConcept/coding/display (varchar)
        END IF; -- column (medreq_medicationcodeableconcept_display)
        IF NOT EXISTS ( -- column not exists (medreq_medicationcodeableconcept_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_medicationcodeableconcept_text'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_medicationcodeableconcept_text varchar;   -- medicationCodeableConcept/text (varchar)
        END IF; -- column (medreq_medicationcodeableconcept_text)
        IF NOT EXISTS ( -- column not exists (medreq_supportinginformation_ref)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_supportinginformation_ref'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_supportinginformation_ref varchar;   -- supportingInformation/reference (varchar)
        END IF; -- column (medreq_supportinginformation_ref)
        IF NOT EXISTS ( -- column not exists (medreq_supportinginformation_type)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_supportinginformation_type'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_supportinginformation_type varchar;   -- supportingInformation/type (varchar)
        END IF; -- column (medreq_supportinginformation_type)
        IF NOT EXISTS ( -- column not exists (medreq_supportinginformation_identifier_use)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_supportinginformation_identifier_use'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_supportinginformation_identifier_use varchar;   -- supportingInformation/identifier/use (varchar)
        END IF; -- column (medreq_supportinginformation_identifier_use)
        IF NOT EXISTS ( -- column not exists (medreq_supportinginformation_identifier_type_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_supportinginformation_identifier_type_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_supportinginformation_identifier_type_system varchar;   -- supportingInformation/identifier/type/coding/system (varchar)
        END IF; -- column (medreq_supportinginformation_identifier_type_system)
        IF NOT EXISTS ( -- column not exists (medreq_supportinginformation_identifier_type_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_supportinginformation_identifier_type_version'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_supportinginformation_identifier_type_version varchar;   -- supportingInformation/identifier/type/coding/version (varchar)
        END IF; -- column (medreq_supportinginformation_identifier_type_version)
        IF NOT EXISTS ( -- column not exists (medreq_supportinginformation_identifier_type_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_supportinginformation_identifier_type_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_supportinginformation_identifier_type_code varchar;   -- supportingInformation/identifier/type/coding/code (varchar)
        END IF; -- column (medreq_supportinginformation_identifier_type_code)
        IF NOT EXISTS ( -- column not exists (medreq_supportinginformation_identifier_type_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_supportinginformation_identifier_type_display'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_supportinginformation_identifier_type_display varchar;   -- supportingInformation/identifier/type/coding/display (varchar)
        END IF; -- column (medreq_supportinginformation_identifier_type_display)
        IF NOT EXISTS ( -- column not exists (medreq_supportinginformation_identifier_type_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_supportinginformation_identifier_type_text'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_supportinginformation_identifier_type_text varchar;   -- supportingInformation/identifier/type/text (varchar)
        END IF; -- column (medreq_supportinginformation_identifier_type_text)
        IF NOT EXISTS ( -- column not exists (medreq_supportinginformation_identifier_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_supportinginformation_identifier_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_supportinginformation_identifier_system varchar;   -- supportingInformation/identifier/system (varchar)
        END IF; -- column (medreq_supportinginformation_identifier_system)
        IF NOT EXISTS ( -- column not exists (medreq_supportinginformation_identifier_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_supportinginformation_identifier_value'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_supportinginformation_identifier_value varchar;   -- supportingInformation/identifier/value (varchar)
        END IF; -- column (medreq_supportinginformation_identifier_value)
        IF NOT EXISTS ( -- column not exists (medreq_supportinginformation_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_supportinginformation_display'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_supportinginformation_display varchar;   -- supportingInformation/display (varchar)
        END IF; -- column (medreq_supportinginformation_display)
        IF NOT EXISTS ( -- column not exists (medreq_authoredon)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_authoredon'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_authoredon timestamp;   -- authoredOn (timestamp)
        END IF; -- column (medreq_authoredon)
        IF NOT EXISTS ( -- column not exists (medreq_requester_ref)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_requester_ref'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_requester_ref varchar;   -- requester/reference (varchar)
        END IF; -- column (medreq_requester_ref)
        IF NOT EXISTS ( -- column not exists (medreq_requester_type)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_requester_type'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_requester_type varchar;   -- requester/type (varchar)
        END IF; -- column (medreq_requester_type)
        IF NOT EXISTS ( -- column not exists (medreq_requester_identifier_use)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_requester_identifier_use'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_requester_identifier_use varchar;   -- requester/identifier/use (varchar)
        END IF; -- column (medreq_requester_identifier_use)
        IF NOT EXISTS ( -- column not exists (medreq_requester_identifier_type_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_requester_identifier_type_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_requester_identifier_type_system varchar;   -- requester/identifier/type/coding/system (varchar)
        END IF; -- column (medreq_requester_identifier_type_system)
        IF NOT EXISTS ( -- column not exists (medreq_requester_identifier_type_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_requester_identifier_type_version'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_requester_identifier_type_version varchar;   -- requester/identifier/type/coding/version (varchar)
        END IF; -- column (medreq_requester_identifier_type_version)
        IF NOT EXISTS ( -- column not exists (medreq_requester_identifier_type_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_requester_identifier_type_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_requester_identifier_type_code varchar;   -- requester/identifier/type/coding/code (varchar)
        END IF; -- column (medreq_requester_identifier_type_code)
        IF NOT EXISTS ( -- column not exists (medreq_requester_identifier_type_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_requester_identifier_type_display'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_requester_identifier_type_display varchar;   -- requester/identifier/type/coding/display (varchar)
        END IF; -- column (medreq_requester_identifier_type_display)
        IF NOT EXISTS ( -- column not exists (medreq_requester_identifier_type_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_requester_identifier_type_text'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_requester_identifier_type_text varchar;   -- requester/identifier/type/text (varchar)
        END IF; -- column (medreq_requester_identifier_type_text)
        IF NOT EXISTS ( -- column not exists (medreq_requester_identifier_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_requester_identifier_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_requester_identifier_system varchar;   -- requester/identifier/system (varchar)
        END IF; -- column (medreq_requester_identifier_system)
        IF NOT EXISTS ( -- column not exists (medreq_requester_identifier_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_requester_identifier_value'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_requester_identifier_value varchar;   -- requester/identifier/value (varchar)
        END IF; -- column (medreq_requester_identifier_value)
        IF NOT EXISTS ( -- column not exists (medreq_requester_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_requester_display'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_requester_display varchar;   -- requester/display (varchar)
        END IF; -- column (medreq_requester_display)
        IF NOT EXISTS ( -- column not exists (medreq_reasoncode_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_reasoncode_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_reasoncode_system varchar;   -- reasonCode/coding/system (varchar)
        END IF; -- column (medreq_reasoncode_system)
        IF NOT EXISTS ( -- column not exists (medreq_reasoncode_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_reasoncode_version'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_reasoncode_version varchar;   -- reasonCode/coding/version (varchar)
        END IF; -- column (medreq_reasoncode_version)
        IF NOT EXISTS ( -- column not exists (medreq_reasoncode_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_reasoncode_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_reasoncode_code varchar;   -- reasonCode/coding/code (varchar)
        END IF; -- column (medreq_reasoncode_code)
        IF NOT EXISTS ( -- column not exists (medreq_reasoncode_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_reasoncode_display'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_reasoncode_display varchar;   -- reasonCode/coding/display (varchar)
        END IF; -- column (medreq_reasoncode_display)
        IF NOT EXISTS ( -- column not exists (medreq_reasoncode_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_reasoncode_text'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_reasoncode_text varchar;   -- reasonCode/text (varchar)
        END IF; -- column (medreq_reasoncode_text)
        IF NOT EXISTS ( -- column not exists (medreq_reasonreference_ref)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_reasonreference_ref'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_reasonreference_ref varchar;   -- reasonReference/reference (varchar)
        END IF; -- column (medreq_reasonreference_ref)
        IF NOT EXISTS ( -- column not exists (medreq_reasonreference_type)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_reasonreference_type'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_reasonreference_type varchar;   -- reasonReference/type (varchar)
        END IF; -- column (medreq_reasonreference_type)
        IF NOT EXISTS ( -- column not exists (medreq_reasonreference_identifier_use)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_reasonreference_identifier_use'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_reasonreference_identifier_use varchar;   -- reasonReference/identifier/use (varchar)
        END IF; -- column (medreq_reasonreference_identifier_use)
        IF NOT EXISTS ( -- column not exists (medreq_reasonreference_identifier_type_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_reasonreference_identifier_type_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_reasonreference_identifier_type_system varchar;   -- reasonReference/identifier/type/coding/system (varchar)
        END IF; -- column (medreq_reasonreference_identifier_type_system)
        IF NOT EXISTS ( -- column not exists (medreq_reasonreference_identifier_type_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_reasonreference_identifier_type_version'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_reasonreference_identifier_type_version varchar;   -- reasonReference/identifier/type/coding/version (varchar)
        END IF; -- column (medreq_reasonreference_identifier_type_version)
        IF NOT EXISTS ( -- column not exists (medreq_reasonreference_identifier_type_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_reasonreference_identifier_type_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_reasonreference_identifier_type_code varchar;   -- reasonReference/identifier/type/coding/code (varchar)
        END IF; -- column (medreq_reasonreference_identifier_type_code)
        IF NOT EXISTS ( -- column not exists (medreq_reasonreference_identifier_type_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_reasonreference_identifier_type_display'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_reasonreference_identifier_type_display varchar;   -- reasonReference/identifier/type/coding/display (varchar)
        END IF; -- column (medreq_reasonreference_identifier_type_display)
        IF NOT EXISTS ( -- column not exists (medreq_reasonreference_identifier_type_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_reasonreference_identifier_type_text'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_reasonreference_identifier_type_text varchar;   -- reasonReference/identifier/type/text (varchar)
        END IF; -- column (medreq_reasonreference_identifier_type_text)
        IF NOT EXISTS ( -- column not exists (medreq_reasonreference_identifier_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_reasonreference_identifier_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_reasonreference_identifier_system varchar;   -- reasonReference/identifier/system (varchar)
        END IF; -- column (medreq_reasonreference_identifier_system)
        IF NOT EXISTS ( -- column not exists (medreq_reasonreference_identifier_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_reasonreference_identifier_value'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_reasonreference_identifier_value varchar;   -- reasonReference/identifier/value (varchar)
        END IF; -- column (medreq_reasonreference_identifier_value)
        IF NOT EXISTS ( -- column not exists (medreq_reasonreference_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_reasonreference_display'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_reasonreference_display varchar;   -- reasonReference/display (varchar)
        END IF; -- column (medreq_reasonreference_display)
        IF NOT EXISTS ( -- column not exists (medreq_basedon_ref)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_basedon_ref'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_basedon_ref varchar;   -- basedOn/reference (varchar)
        END IF; -- column (medreq_basedon_ref)
        IF NOT EXISTS ( -- column not exists (medreq_basedon_type)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_basedon_type'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_basedon_type varchar;   -- basedOn/type (varchar)
        END IF; -- column (medreq_basedon_type)
        IF NOT EXISTS ( -- column not exists (medreq_basedon_identifier_use)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_basedon_identifier_use'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_basedon_identifier_use varchar;   -- basedOn/identifier/use (varchar)
        END IF; -- column (medreq_basedon_identifier_use)
        IF NOT EXISTS ( -- column not exists (medreq_basedon_identifier_type_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_basedon_identifier_type_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_basedon_identifier_type_system varchar;   -- basedOn/identifier/type/coding/system (varchar)
        END IF; -- column (medreq_basedon_identifier_type_system)
        IF NOT EXISTS ( -- column not exists (medreq_basedon_identifier_type_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_basedon_identifier_type_version'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_basedon_identifier_type_version varchar;   -- basedOn/identifier/type/coding/version (varchar)
        END IF; -- column (medreq_basedon_identifier_type_version)
        IF NOT EXISTS ( -- column not exists (medreq_basedon_identifier_type_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_basedon_identifier_type_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_basedon_identifier_type_code varchar;   -- basedOn/identifier/type/coding/code (varchar)
        END IF; -- column (medreq_basedon_identifier_type_code)
        IF NOT EXISTS ( -- column not exists (medreq_basedon_identifier_type_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_basedon_identifier_type_display'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_basedon_identifier_type_display varchar;   -- basedOn/identifier/type/coding/display (varchar)
        END IF; -- column (medreq_basedon_identifier_type_display)
        IF NOT EXISTS ( -- column not exists (medreq_basedon_identifier_type_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_basedon_identifier_type_text'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_basedon_identifier_type_text varchar;   -- basedOn/identifier/type/text (varchar)
        END IF; -- column (medreq_basedon_identifier_type_text)
        IF NOT EXISTS ( -- column not exists (medreq_basedon_identifier_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_basedon_identifier_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_basedon_identifier_system varchar;   -- basedOn/identifier/system (varchar)
        END IF; -- column (medreq_basedon_identifier_system)
        IF NOT EXISTS ( -- column not exists (medreq_basedon_identifier_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_basedon_identifier_value'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_basedon_identifier_value varchar;   -- basedOn/identifier/value (varchar)
        END IF; -- column (medreq_basedon_identifier_value)
        IF NOT EXISTS ( -- column not exists (medreq_basedon_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_basedon_display'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_basedon_display varchar;   -- basedOn/display (varchar)
        END IF; -- column (medreq_basedon_display)
        IF NOT EXISTS ( -- column not exists (medreq_note_authorstring)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_note_authorstring'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_note_authorstring varchar;   -- note/authorString (varchar)
        END IF; -- column (medreq_note_authorstring)
        IF NOT EXISTS ( -- column not exists (medreq_note_authorreference_ref)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_note_authorreference_ref'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_note_authorreference_ref varchar;   -- note/authorReference/reference (varchar)
        END IF; -- column (medreq_note_authorreference_ref)
        IF NOT EXISTS ( -- column not exists (medreq_note_authorreference_type)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_note_authorreference_type'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_note_authorreference_type varchar;   -- note/authorReference/type (varchar)
        END IF; -- column (medreq_note_authorreference_type)
        IF NOT EXISTS ( -- column not exists (medreq_note_authorreference_identifier_use)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_note_authorreference_identifier_use'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_note_authorreference_identifier_use varchar;   -- note/authorReference/identifier/use (varchar)
        END IF; -- column (medreq_note_authorreference_identifier_use)
        IF NOT EXISTS ( -- column not exists (medreq_note_authorreference_identifier_type_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_note_authorreference_identifier_type_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_note_authorreference_identifier_type_system varchar;   -- note/authorReference/identifier/type/coding/system (varchar)
        END IF; -- column (medreq_note_authorreference_identifier_type_system)
        IF NOT EXISTS ( -- column not exists (medreq_note_authorreference_identifier_type_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_note_authorreference_identifier_type_version'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_note_authorreference_identifier_type_version varchar;   -- note/authorReference/identifier/type/coding/version (varchar)
        END IF; -- column (medreq_note_authorreference_identifier_type_version)
        IF NOT EXISTS ( -- column not exists (medreq_note_authorreference_identifier_type_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_note_authorreference_identifier_type_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_note_authorreference_identifier_type_code varchar;   -- note/authorReference/identifier/type/coding/code (varchar)
        END IF; -- column (medreq_note_authorreference_identifier_type_code)
        IF NOT EXISTS ( -- column not exists (medreq_note_authorreference_identifier_type_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_note_authorreference_identifier_type_display'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_note_authorreference_identifier_type_display varchar;   -- note/authorReference/identifier/type/coding/display (varchar)
        END IF; -- column (medreq_note_authorreference_identifier_type_display)
        IF NOT EXISTS ( -- column not exists (medreq_note_authorreference_identifier_type_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_note_authorreference_identifier_type_text'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_note_authorreference_identifier_type_text varchar;   -- note/authorReference/identifier/type/text (varchar)
        END IF; -- column (medreq_note_authorreference_identifier_type_text)
        IF NOT EXISTS ( -- column not exists (medreq_note_authorreference_identifier_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_note_authorreference_identifier_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_note_authorreference_identifier_system varchar;   -- note/authorReference/identifier/system (varchar)
        END IF; -- column (medreq_note_authorreference_identifier_system)
        IF NOT EXISTS ( -- column not exists (medreq_note_authorreference_identifier_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_note_authorreference_identifier_value'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_note_authorreference_identifier_value varchar;   -- note/authorReference/identifier/value (varchar)
        END IF; -- column (medreq_note_authorreference_identifier_value)
        IF NOT EXISTS ( -- column not exists (medreq_note_authorreference_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_note_authorreference_display'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_note_authorreference_display varchar;   -- note/authorReference/display (varchar)
        END IF; -- column (medreq_note_authorreference_display)
        IF NOT EXISTS ( -- column not exists (medreq_note_time)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_note_time'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_note_time timestamp;   -- note/time (timestamp)
        END IF; -- column (medreq_note_time)
        IF NOT EXISTS ( -- column not exists (medreq_note_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_note_text'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_note_text varchar;   -- note/text (varchar)
        END IF; -- column (medreq_note_text)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_sequence)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_sequence'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_sequence int;   -- dosageInstruction/sequence (int)
        END IF; -- column (medreq_doseinstruc_sequence)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_text'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_text varchar;   -- dosageInstruction/text (varchar)
        END IF; -- column (medreq_doseinstruc_text)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_additionalinstruction_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_additionalinstruction_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_additionalinstruction_system varchar;   -- dosageInstruction/additionalInstruction/coding/system (varchar)
        END IF; -- column (medreq_doseinstruc_additionalinstruction_system)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_additionalinstruction_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_additionalinstruction_version'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_additionalinstruction_version varchar;   -- dosageInstruction/additionalInstruction/coding/version (varchar)
        END IF; -- column (medreq_doseinstruc_additionalinstruction_version)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_additionalinstruction_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_additionalinstruction_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_additionalinstruction_code varchar;   -- dosageInstruction/additionalInstruction/coding/code (varchar)
        END IF; -- column (medreq_doseinstruc_additionalinstruction_code)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_additionalinstruction_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_additionalinstruction_display'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_additionalinstruction_display varchar;   -- dosageInstruction/additionalInstruction/coding/display (varchar)
        END IF; -- column (medreq_doseinstruc_additionalinstruction_display)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_additionalinstruction_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_additionalinstruction_text'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_additionalinstruction_text varchar;   -- dosageInstruction/additionalInstruction/text (varchar)
        END IF; -- column (medreq_doseinstruc_additionalinstruction_text)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_patientinstruction)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_patientinstruction'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_patientinstruction varchar;   -- dosageInstruction/patientInstruction (varchar)
        END IF; -- column (medreq_doseinstruc_patientinstruction)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_timing_event)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_timing_event'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_timing_event timestamp;   -- dosageInstruction/timing/event (timestamp)
        END IF; -- column (medreq_doseinstruc_timing_event)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_timing_repeat_boundsduration_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_timing_repeat_boundsduration_value'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_timing_repeat_boundsduration_value double precision;   -- dosageInstruction/timing/repeat/boundsDuration/value (double precision)
        END IF; -- column (medreq_doseinstruc_timing_repeat_boundsduration_value)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_timing_repeat_boundsduration_comparator)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_timing_repeat_boundsduration_comparator'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_timing_repeat_boundsduration_comparator varchar;   -- dosageInstruction/timing/repeat/boundsDuration/comparator (varchar)
        END IF; -- column (medreq_doseinstruc_timing_repeat_boundsduration_comparator)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_timing_repeat_boundsduration_unit)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_timing_repeat_boundsduration_unit'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_timing_repeat_boundsduration_unit varchar;   -- dosageInstruction/timing/repeat/boundsDuration/unit (varchar)
        END IF; -- column (medreq_doseinstruc_timing_repeat_boundsduration_unit)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_timing_repeat_boundsduration_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_timing_repeat_boundsduration_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_timing_repeat_boundsduration_system varchar;   -- dosageInstruction/timing/repeat/boundsDuration/system (varchar)
        END IF; -- column (medreq_doseinstruc_timing_repeat_boundsduration_system)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_timing_repeat_boundsduration_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_timing_repeat_boundsduration_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_timing_repeat_boundsduration_code varchar;   -- dosageInstruction/timing/repeat/boundsDuration/code (varchar)
        END IF; -- column (medreq_doseinstruc_timing_repeat_boundsduration_code)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_timing_repeat_boundsrange_low_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_timing_repeat_boundsrange_low_value'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_timing_repeat_boundsrange_low_value double precision;   -- dosageInstruction/timing/repeat/boundsRange/low/value (double precision)
        END IF; -- column (medreq_doseinstruc_timing_repeat_boundsrange_low_value)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_timing_repeat_boundsrange_low_unit)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_timing_repeat_boundsrange_low_unit'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_timing_repeat_boundsrange_low_unit varchar;   -- dosageInstruction/timing/repeat/boundsRange/low/unit (varchar)
        END IF; -- column (medreq_doseinstruc_timing_repeat_boundsrange_low_unit)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_timing_repeat_boundsrange_low_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_timing_repeat_boundsrange_low_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_timing_repeat_boundsrange_low_system varchar;   -- dosageInstruction/timing/repeat/boundsRange/low/system (varchar)
        END IF; -- column (medreq_doseinstruc_timing_repeat_boundsrange_low_system)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_timing_repeat_boundsrange_low_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_timing_repeat_boundsrange_low_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_timing_repeat_boundsrange_low_code varchar;   -- dosageInstruction/timing/repeat/boundsRange/low/code (varchar)
        END IF; -- column (medreq_doseinstruc_timing_repeat_boundsrange_low_code)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_timing_repeat_boundsrange_high_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_timing_repeat_boundsrange_high_value'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_timing_repeat_boundsrange_high_value double precision;   -- dosageInstruction/timing/repeat/boundsRange/high/value (double precision)
        END IF; -- column (medreq_doseinstruc_timing_repeat_boundsrange_high_value)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_timing_repeat_boundsrange_high_unit)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_timing_repeat_boundsrange_high_unit'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_timing_repeat_boundsrange_high_unit varchar;   -- dosageInstruction/timing/repeat/boundsRange/high/unit (varchar)
        END IF; -- column (medreq_doseinstruc_timing_repeat_boundsrange_high_unit)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_timing_repeat_boundsrange_high_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_timing_repeat_boundsrange_high_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_timing_repeat_boundsrange_high_system varchar;   -- dosageInstruction/timing/repeat/boundsRange/high/system (varchar)
        END IF; -- column (medreq_doseinstruc_timing_repeat_boundsrange_high_system)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_timing_repeat_boundsrange_high_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_timing_repeat_boundsrange_high_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_timing_repeat_boundsrange_high_code varchar;   -- dosageInstruction/timing/repeat/boundsRange/high/code (varchar)
        END IF; -- column (medreq_doseinstruc_timing_repeat_boundsrange_high_code)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_timing_repeat_boundsperiod_start)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_timing_repeat_boundsperiod_start'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_timing_repeat_boundsperiod_start timestamp;   -- dosageInstruction/timing/repeat/boundsPeriod/start (timestamp)
        END IF; -- column (medreq_doseinstruc_timing_repeat_boundsperiod_start)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_timing_repeat_boundsperiod_end)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_timing_repeat_boundsperiod_end'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_timing_repeat_boundsperiod_end timestamp;   -- dosageInstruction/timing/repeat/boundsPeriod/end (timestamp)
        END IF; -- column (medreq_doseinstruc_timing_repeat_boundsperiod_end)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_timing_repeat_count)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_timing_repeat_count'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_timing_repeat_count int;   -- dosageInstruction/timing/repeat/count (int)
        END IF; -- column (medreq_doseinstruc_timing_repeat_count)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_timing_repeat_countmax)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_timing_repeat_countmax'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_timing_repeat_countmax int;   -- dosageInstruction/timing/repeat/countMax (int)
        END IF; -- column (medreq_doseinstruc_timing_repeat_countmax)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_timing_repeat_duration)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_timing_repeat_duration'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_timing_repeat_duration double precision;   -- dosageInstruction/timing/repeat/duration (double precision)
        END IF; -- column (medreq_doseinstruc_timing_repeat_duration)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_timing_repeat_durationmax)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_timing_repeat_durationmax'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_timing_repeat_durationmax double precision;   -- dosageInstruction/timing/repeat/durationMax (double precision)
        END IF; -- column (medreq_doseinstruc_timing_repeat_durationmax)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_timing_repeat_durationunit)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_timing_repeat_durationunit'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_timing_repeat_durationunit varchar;   -- dosageInstruction/timing/repeat/durationUnit (varchar)
        END IF; -- column (medreq_doseinstruc_timing_repeat_durationunit)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_timing_repeat_frequency)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_timing_repeat_frequency'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_timing_repeat_frequency int;   -- dosageInstruction/timing/repeat/frequency (int)
        END IF; -- column (medreq_doseinstruc_timing_repeat_frequency)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_timing_repeat_frequencymax)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_timing_repeat_frequencymax'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_timing_repeat_frequencymax int;   -- dosageInstruction/timing/repeat/frequencyMax (int)
        END IF; -- column (medreq_doseinstruc_timing_repeat_frequencymax)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_timing_repeat_period)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_timing_repeat_period'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_timing_repeat_period double precision;   -- dosageInstruction/timing/repeat/period (double precision)
        END IF; -- column (medreq_doseinstruc_timing_repeat_period)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_timing_repeat_periodmax)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_timing_repeat_periodmax'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_timing_repeat_periodmax double precision;   -- dosageInstruction/timing/repeat/periodMax (double precision)
        END IF; -- column (medreq_doseinstruc_timing_repeat_periodmax)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_timing_repeat_periodunit)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_timing_repeat_periodunit'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_timing_repeat_periodunit varchar;   -- dosageInstruction/timing/repeat/periodUnit (varchar)
        END IF; -- column (medreq_doseinstruc_timing_repeat_periodunit)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_timing_repeat_dayofweek)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_timing_repeat_dayofweek'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_timing_repeat_dayofweek varchar;   -- dosageInstruction/timing/repeat/dayOfWeek (varchar)
        END IF; -- column (medreq_doseinstruc_timing_repeat_dayofweek)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_timing_repeat_timeofday)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_timing_repeat_timeofday'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_timing_repeat_timeofday time;   -- dosageInstruction/timing/repeat/timeOfDay (time)
        END IF; -- column (medreq_doseinstruc_timing_repeat_timeofday)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_timing_repeat_when)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_timing_repeat_when'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_timing_repeat_when varchar;   -- dosageInstruction/timing/repeat/when (varchar)
        END IF; -- column (medreq_doseinstruc_timing_repeat_when)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_timing_repeat_offset)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_timing_repeat_offset'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_timing_repeat_offset int;   -- dosageInstruction/timing/repeat/offset (int)
        END IF; -- column (medreq_doseinstruc_timing_repeat_offset)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_timing_code_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_timing_code_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_timing_code_system varchar;   -- dosageInstruction/timing/code/coding/system (varchar)
        END IF; -- column (medreq_doseinstruc_timing_code_system)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_timing_code_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_timing_code_version'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_timing_code_version varchar;   -- dosageInstruction/timing/code/coding/version (varchar)
        END IF; -- column (medreq_doseinstruc_timing_code_version)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_timing_code_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_timing_code_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_timing_code_code varchar;   -- dosageInstruction/timing/code/coding/code (varchar)
        END IF; -- column (medreq_doseinstruc_timing_code_code)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_timing_code_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_timing_code_display'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_timing_code_display varchar;   -- dosageInstruction/timing/code/coding/display (varchar)
        END IF; -- column (medreq_doseinstruc_timing_code_display)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_timing_code_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_timing_code_text'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_timing_code_text varchar;   -- dosageInstruction/timing/code/text (varchar)
        END IF; -- column (medreq_doseinstruc_timing_code_text)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_asneededboolean)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_asneededboolean'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_asneededboolean boolean;   -- dosageInstruction/asNeededBoolean (boolean)
        END IF; -- column (medreq_doseinstruc_asneededboolean)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_asneededcodeableconcept_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_asneededcodeableconcept_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_asneededcodeableconcept_system varchar;   -- dosageInstruction/asNeededCodeableConcept/coding/system (varchar)
        END IF; -- column (medreq_doseinstruc_asneededcodeableconcept_system)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_asneededcodeableconcept_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_asneededcodeableconcept_version'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_asneededcodeableconcept_version varchar;   -- dosageInstruction/asNeededCodeableConcept/coding/version (varchar)
        END IF; -- column (medreq_doseinstruc_asneededcodeableconcept_version)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_asneededcodeableconcept_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_asneededcodeableconcept_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_asneededcodeableconcept_code varchar;   -- dosageInstruction/asNeededCodeableConcept/coding/code (varchar)
        END IF; -- column (medreq_doseinstruc_asneededcodeableconcept_code)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_asneededcodeableconcept_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_asneededcodeableconcept_display'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_asneededcodeableconcept_display varchar;   -- dosageInstruction/asNeededCodeableConcept/coding/display (varchar)
        END IF; -- column (medreq_doseinstruc_asneededcodeableconcept_display)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_asneededcodeableconcept_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_asneededcodeableconcept_text'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_asneededcodeableconcept_text varchar;   -- dosageInstruction/asNeededCodeableConcept/text (varchar)
        END IF; -- column (medreq_doseinstruc_asneededcodeableconcept_text)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_site_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_site_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_site_system varchar;   -- dosageInstruction/site/coding/system (varchar)
        END IF; -- column (medreq_doseinstruc_site_system)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_site_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_site_version'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_site_version varchar;   -- dosageInstruction/site/coding/version (varchar)
        END IF; -- column (medreq_doseinstruc_site_version)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_site_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_site_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_site_code varchar;   -- dosageInstruction/site/coding/code (varchar)
        END IF; -- column (medreq_doseinstruc_site_code)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_site_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_site_display'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_site_display varchar;   -- dosageInstruction/site/coding/display (varchar)
        END IF; -- column (medreq_doseinstruc_site_display)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_site_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_site_text'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_site_text varchar;   -- dosageInstruction/site/text (varchar)
        END IF; -- column (medreq_doseinstruc_site_text)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_route_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_route_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_route_system varchar;   -- dosageInstruction/route/coding/system (varchar)
        END IF; -- column (medreq_doseinstruc_route_system)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_route_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_route_version'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_route_version varchar;   -- dosageInstruction/route/coding/version (varchar)
        END IF; -- column (medreq_doseinstruc_route_version)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_route_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_route_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_route_code varchar;   -- dosageInstruction/route/coding/code (varchar)
        END IF; -- column (medreq_doseinstruc_route_code)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_route_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_route_display'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_route_display varchar;   -- dosageInstruction/route/coding/display (varchar)
        END IF; -- column (medreq_doseinstruc_route_display)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_route_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_route_text'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_route_text varchar;   -- dosageInstruction/route/text (varchar)
        END IF; -- column (medreq_doseinstruc_route_text)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_method_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_method_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_method_system varchar;   -- dosageInstruction/method/coding/system (varchar)
        END IF; -- column (medreq_doseinstruc_method_system)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_method_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_method_version'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_method_version varchar;   -- dosageInstruction/method/coding/version (varchar)
        END IF; -- column (medreq_doseinstruc_method_version)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_method_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_method_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_method_code varchar;   -- dosageInstruction/method/coding/code (varchar)
        END IF; -- column (medreq_doseinstruc_method_code)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_method_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_method_display'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_method_display varchar;   -- dosageInstruction/method/coding/display (varchar)
        END IF; -- column (medreq_doseinstruc_method_display)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_method_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_method_text'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_method_text varchar;   -- dosageInstruction/method/text (varchar)
        END IF; -- column (medreq_doseinstruc_method_text)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_doseandrate_type_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_doseandrate_type_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_doseandrate_type_system varchar;   -- dosageInstruction/doseAndRate/type/coding/system (varchar)
        END IF; -- column (medreq_doseinstruc_doseandrate_type_system)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_doseandrate_type_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_doseandrate_type_version'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_doseandrate_type_version varchar;   -- dosageInstruction/doseAndRate/type/coding/version (varchar)
        END IF; -- column (medreq_doseinstruc_doseandrate_type_version)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_doseandrate_type_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_doseandrate_type_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_doseandrate_type_code varchar;   -- dosageInstruction/doseAndRate/type/coding/code (varchar)
        END IF; -- column (medreq_doseinstruc_doseandrate_type_code)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_doseandrate_type_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_doseandrate_type_display'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_doseandrate_type_display varchar;   -- dosageInstruction/doseAndRate/type/coding/display (varchar)
        END IF; -- column (medreq_doseinstruc_doseandrate_type_display)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_doseandrate_type_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_doseandrate_type_text'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_doseandrate_type_text varchar;   -- dosageInstruction/doseAndRate/type/text (varchar)
        END IF; -- column (medreq_doseinstruc_doseandrate_type_text)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_doseandrate_doserange_low_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_doseandrate_doserange_low_value'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_doseandrate_doserange_low_value double precision;   -- dosageInstruction/doseAndRate/doseRange/low/value (double precision)
        END IF; -- column (medreq_doseinstruc_doseandrate_doserange_low_value)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_doseandrate_doserange_low_unit)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_doseandrate_doserange_low_unit'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_doseandrate_doserange_low_unit varchar;   -- dosageInstruction/doseAndRate/doseRange/low/unit (varchar)
        END IF; -- column (medreq_doseinstruc_doseandrate_doserange_low_unit)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_doseandrate_doserange_low_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_doseandrate_doserange_low_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_doseandrate_doserange_low_system varchar;   -- dosageInstruction/doseAndRate/doseRange/low/system (varchar)
        END IF; -- column (medreq_doseinstruc_doseandrate_doserange_low_system)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_doseandrate_doserange_low_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_doseandrate_doserange_low_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_doseandrate_doserange_low_code varchar;   -- dosageInstruction/doseAndRate/doseRange/low/code (varchar)
        END IF; -- column (medreq_doseinstruc_doseandrate_doserange_low_code)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_doseandrate_doserange_high_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_doseandrate_doserange_high_value'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_doseandrate_doserange_high_value double precision;   -- dosageInstruction/doseAndRate/doseRange/high/value (double precision)
        END IF; -- column (medreq_doseinstruc_doseandrate_doserange_high_value)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_doseandrate_doserange_high_unit)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_doseandrate_doserange_high_unit'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_doseandrate_doserange_high_unit varchar;   -- dosageInstruction/doseAndRate/doseRange/high/unit (varchar)
        END IF; -- column (medreq_doseinstruc_doseandrate_doserange_high_unit)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_doseandrate_doserange_high_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_doseandrate_doserange_high_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_doseandrate_doserange_high_system varchar;   -- dosageInstruction/doseAndRate/doseRange/high/system (varchar)
        END IF; -- column (medreq_doseinstruc_doseandrate_doserange_high_system)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_doseandrate_doserange_high_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_doseandrate_doserange_high_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_doseandrate_doserange_high_code varchar;   -- dosageInstruction/doseAndRate/doseRange/high/code (varchar)
        END IF; -- column (medreq_doseinstruc_doseandrate_doserange_high_code)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_doseandrate_dosequantity_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_doseandrate_dosequantity_value'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_doseandrate_dosequantity_value double precision;   -- dosageInstruction/doseAndRate/doseQuantity/value (double precision)
        END IF; -- column (medreq_doseinstruc_doseandrate_dosequantity_value)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_doseandrate_dosequantity_comparator)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_doseandrate_dosequantity_comparator'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_doseandrate_dosequantity_comparator varchar;   -- dosageInstruction/doseAndRate/doseQuantity/comparator (varchar)
        END IF; -- column (medreq_doseinstruc_doseandrate_dosequantity_comparator)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_doseandrate_dosequantity_unit)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_doseandrate_dosequantity_unit'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_doseandrate_dosequantity_unit varchar;   -- dosageInstruction/doseAndRate/doseQuantity/unit (varchar)
        END IF; -- column (medreq_doseinstruc_doseandrate_dosequantity_unit)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_doseandrate_dosequantity_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_doseandrate_dosequantity_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_doseandrate_dosequantity_system varchar;   -- dosageInstruction/doseAndRate/doseQuantity/system (varchar)
        END IF; -- column (medreq_doseinstruc_doseandrate_dosequantity_system)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_doseandrate_dosequantity_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_doseandrate_dosequantity_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_doseandrate_dosequantity_code varchar;   -- dosageInstruction/doseAndRate/doseQuantity/code (varchar)
        END IF; -- column (medreq_doseinstruc_doseandrate_dosequantity_code)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_doseandrate_rateratio_numerator_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_doseandrate_rateratio_numerator_value'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_doseandrate_rateratio_numerator_value double precision;   -- dosageInstruction/doseAndRate/rateRatio/numerator/value (double precision)
        END IF; -- column (medreq_doseinstruc_doseandrate_rateratio_numerator_value)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_doseandrate_rateratio_numerator_comparator)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_doseandrate_rateratio_numerator_comparator'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_doseandrate_rateratio_numerator_comparator varchar;   -- dosageInstruction/doseAndRate/rateRatio/numerator/comparator (varchar)
        END IF; -- column (medreq_doseinstruc_doseandrate_rateratio_numerator_comparator)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_doseandrate_rateratio_numerator_unit)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_doseandrate_rateratio_numerator_unit'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_doseandrate_rateratio_numerator_unit varchar;   -- dosageInstruction/doseAndRate/rateRatio/numerator/unit (varchar)
        END IF; -- column (medreq_doseinstruc_doseandrate_rateratio_numerator_unit)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_doseandrate_rateratio_numerator_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_doseandrate_rateratio_numerator_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_doseandrate_rateratio_numerator_system varchar;   -- dosageInstruction/doseAndRate/rateRatio/numerator/system (varchar)
        END IF; -- column (medreq_doseinstruc_doseandrate_rateratio_numerator_system)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_doseandrate_rateratio_numerator_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_doseandrate_rateratio_numerator_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_doseandrate_rateratio_numerator_code varchar;   -- dosageInstruction/doseAndRate/rateRatio/numerator/code (varchar)
        END IF; -- column (medreq_doseinstruc_doseandrate_rateratio_numerator_code)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_doseandrate_rateratio_denominator_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_doseandrate_rateratio_denominator_value'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_doseandrate_rateratio_denominator_value double precision;   -- dosageInstruction/doseAndRate/rateRatio/denominator/value (double precision)
        END IF; -- column (medreq_doseinstruc_doseandrate_rateratio_denominator_value)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_doseandrate_rateratio_denominator_comparator)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_doseandrate_rateratio_denominator_comparator'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_doseandrate_rateratio_denominator_comparator varchar;   -- dosageInstruction/doseAndRate/rateRatio/denominator/comparator (varchar)
        END IF; -- column (medreq_doseinstruc_doseandrate_rateratio_denominator_comparator)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_doseandrate_rateratio_denominator_unit)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_doseandrate_rateratio_denominator_unit'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_doseandrate_rateratio_denominator_unit varchar;   -- dosageInstruction/doseAndRate/rateRatio/denominator/unit (varchar)
        END IF; -- column (medreq_doseinstruc_doseandrate_rateratio_denominator_unit)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_doseandrate_rateratio_denominator_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_doseandrate_rateratio_denominator_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_doseandrate_rateratio_denominator_system varchar;   -- dosageInstruction/doseAndRate/rateRatio/denominator/system (varchar)
        END IF; -- column (medreq_doseinstruc_doseandrate_rateratio_denominator_system)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_doseandrate_rateratio_denominator_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_doseandrate_rateratio_denominator_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_doseandrate_rateratio_denominator_code varchar;   -- dosageInstruction/doseAndRate/rateRatio/denominator/code (varchar)
        END IF; -- column (medreq_doseinstruc_doseandrate_rateratio_denominator_code)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_doseandrate_raterange_low_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_doseandrate_raterange_low_value'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_doseandrate_raterange_low_value double precision;   -- dosageInstruction/doseAndRate/rateRange/low/value (double precision)
        END IF; -- column (medreq_doseinstruc_doseandrate_raterange_low_value)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_doseandrate_raterange_low_unit)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_doseandrate_raterange_low_unit'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_doseandrate_raterange_low_unit varchar;   -- dosageInstruction/doseAndRate/rateRange/low/unit (varchar)
        END IF; -- column (medreq_doseinstruc_doseandrate_raterange_low_unit)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_doseandrate_raterange_low_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_doseandrate_raterange_low_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_doseandrate_raterange_low_system varchar;   -- dosageInstruction/doseAndRate/rateRange/low/system (varchar)
        END IF; -- column (medreq_doseinstruc_doseandrate_raterange_low_system)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_doseandrate_raterange_low_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_doseandrate_raterange_low_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_doseandrate_raterange_low_code varchar;   -- dosageInstruction/doseAndRate/rateRange/low/code (varchar)
        END IF; -- column (medreq_doseinstruc_doseandrate_raterange_low_code)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_doseandrate_raterange_high_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_doseandrate_raterange_high_value'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_doseandrate_raterange_high_value double precision;   -- dosageInstruction/doseAndRate/rateRange/high/value (double precision)
        END IF; -- column (medreq_doseinstruc_doseandrate_raterange_high_value)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_doseandrate_raterange_high_unit)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_doseandrate_raterange_high_unit'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_doseandrate_raterange_high_unit varchar;   -- dosageInstruction/doseAndRate/rateRange/high/unit (varchar)
        END IF; -- column (medreq_doseinstruc_doseandrate_raterange_high_unit)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_doseandrate_raterange_high_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_doseandrate_raterange_high_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_doseandrate_raterange_high_system varchar;   -- dosageInstruction/doseAndRate/rateRange/high/system (varchar)
        END IF; -- column (medreq_doseinstruc_doseandrate_raterange_high_system)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_doseandrate_raterange_high_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_doseandrate_raterange_high_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_doseandrate_raterange_high_code varchar;   -- dosageInstruction/doseAndRate/rateRange/high/code (varchar)
        END IF; -- column (medreq_doseinstruc_doseandrate_raterange_high_code)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_doseandrate_ratequantity_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_doseandrate_ratequantity_value'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_doseandrate_ratequantity_value double precision;   -- dosageInstruction/doseAndRate/rateQuantity/value (double precision)
        END IF; -- column (medreq_doseinstruc_doseandrate_ratequantity_value)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_doseandrate_ratequantity_unit)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_doseandrate_ratequantity_unit'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_doseandrate_ratequantity_unit varchar;   -- dosageInstruction/doseAndRate/rateQuantity/unit (varchar)
        END IF; -- column (medreq_doseinstruc_doseandrate_ratequantity_unit)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_doseandrate_ratequantity_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_doseandrate_ratequantity_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_doseandrate_ratequantity_system varchar;   -- dosageInstruction/doseAndRate/rateQuantity/system (varchar)
        END IF; -- column (medreq_doseinstruc_doseandrate_ratequantity_system)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_doseandrate_ratequantity_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_doseandrate_ratequantity_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_doseandrate_ratequantity_code varchar;   -- dosageInstruction/doseAndRate/rateQuantity/code (varchar)
        END IF; -- column (medreq_doseinstruc_doseandrate_ratequantity_code)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_maxdoseperperiod_numerator_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_maxdoseperperiod_numerator_value'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_maxdoseperperiod_numerator_value double precision;   -- dosageInstruction/maxDosePerPeriod/numerator/value (double precision)
        END IF; -- column (medreq_doseinstruc_maxdoseperperiod_numerator_value)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_maxdoseperperiod_numerator_comparator)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_maxdoseperperiod_numerator_comparator'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_maxdoseperperiod_numerator_comparator varchar;   -- dosageInstruction/maxDosePerPeriod/numerator/comparator (varchar)
        END IF; -- column (medreq_doseinstruc_maxdoseperperiod_numerator_comparator)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_maxdoseperperiod_numerator_unit)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_maxdoseperperiod_numerator_unit'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_maxdoseperperiod_numerator_unit varchar;   -- dosageInstruction/maxDosePerPeriod/numerator/unit (varchar)
        END IF; -- column (medreq_doseinstruc_maxdoseperperiod_numerator_unit)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_maxdoseperperiod_numerator_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_maxdoseperperiod_numerator_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_maxdoseperperiod_numerator_system varchar;   -- dosageInstruction/maxDosePerPeriod/numerator/system (varchar)
        END IF; -- column (medreq_doseinstruc_maxdoseperperiod_numerator_system)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_maxdoseperperiod_numerator_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_maxdoseperperiod_numerator_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_maxdoseperperiod_numerator_code varchar;   -- dosageInstruction/maxDosePerPeriod/numerator/code (varchar)
        END IF; -- column (medreq_doseinstruc_maxdoseperperiod_numerator_code)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_maxdoseperperiod_denominator_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_maxdoseperperiod_denominator_value'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_maxdoseperperiod_denominator_value double precision;   -- dosageInstruction/maxDosePerPeriod/denominator/value (double precision)
        END IF; -- column (medreq_doseinstruc_maxdoseperperiod_denominator_value)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_maxdoseperperiod_denominator_comparator)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_maxdoseperperiod_denominator_comparator'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_maxdoseperperiod_denominator_comparator varchar;   -- dosageInstruction/maxDosePerPeriod/denominator/comparator (varchar)
        END IF; -- column (medreq_doseinstruc_maxdoseperperiod_denominator_comparator)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_maxdoseperperiod_denominator_unit)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_maxdoseperperiod_denominator_unit'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_maxdoseperperiod_denominator_unit varchar;   -- dosageInstruction/maxDosePerPeriod/denominator/unit (varchar)
        END IF; -- column (medreq_doseinstruc_maxdoseperperiod_denominator_unit)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_maxdoseperperiod_denominator_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_maxdoseperperiod_denominator_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_maxdoseperperiod_denominator_system varchar;   -- dosageInstruction/maxDosePerPeriod/denominator/system (varchar)
        END IF; -- column (medreq_doseinstruc_maxdoseperperiod_denominator_system)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_maxdoseperperiod_denominator_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_maxdoseperperiod_denominator_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_maxdoseperperiod_denominator_code varchar;   -- dosageInstruction/maxDosePerPeriod/denominator/code (varchar)
        END IF; -- column (medreq_doseinstruc_maxdoseperperiod_denominator_code)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_maxdoseperadministration_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_maxdoseperadministration_value'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_maxdoseperadministration_value double precision;   -- dosageInstruction/maxDosePerAdministration/value (double precision)
        END IF; -- column (medreq_doseinstruc_maxdoseperadministration_value)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_maxdoseperadministration_unit)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_maxdoseperadministration_unit'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_maxdoseperadministration_unit varchar;   -- dosageInstruction/maxDosePerAdministration/unit (varchar)
        END IF; -- column (medreq_doseinstruc_maxdoseperadministration_unit)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_maxdoseperadministration_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_maxdoseperadministration_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_maxdoseperadministration_system varchar;   -- dosageInstruction/maxDosePerAdministration/system (varchar)
        END IF; -- column (medreq_doseinstruc_maxdoseperadministration_system)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_maxdoseperadministration_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_maxdoseperadministration_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_maxdoseperadministration_code varchar;   -- dosageInstruction/maxDosePerAdministration/code (varchar)
        END IF; -- column (medreq_doseinstruc_maxdoseperadministration_code)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_maxdoseperlifetime_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_maxdoseperlifetime_value'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_maxdoseperlifetime_value double precision;   -- dosageInstruction/maxDosePerLifetime/value (double precision)
        END IF; -- column (medreq_doseinstruc_maxdoseperlifetime_value)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_maxdoseperlifetime_unit)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_maxdoseperlifetime_unit'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_maxdoseperlifetime_unit varchar;   -- dosageInstruction/maxDosePerLifetime/unit (varchar)
        END IF; -- column (medreq_doseinstruc_maxdoseperlifetime_unit)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_maxdoseperlifetime_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_maxdoseperlifetime_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_maxdoseperlifetime_system varchar;   -- dosageInstruction/maxDosePerLifetime/system (varchar)
        END IF; -- column (medreq_doseinstruc_maxdoseperlifetime_system)
        IF NOT EXISTS ( -- column not exists (medreq_doseinstruc_maxdoseperlifetime_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_doseinstruc_maxdoseperlifetime_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_doseinstruc_maxdoseperlifetime_code varchar;   -- dosageInstruction/maxDosePerLifetime/code (varchar)
        END IF; -- column (medreq_doseinstruc_maxdoseperlifetime_code)
        IF NOT EXISTS ( -- column not exists (medreq_substitution_reason_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_substitution_reason_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_substitution_reason_system varchar;   -- substitution/reason/coding/system (varchar)
        END IF; -- column (medreq_substitution_reason_system)
        IF NOT EXISTS ( -- column not exists (medreq_substitution_reason_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_substitution_reason_version'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_substitution_reason_version varchar;   -- substitution/reason/coding/version (varchar)
        END IF; -- column (medreq_substitution_reason_version)
        IF NOT EXISTS ( -- column not exists (medreq_substitution_reason_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_substitution_reason_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_substitution_reason_code varchar;   -- substitution/reason/coding/code (varchar)
        END IF; -- column (medreq_substitution_reason_code)
        IF NOT EXISTS ( -- column not exists (medreq_substitution_reason_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_substitution_reason_display'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_substitution_reason_display varchar;   -- substitution/reason/coding/display (varchar)
        END IF; -- column (medreq_substitution_reason_display)
        IF NOT EXISTS ( -- column not exists (medreq_substitution_reason_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'medreq_substitution_reason_text'
        ) THEN
            ALTER TABLE cds2db_in.medicationrequest ADD medreq_substitution_reason_text varchar;   -- substitution/reason/text (varchar)
        END IF; -- column (medreq_substitution_reason_text)

-- Hash column for comparison on data-bearing columns -------------------------------------------
        IF EXISTS ( -- column exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest' AND column_name = 'hash_index_col'
        ) THEN
            IF NOT EXISTS ( -- column exists
                SELECT 1 FROM information_schema.columns WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest' AND column_name = 'hash_index_col'
                AND trim(replace(replace(generation_expression::TEXT,'(',''),')','')) != trim(replace(replace('
	         COALESCE(db.to_char_immutable(medreq_id), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_identifier_use), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_identifier_type_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_identifier_type_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_identifier_type_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_identifier_type_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_identifier_type_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_identifier_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_identifier_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_identifier_start), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_identifier_end), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_encounter_ref), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_patient_ref), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_medicationreference_ref), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_status), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_statusreason_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_statusreason_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_statusreason_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_statusreason_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_statusreason_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_intend), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_intent), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_category_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_category_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_category_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_category_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_category_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_priority), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_reportedboolean), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_reportedreference_ref), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_reportedreference_type), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_reportedreference_identifier_use), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_reportedreference_identifier_type_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_reportedreference_identifier_type_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_reportedreference_identifier_type_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_reportedreference_identifier_type_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_reportedreference_identifier_type_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_reportedreference_identifier_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_reportedreference_identifier_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_reportedreference_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_medicationcodeableconcept_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_medicationcodeableconcept_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_medicationcodeableconcept_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_medicationcodeableconcept_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_medicationcodeableconcept_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_supportinginformation_ref), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_supportinginformation_type), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_supportinginformation_identifier_use), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_supportinginformation_identifier_type_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_supportinginformation_identifier_type_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_supportinginformation_identifier_type_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_supportinginformation_identifier_type_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_supportinginformation_identifier_type_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_supportinginformation_identifier_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_supportinginformation_identifier_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_supportinginformation_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_authoredon), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_requester_ref), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_requester_type), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_requester_identifier_use), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_requester_identifier_type_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_requester_identifier_type_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_requester_identifier_type_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_requester_identifier_type_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_requester_identifier_type_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_requester_identifier_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_requester_identifier_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_requester_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_reasoncode_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_reasoncode_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_reasoncode_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_reasoncode_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_reasoncode_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_reasonreference_ref), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_reasonreference_type), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_reasonreference_identifier_use), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_reasonreference_identifier_type_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_reasonreference_identifier_type_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_reasonreference_identifier_type_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_reasonreference_identifier_type_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_reasonreference_identifier_type_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_reasonreference_identifier_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_reasonreference_identifier_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_reasonreference_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_basedon_ref), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_basedon_type), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_basedon_identifier_use), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_basedon_identifier_type_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_basedon_identifier_type_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_basedon_identifier_type_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_basedon_identifier_type_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_basedon_identifier_type_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_basedon_identifier_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_basedon_identifier_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_basedon_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_note_authorstring), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_note_authorreference_ref), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_note_authorreference_type), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_note_authorreference_identifier_use), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_note_authorreference_identifier_type_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_note_authorreference_identifier_type_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_note_authorreference_identifier_type_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_note_authorreference_identifier_type_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_note_authorreference_identifier_type_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_note_authorreference_identifier_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_note_authorreference_identifier_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_note_authorreference_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_note_time), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_note_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_sequence), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_additionalinstruction_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_additionalinstruction_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_additionalinstruction_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_additionalinstruction_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_additionalinstruction_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_patientinstruction), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_event), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_boundsduration_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_boundsduration_comparator), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_boundsduration_unit), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_boundsduration_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_boundsduration_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_boundsrange_low_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_boundsrange_low_unit), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_boundsrange_low_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_boundsrange_low_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_boundsrange_high_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_boundsrange_high_unit), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_boundsrange_high_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_boundsrange_high_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_boundsperiod_start), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_boundsperiod_end), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_count), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_countmax), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_duration), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_durationmax), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_durationunit), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_frequency), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_frequencymax), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_period), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_periodmax), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_periodunit), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_dayofweek), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_timeofday), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_when), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_offset), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_code_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_code_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_code_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_code_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_code_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_asneededboolean), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_asneededcodeableconcept_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_asneededcodeableconcept_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_asneededcodeableconcept_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_asneededcodeableconcept_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_asneededcodeableconcept_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_site_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_site_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_site_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_site_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_site_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_route_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_route_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_route_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_route_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_route_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_method_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_method_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_method_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_method_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_method_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_type_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_type_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_type_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_type_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_type_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_doserange_low_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_doserange_low_unit), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_doserange_low_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_doserange_low_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_doserange_high_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_doserange_high_unit), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_doserange_high_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_doserange_high_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_dosequantity_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_dosequantity_comparator), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_dosequantity_unit), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_dosequantity_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_dosequantity_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_rateratio_numerator_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_rateratio_numerator_comparator), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_rateratio_numerator_unit), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_rateratio_numerator_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_rateratio_numerator_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_rateratio_denominator_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_rateratio_denominator_comparator), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_rateratio_denominator_unit), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_rateratio_denominator_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_rateratio_denominator_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_raterange_low_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_raterange_low_unit), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_raterange_low_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_raterange_low_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_raterange_high_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_raterange_high_unit), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_raterange_high_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_raterange_high_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_ratequantity_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_ratequantity_unit), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_ratequantity_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_ratequantity_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_maxdoseperperiod_numerator_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_maxdoseperperiod_numerator_comparator), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_maxdoseperperiod_numerator_unit), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_maxdoseperperiod_numerator_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_maxdoseperperiod_numerator_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_maxdoseperperiod_denominator_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_maxdoseperperiod_denominator_comparator), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_maxdoseperperiod_denominator_unit), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_maxdoseperperiod_denominator_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_maxdoseperperiod_denominator_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_maxdoseperadministration_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_maxdoseperadministration_unit), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_maxdoseperadministration_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_maxdoseperadministration_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_maxdoseperlifetime_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_maxdoseperlifetime_unit), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_maxdoseperlifetime_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_doseinstruc_maxdoseperlifetime_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_substitution_reason_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_substitution_reason_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_substitution_reason_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_substitution_reason_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medreq_substitution_reason_text), ''#NULL#'') || ''|||'' ||''#''
                ','(',''),')',''))
            ) THEN
            -- Delete the old hash column so that a new one can be created
            ALTER TABLE cds2db_in.medicationrequest DROP COLUMN hash_index_col;

            -- Creating the hash column
            ALTER TABLE cds2db_in.medicationrequest ADD
            hash_index_col TEXT GENERATED ALWAYS AS (
            md5(
	         COALESCE(db.to_char_immutable(medreq_id), '#NULL#') || '|||' || -- hash from: id (medreq_id)
          COALESCE(db.to_char_immutable(medreq_identifier_use), '#NULL#') || '|||' || -- hash from: identifier/use (medreq_identifier_use)
          COALESCE(db.to_char_immutable(medreq_identifier_type_system), '#NULL#') || '|||' || -- hash from: identifier/type/coding/system (medreq_identifier_type_system)
          COALESCE(db.to_char_immutable(medreq_identifier_type_version), '#NULL#') || '|||' || -- hash from: identifier/type/coding/version (medreq_identifier_type_version)
          COALESCE(db.to_char_immutable(medreq_identifier_type_code), '#NULL#') || '|||' || -- hash from: identifier/type/coding/code (medreq_identifier_type_code)
          COALESCE(db.to_char_immutable(medreq_identifier_type_display), '#NULL#') || '|||' || -- hash from: identifier/type/coding/display (medreq_identifier_type_display)
          COALESCE(db.to_char_immutable(medreq_identifier_type_text), '#NULL#') || '|||' || -- hash from: identifier/type/text (medreq_identifier_type_text)
          COALESCE(db.to_char_immutable(medreq_identifier_system), '#NULL#') || '|||' || -- hash from: identifier/system (medreq_identifier_system)
          COALESCE(db.to_char_immutable(medreq_identifier_value), '#NULL#') || '|||' || -- hash from: identifier/value (medreq_identifier_value)
          COALESCE(db.to_char_immutable(medreq_identifier_start), '#NULL#') || '|||' || -- hash from: identifier/start (medreq_identifier_start)
          COALESCE(db.to_char_immutable(medreq_identifier_end), '#NULL#') || '|||' || -- hash from: identifier/end (medreq_identifier_end)
          COALESCE(db.to_char_immutable(medreq_encounter_ref), '#NULL#') || '|||' || -- hash from: encounter/reference (medreq_encounter_ref)
          COALESCE(db.to_char_immutable(medreq_patient_ref), '#NULL#') || '|||' || -- hash from: subject/reference (medreq_patient_ref)
          COALESCE(db.to_char_immutable(medreq_medicationreference_ref), '#NULL#') || '|||' || -- hash from: medicationReference/reference (medreq_medicationreference_ref)
          COALESCE(db.to_char_immutable(medreq_status), '#NULL#') || '|||' || -- hash from: status (medreq_status)
          COALESCE(db.to_char_immutable(medreq_statusreason_system), '#NULL#') || '|||' || -- hash from: statusReason/coding/system (medreq_statusreason_system)
          COALESCE(db.to_char_immutable(medreq_statusreason_version), '#NULL#') || '|||' || -- hash from: statusReason/coding/version (medreq_statusreason_version)
          COALESCE(db.to_char_immutable(medreq_statusreason_code), '#NULL#') || '|||' || -- hash from: statusReason/coding/code (medreq_statusreason_code)
          COALESCE(db.to_char_immutable(medreq_statusreason_display), '#NULL#') || '|||' || -- hash from: statusReason/coding/display (medreq_statusreason_display)
          COALESCE(db.to_char_immutable(medreq_statusreason_text), '#NULL#') || '|||' || -- hash from: statusReason/text (medreq_statusreason_text)
          COALESCE(db.to_char_immutable(medreq_intend), '#NULL#') || '|||' || -- hash from: intend (medreq_intend)
          COALESCE(db.to_char_immutable(medreq_intent), '#NULL#') || '|||' || -- hash from: intent (medreq_intent)
          COALESCE(db.to_char_immutable(medreq_category_system), '#NULL#') || '|||' || -- hash from: category/coding/system (medreq_category_system)
          COALESCE(db.to_char_immutable(medreq_category_version), '#NULL#') || '|||' || -- hash from: category/coding/version (medreq_category_version)
          COALESCE(db.to_char_immutable(medreq_category_code), '#NULL#') || '|||' || -- hash from: category/coding/code (medreq_category_code)
          COALESCE(db.to_char_immutable(medreq_category_display), '#NULL#') || '|||' || -- hash from: category/coding/display (medreq_category_display)
          COALESCE(db.to_char_immutable(medreq_category_text), '#NULL#') || '|||' || -- hash from: category/text (medreq_category_text)
          COALESCE(db.to_char_immutable(medreq_priority), '#NULL#') || '|||' || -- hash from: priority (medreq_priority)
          COALESCE(db.to_char_immutable(medreq_reportedboolean), '#NULL#') || '|||' || -- hash from: reportedBoolean (medreq_reportedboolean)
          COALESCE(db.to_char_immutable(medreq_reportedreference_ref), '#NULL#') || '|||' || -- hash from: reportedReference/reference (medreq_reportedreference_ref)
          COALESCE(db.to_char_immutable(medreq_reportedreference_type), '#NULL#') || '|||' || -- hash from: reportedReference/type (medreq_reportedreference_type)
          COALESCE(db.to_char_immutable(medreq_reportedreference_identifier_use), '#NULL#') || '|||' || -- hash from: reportedReference/identifier/use (medreq_reportedreference_identifier_use)
          COALESCE(db.to_char_immutable(medreq_reportedreference_identifier_type_system), '#NULL#') || '|||' || -- hash from: reportedReference/identifier/type/coding/system (medreq_reportedreference_identifier_type_system)
          COALESCE(db.to_char_immutable(medreq_reportedreference_identifier_type_version), '#NULL#') || '|||' || -- hash from: reportedReference/identifier/type/coding/version (medreq_reportedreference_identifier_type_version)
          COALESCE(db.to_char_immutable(medreq_reportedreference_identifier_type_code), '#NULL#') || '|||' || -- hash from: reportedReference/identifier/type/coding/code (medreq_reportedreference_identifier_type_code)
          COALESCE(db.to_char_immutable(medreq_reportedreference_identifier_type_display), '#NULL#') || '|||' || -- hash from: reportedReference/identifier/type/coding/display (medreq_reportedreference_identifier_type_display)
          COALESCE(db.to_char_immutable(medreq_reportedreference_identifier_type_text), '#NULL#') || '|||' || -- hash from: reportedReference/identifier/type/text (medreq_reportedreference_identifier_type_text)
          COALESCE(db.to_char_immutable(medreq_reportedreference_identifier_system), '#NULL#') || '|||' || -- hash from: reportedReference/identifier/system (medreq_reportedreference_identifier_system)
          COALESCE(db.to_char_immutable(medreq_reportedreference_identifier_value), '#NULL#') || '|||' || -- hash from: reportedReference/identifier/value (medreq_reportedreference_identifier_value)
          COALESCE(db.to_char_immutable(medreq_reportedreference_display), '#NULL#') || '|||' || -- hash from: reportedReference/display (medreq_reportedreference_display)
          COALESCE(db.to_char_immutable(medreq_medicationcodeableconcept_system), '#NULL#') || '|||' || -- hash from: medicationCodeableConcept/coding/system (medreq_medicationcodeableconcept_system)
          COALESCE(db.to_char_immutable(medreq_medicationcodeableconcept_version), '#NULL#') || '|||' || -- hash from: medicationCodeableConcept/coding/version (medreq_medicationcodeableconcept_version)
          COALESCE(db.to_char_immutable(medreq_medicationcodeableconcept_code), '#NULL#') || '|||' || -- hash from: medicationCodeableConcept/coding/code (medreq_medicationcodeableconcept_code)
          COALESCE(db.to_char_immutable(medreq_medicationcodeableconcept_display), '#NULL#') || '|||' || -- hash from: medicationCodeableConcept/coding/display (medreq_medicationcodeableconcept_display)
          COALESCE(db.to_char_immutable(medreq_medicationcodeableconcept_text), '#NULL#') || '|||' || -- hash from: medicationCodeableConcept/text (medreq_medicationcodeableconcept_text)
          COALESCE(db.to_char_immutable(medreq_supportinginformation_ref), '#NULL#') || '|||' || -- hash from: supportingInformation/reference (medreq_supportinginformation_ref)
          COALESCE(db.to_char_immutable(medreq_supportinginformation_type), '#NULL#') || '|||' || -- hash from: supportingInformation/type (medreq_supportinginformation_type)
          COALESCE(db.to_char_immutable(medreq_supportinginformation_identifier_use), '#NULL#') || '|||' || -- hash from: supportingInformation/identifier/use (medreq_supportinginformation_identifier_use)
          COALESCE(db.to_char_immutable(medreq_supportinginformation_identifier_type_system), '#NULL#') || '|||' || -- hash from: supportingInformation/identifier/type/coding/system (medreq_supportinginformation_identifier_type_system)
          COALESCE(db.to_char_immutable(medreq_supportinginformation_identifier_type_version), '#NULL#') || '|||' || -- hash from: supportingInformation/identifier/type/coding/version (medreq_supportinginformation_identifier_type_version)
          COALESCE(db.to_char_immutable(medreq_supportinginformation_identifier_type_code), '#NULL#') || '|||' || -- hash from: supportingInformation/identifier/type/coding/code (medreq_supportinginformation_identifier_type_code)
          COALESCE(db.to_char_immutable(medreq_supportinginformation_identifier_type_display), '#NULL#') || '|||' || -- hash from: supportingInformation/identifier/type/coding/display (medreq_supportinginformation_identifier_type_display)
          COALESCE(db.to_char_immutable(medreq_supportinginformation_identifier_type_text), '#NULL#') || '|||' || -- hash from: supportingInformation/identifier/type/text (medreq_supportinginformation_identifier_type_text)
          COALESCE(db.to_char_immutable(medreq_supportinginformation_identifier_system), '#NULL#') || '|||' || -- hash from: supportingInformation/identifier/system (medreq_supportinginformation_identifier_system)
          COALESCE(db.to_char_immutable(medreq_supportinginformation_identifier_value), '#NULL#') || '|||' || -- hash from: supportingInformation/identifier/value (medreq_supportinginformation_identifier_value)
          COALESCE(db.to_char_immutable(medreq_supportinginformation_display), '#NULL#') || '|||' || -- hash from: supportingInformation/display (medreq_supportinginformation_display)
          COALESCE(db.to_char_immutable(medreq_authoredon), '#NULL#') || '|||' || -- hash from: authoredOn (medreq_authoredon)
          COALESCE(db.to_char_immutable(medreq_requester_ref), '#NULL#') || '|||' || -- hash from: requester/reference (medreq_requester_ref)
          COALESCE(db.to_char_immutable(medreq_requester_type), '#NULL#') || '|||' || -- hash from: requester/type (medreq_requester_type)
          COALESCE(db.to_char_immutable(medreq_requester_identifier_use), '#NULL#') || '|||' || -- hash from: requester/identifier/use (medreq_requester_identifier_use)
          COALESCE(db.to_char_immutable(medreq_requester_identifier_type_system), '#NULL#') || '|||' || -- hash from: requester/identifier/type/coding/system (medreq_requester_identifier_type_system)
          COALESCE(db.to_char_immutable(medreq_requester_identifier_type_version), '#NULL#') || '|||' || -- hash from: requester/identifier/type/coding/version (medreq_requester_identifier_type_version)
          COALESCE(db.to_char_immutable(medreq_requester_identifier_type_code), '#NULL#') || '|||' || -- hash from: requester/identifier/type/coding/code (medreq_requester_identifier_type_code)
          COALESCE(db.to_char_immutable(medreq_requester_identifier_type_display), '#NULL#') || '|||' || -- hash from: requester/identifier/type/coding/display (medreq_requester_identifier_type_display)
          COALESCE(db.to_char_immutable(medreq_requester_identifier_type_text), '#NULL#') || '|||' || -- hash from: requester/identifier/type/text (medreq_requester_identifier_type_text)
          COALESCE(db.to_char_immutable(medreq_requester_identifier_system), '#NULL#') || '|||' || -- hash from: requester/identifier/system (medreq_requester_identifier_system)
          COALESCE(db.to_char_immutable(medreq_requester_identifier_value), '#NULL#') || '|||' || -- hash from: requester/identifier/value (medreq_requester_identifier_value)
          COALESCE(db.to_char_immutable(medreq_requester_display), '#NULL#') || '|||' || -- hash from: requester/display (medreq_requester_display)
          COALESCE(db.to_char_immutable(medreq_reasoncode_system), '#NULL#') || '|||' || -- hash from: reasonCode/coding/system (medreq_reasoncode_system)
          COALESCE(db.to_char_immutable(medreq_reasoncode_version), '#NULL#') || '|||' || -- hash from: reasonCode/coding/version (medreq_reasoncode_version)
          COALESCE(db.to_char_immutable(medreq_reasoncode_code), '#NULL#') || '|||' || -- hash from: reasonCode/coding/code (medreq_reasoncode_code)
          COALESCE(db.to_char_immutable(medreq_reasoncode_display), '#NULL#') || '|||' || -- hash from: reasonCode/coding/display (medreq_reasoncode_display)
          COALESCE(db.to_char_immutable(medreq_reasoncode_text), '#NULL#') || '|||' || -- hash from: reasonCode/text (medreq_reasoncode_text)
          COALESCE(db.to_char_immutable(medreq_reasonreference_ref), '#NULL#') || '|||' || -- hash from: reasonReference/reference (medreq_reasonreference_ref)
          COALESCE(db.to_char_immutable(medreq_reasonreference_type), '#NULL#') || '|||' || -- hash from: reasonReference/type (medreq_reasonreference_type)
          COALESCE(db.to_char_immutable(medreq_reasonreference_identifier_use), '#NULL#') || '|||' || -- hash from: reasonReference/identifier/use (medreq_reasonreference_identifier_use)
          COALESCE(db.to_char_immutable(medreq_reasonreference_identifier_type_system), '#NULL#') || '|||' || -- hash from: reasonReference/identifier/type/coding/system (medreq_reasonreference_identifier_type_system)
          COALESCE(db.to_char_immutable(medreq_reasonreference_identifier_type_version), '#NULL#') || '|||' || -- hash from: reasonReference/identifier/type/coding/version (medreq_reasonreference_identifier_type_version)
          COALESCE(db.to_char_immutable(medreq_reasonreference_identifier_type_code), '#NULL#') || '|||' || -- hash from: reasonReference/identifier/type/coding/code (medreq_reasonreference_identifier_type_code)
          COALESCE(db.to_char_immutable(medreq_reasonreference_identifier_type_display), '#NULL#') || '|||' || -- hash from: reasonReference/identifier/type/coding/display (medreq_reasonreference_identifier_type_display)
          COALESCE(db.to_char_immutable(medreq_reasonreference_identifier_type_text), '#NULL#') || '|||' || -- hash from: reasonReference/identifier/type/text (medreq_reasonreference_identifier_type_text)
          COALESCE(db.to_char_immutable(medreq_reasonreference_identifier_system), '#NULL#') || '|||' || -- hash from: reasonReference/identifier/system (medreq_reasonreference_identifier_system)
          COALESCE(db.to_char_immutable(medreq_reasonreference_identifier_value), '#NULL#') || '|||' || -- hash from: reasonReference/identifier/value (medreq_reasonreference_identifier_value)
          COALESCE(db.to_char_immutable(medreq_reasonreference_display), '#NULL#') || '|||' || -- hash from: reasonReference/display (medreq_reasonreference_display)
          COALESCE(db.to_char_immutable(medreq_basedon_ref), '#NULL#') || '|||' || -- hash from: basedOn/reference (medreq_basedon_ref)
          COALESCE(db.to_char_immutable(medreq_basedon_type), '#NULL#') || '|||' || -- hash from: basedOn/type (medreq_basedon_type)
          COALESCE(db.to_char_immutable(medreq_basedon_identifier_use), '#NULL#') || '|||' || -- hash from: basedOn/identifier/use (medreq_basedon_identifier_use)
          COALESCE(db.to_char_immutable(medreq_basedon_identifier_type_system), '#NULL#') || '|||' || -- hash from: basedOn/identifier/type/coding/system (medreq_basedon_identifier_type_system)
          COALESCE(db.to_char_immutable(medreq_basedon_identifier_type_version), '#NULL#') || '|||' || -- hash from: basedOn/identifier/type/coding/version (medreq_basedon_identifier_type_version)
          COALESCE(db.to_char_immutable(medreq_basedon_identifier_type_code), '#NULL#') || '|||' || -- hash from: basedOn/identifier/type/coding/code (medreq_basedon_identifier_type_code)
          COALESCE(db.to_char_immutable(medreq_basedon_identifier_type_display), '#NULL#') || '|||' || -- hash from: basedOn/identifier/type/coding/display (medreq_basedon_identifier_type_display)
          COALESCE(db.to_char_immutable(medreq_basedon_identifier_type_text), '#NULL#') || '|||' || -- hash from: basedOn/identifier/type/text (medreq_basedon_identifier_type_text)
          COALESCE(db.to_char_immutable(medreq_basedon_identifier_system), '#NULL#') || '|||' || -- hash from: basedOn/identifier/system (medreq_basedon_identifier_system)
          COALESCE(db.to_char_immutable(medreq_basedon_identifier_value), '#NULL#') || '|||' || -- hash from: basedOn/identifier/value (medreq_basedon_identifier_value)
          COALESCE(db.to_char_immutable(medreq_basedon_display), '#NULL#') || '|||' || -- hash from: basedOn/display (medreq_basedon_display)
          COALESCE(db.to_char_immutable(medreq_note_authorstring), '#NULL#') || '|||' || -- hash from: note/authorString (medreq_note_authorstring)
          COALESCE(db.to_char_immutable(medreq_note_authorreference_ref), '#NULL#') || '|||' || -- hash from: note/authorReference/reference (medreq_note_authorreference_ref)
          COALESCE(db.to_char_immutable(medreq_note_authorreference_type), '#NULL#') || '|||' || -- hash from: note/authorReference/type (medreq_note_authorreference_type)
          COALESCE(db.to_char_immutable(medreq_note_authorreference_identifier_use), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/use (medreq_note_authorreference_identifier_use)
          COALESCE(db.to_char_immutable(medreq_note_authorreference_identifier_type_system), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/type/coding/system (medreq_note_authorreference_identifier_type_system)
          COALESCE(db.to_char_immutable(medreq_note_authorreference_identifier_type_version), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/type/coding/version (medreq_note_authorreference_identifier_type_version)
          COALESCE(db.to_char_immutable(medreq_note_authorreference_identifier_type_code), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/type/coding/code (medreq_note_authorreference_identifier_type_code)
          COALESCE(db.to_char_immutable(medreq_note_authorreference_identifier_type_display), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/type/coding/display (medreq_note_authorreference_identifier_type_display)
          COALESCE(db.to_char_immutable(medreq_note_authorreference_identifier_type_text), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/type/text (medreq_note_authorreference_identifier_type_text)
          COALESCE(db.to_char_immutable(medreq_note_authorreference_identifier_system), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/system (medreq_note_authorreference_identifier_system)
          COALESCE(db.to_char_immutable(medreq_note_authorreference_identifier_value), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/value (medreq_note_authorreference_identifier_value)
          COALESCE(db.to_char_immutable(medreq_note_authorreference_display), '#NULL#') || '|||' || -- hash from: note/authorReference/display (medreq_note_authorreference_display)
          COALESCE(db.to_char_immutable(medreq_note_time), '#NULL#') || '|||' || -- hash from: note/time (medreq_note_time)
          COALESCE(db.to_char_immutable(medreq_note_text), '#NULL#') || '|||' || -- hash from: note/text (medreq_note_text)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_sequence), '#NULL#') || '|||' || -- hash from: dosageInstruction/sequence (medreq_doseinstruc_sequence)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_text), '#NULL#') || '|||' || -- hash from: dosageInstruction/text (medreq_doseinstruc_text)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_additionalinstruction_system), '#NULL#') || '|||' || -- hash from: dosageInstruction/additionalInstruction/coding/system (medreq_doseinstruc_additionalinstruction_system)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_additionalinstruction_version), '#NULL#') || '|||' || -- hash from: dosageInstruction/additionalInstruction/coding/version (medreq_doseinstruc_additionalinstruction_version)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_additionalinstruction_code), '#NULL#') || '|||' || -- hash from: dosageInstruction/additionalInstruction/coding/code (medreq_doseinstruc_additionalinstruction_code)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_additionalinstruction_display), '#NULL#') || '|||' || -- hash from: dosageInstruction/additionalInstruction/coding/display (medreq_doseinstruc_additionalinstruction_display)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_additionalinstruction_text), '#NULL#') || '|||' || -- hash from: dosageInstruction/additionalInstruction/text (medreq_doseinstruc_additionalinstruction_text)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_patientinstruction), '#NULL#') || '|||' || -- hash from: dosageInstruction/patientInstruction (medreq_doseinstruc_patientinstruction)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_event), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/event (medreq_doseinstruc_timing_event)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_boundsduration_value), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/repeat/boundsDuration/value (medreq_doseinstruc_timing_repeat_boundsduration_value)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_boundsduration_comparator), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/repeat/boundsDuration/comparator (medreq_doseinstruc_timing_repeat_boundsduration_comparator)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_boundsduration_unit), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/repeat/boundsDuration/unit (medreq_doseinstruc_timing_repeat_boundsduration_unit)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_boundsduration_system), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/repeat/boundsDuration/system (medreq_doseinstruc_timing_repeat_boundsduration_system)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_boundsduration_code), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/repeat/boundsDuration/code (medreq_doseinstruc_timing_repeat_boundsduration_code)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_boundsrange_low_value), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/repeat/boundsRange/low/value (medreq_doseinstruc_timing_repeat_boundsrange_low_value)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_boundsrange_low_unit), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/repeat/boundsRange/low/unit (medreq_doseinstruc_timing_repeat_boundsrange_low_unit)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_boundsrange_low_system), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/repeat/boundsRange/low/system (medreq_doseinstruc_timing_repeat_boundsrange_low_system)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_boundsrange_low_code), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/repeat/boundsRange/low/code (medreq_doseinstruc_timing_repeat_boundsrange_low_code)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_boundsrange_high_value), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/repeat/boundsRange/high/value (medreq_doseinstruc_timing_repeat_boundsrange_high_value)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_boundsrange_high_unit), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/repeat/boundsRange/high/unit (medreq_doseinstruc_timing_repeat_boundsrange_high_unit)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_boundsrange_high_system), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/repeat/boundsRange/high/system (medreq_doseinstruc_timing_repeat_boundsrange_high_system)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_boundsrange_high_code), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/repeat/boundsRange/high/code (medreq_doseinstruc_timing_repeat_boundsrange_high_code)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_boundsperiod_start), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/repeat/boundsPeriod/start (medreq_doseinstruc_timing_repeat_boundsperiod_start)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_boundsperiod_end), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/repeat/boundsPeriod/end (medreq_doseinstruc_timing_repeat_boundsperiod_end)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_count), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/repeat/count (medreq_doseinstruc_timing_repeat_count)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_countmax), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/repeat/countMax (medreq_doseinstruc_timing_repeat_countmax)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_duration), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/repeat/duration (medreq_doseinstruc_timing_repeat_duration)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_durationmax), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/repeat/durationMax (medreq_doseinstruc_timing_repeat_durationmax)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_durationunit), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/repeat/durationUnit (medreq_doseinstruc_timing_repeat_durationunit)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_frequency), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/repeat/frequency (medreq_doseinstruc_timing_repeat_frequency)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_frequencymax), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/repeat/frequencyMax (medreq_doseinstruc_timing_repeat_frequencymax)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_period), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/repeat/period (medreq_doseinstruc_timing_repeat_period)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_periodmax), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/repeat/periodMax (medreq_doseinstruc_timing_repeat_periodmax)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_periodunit), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/repeat/periodUnit (medreq_doseinstruc_timing_repeat_periodunit)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_dayofweek), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/repeat/dayOfWeek (medreq_doseinstruc_timing_repeat_dayofweek)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_timeofday), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/repeat/timeOfDay (medreq_doseinstruc_timing_repeat_timeofday)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_when), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/repeat/when (medreq_doseinstruc_timing_repeat_when)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_offset), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/repeat/offset (medreq_doseinstruc_timing_repeat_offset)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_code_system), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/code/coding/system (medreq_doseinstruc_timing_code_system)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_code_version), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/code/coding/version (medreq_doseinstruc_timing_code_version)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_code_code), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/code/coding/code (medreq_doseinstruc_timing_code_code)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_code_display), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/code/coding/display (medreq_doseinstruc_timing_code_display)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_code_text), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/code/text (medreq_doseinstruc_timing_code_text)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_asneededboolean), '#NULL#') || '|||' || -- hash from: dosageInstruction/asNeededBoolean (medreq_doseinstruc_asneededboolean)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_asneededcodeableconcept_system), '#NULL#') || '|||' || -- hash from: dosageInstruction/asNeededCodeableConcept/coding/system (medreq_doseinstruc_asneededcodeableconcept_system)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_asneededcodeableconcept_version), '#NULL#') || '|||' || -- hash from: dosageInstruction/asNeededCodeableConcept/coding/version (medreq_doseinstruc_asneededcodeableconcept_version)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_asneededcodeableconcept_code), '#NULL#') || '|||' || -- hash from: dosageInstruction/asNeededCodeableConcept/coding/code (medreq_doseinstruc_asneededcodeableconcept_code)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_asneededcodeableconcept_display), '#NULL#') || '|||' || -- hash from: dosageInstruction/asNeededCodeableConcept/coding/display (medreq_doseinstruc_asneededcodeableconcept_display)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_asneededcodeableconcept_text), '#NULL#') || '|||' || -- hash from: dosageInstruction/asNeededCodeableConcept/text (medreq_doseinstruc_asneededcodeableconcept_text)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_site_system), '#NULL#') || '|||' || -- hash from: dosageInstruction/site/coding/system (medreq_doseinstruc_site_system)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_site_version), '#NULL#') || '|||' || -- hash from: dosageInstruction/site/coding/version (medreq_doseinstruc_site_version)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_site_code), '#NULL#') || '|||' || -- hash from: dosageInstruction/site/coding/code (medreq_doseinstruc_site_code)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_site_display), '#NULL#') || '|||' || -- hash from: dosageInstruction/site/coding/display (medreq_doseinstruc_site_display)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_site_text), '#NULL#') || '|||' || -- hash from: dosageInstruction/site/text (medreq_doseinstruc_site_text)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_route_system), '#NULL#') || '|||' || -- hash from: dosageInstruction/route/coding/system (medreq_doseinstruc_route_system)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_route_version), '#NULL#') || '|||' || -- hash from: dosageInstruction/route/coding/version (medreq_doseinstruc_route_version)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_route_code), '#NULL#') || '|||' || -- hash from: dosageInstruction/route/coding/code (medreq_doseinstruc_route_code)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_route_display), '#NULL#') || '|||' || -- hash from: dosageInstruction/route/coding/display (medreq_doseinstruc_route_display)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_route_text), '#NULL#') || '|||' || -- hash from: dosageInstruction/route/text (medreq_doseinstruc_route_text)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_method_system), '#NULL#') || '|||' || -- hash from: dosageInstruction/method/coding/system (medreq_doseinstruc_method_system)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_method_version), '#NULL#') || '|||' || -- hash from: dosageInstruction/method/coding/version (medreq_doseinstruc_method_version)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_method_code), '#NULL#') || '|||' || -- hash from: dosageInstruction/method/coding/code (medreq_doseinstruc_method_code)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_method_display), '#NULL#') || '|||' || -- hash from: dosageInstruction/method/coding/display (medreq_doseinstruc_method_display)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_method_text), '#NULL#') || '|||' || -- hash from: dosageInstruction/method/text (medreq_doseinstruc_method_text)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_type_system), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/type/coding/system (medreq_doseinstruc_doseandrate_type_system)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_type_version), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/type/coding/version (medreq_doseinstruc_doseandrate_type_version)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_type_code), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/type/coding/code (medreq_doseinstruc_doseandrate_type_code)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_type_display), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/type/coding/display (medreq_doseinstruc_doseandrate_type_display)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_type_text), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/type/text (medreq_doseinstruc_doseandrate_type_text)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_doserange_low_value), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/doseRange/low/value (medreq_doseinstruc_doseandrate_doserange_low_value)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_doserange_low_unit), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/doseRange/low/unit (medreq_doseinstruc_doseandrate_doserange_low_unit)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_doserange_low_system), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/doseRange/low/system (medreq_doseinstruc_doseandrate_doserange_low_system)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_doserange_low_code), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/doseRange/low/code (medreq_doseinstruc_doseandrate_doserange_low_code)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_doserange_high_value), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/doseRange/high/value (medreq_doseinstruc_doseandrate_doserange_high_value)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_doserange_high_unit), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/doseRange/high/unit (medreq_doseinstruc_doseandrate_doserange_high_unit)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_doserange_high_system), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/doseRange/high/system (medreq_doseinstruc_doseandrate_doserange_high_system)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_doserange_high_code), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/doseRange/high/code (medreq_doseinstruc_doseandrate_doserange_high_code)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_dosequantity_value), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/doseQuantity/value (medreq_doseinstruc_doseandrate_dosequantity_value)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_dosequantity_comparator), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/doseQuantity/comparator (medreq_doseinstruc_doseandrate_dosequantity_comparator)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_dosequantity_unit), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/doseQuantity/unit (medreq_doseinstruc_doseandrate_dosequantity_unit)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_dosequantity_system), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/doseQuantity/system (medreq_doseinstruc_doseandrate_dosequantity_system)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_dosequantity_code), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/doseQuantity/code (medreq_doseinstruc_doseandrate_dosequantity_code)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_rateratio_numerator_value), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/rateRatio/numerator/value (medreq_doseinstruc_doseandrate_rateratio_numerator_value)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_rateratio_numerator_comparator), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/rateRatio/numerator/comparator (medreq_doseinstruc_doseandrate_rateratio_numerator_comparator)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_rateratio_numerator_unit), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/rateRatio/numerator/unit (medreq_doseinstruc_doseandrate_rateratio_numerator_unit)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_rateratio_numerator_system), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/rateRatio/numerator/system (medreq_doseinstruc_doseandrate_rateratio_numerator_system)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_rateratio_numerator_code), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/rateRatio/numerator/code (medreq_doseinstruc_doseandrate_rateratio_numerator_code)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_rateratio_denominator_value), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/rateRatio/denominator/value (medreq_doseinstruc_doseandrate_rateratio_denominator_value)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_rateratio_denominator_comparator), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/rateRatio/denominator/comparator (medreq_doseinstruc_doseandrate_rateratio_denominator_comparator)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_rateratio_denominator_unit), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/rateRatio/denominator/unit (medreq_doseinstruc_doseandrate_rateratio_denominator_unit)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_rateratio_denominator_system), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/rateRatio/denominator/system (medreq_doseinstruc_doseandrate_rateratio_denominator_system)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_rateratio_denominator_code), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/rateRatio/denominator/code (medreq_doseinstruc_doseandrate_rateratio_denominator_code)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_raterange_low_value), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/rateRange/low/value (medreq_doseinstruc_doseandrate_raterange_low_value)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_raterange_low_unit), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/rateRange/low/unit (medreq_doseinstruc_doseandrate_raterange_low_unit)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_raterange_low_system), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/rateRange/low/system (medreq_doseinstruc_doseandrate_raterange_low_system)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_raterange_low_code), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/rateRange/low/code (medreq_doseinstruc_doseandrate_raterange_low_code)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_raterange_high_value), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/rateRange/high/value (medreq_doseinstruc_doseandrate_raterange_high_value)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_raterange_high_unit), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/rateRange/high/unit (medreq_doseinstruc_doseandrate_raterange_high_unit)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_raterange_high_system), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/rateRange/high/system (medreq_doseinstruc_doseandrate_raterange_high_system)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_raterange_high_code), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/rateRange/high/code (medreq_doseinstruc_doseandrate_raterange_high_code)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_ratequantity_value), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/rateQuantity/value (medreq_doseinstruc_doseandrate_ratequantity_value)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_ratequantity_unit), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/rateQuantity/unit (medreq_doseinstruc_doseandrate_ratequantity_unit)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_ratequantity_system), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/rateQuantity/system (medreq_doseinstruc_doseandrate_ratequantity_system)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_ratequantity_code), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/rateQuantity/code (medreq_doseinstruc_doseandrate_ratequantity_code)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_maxdoseperperiod_numerator_value), '#NULL#') || '|||' || -- hash from: dosageInstruction/maxDosePerPeriod/numerator/value (medreq_doseinstruc_maxdoseperperiod_numerator_value)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_maxdoseperperiod_numerator_comparator), '#NULL#') || '|||' || -- hash from: dosageInstruction/maxDosePerPeriod/numerator/comparator (medreq_doseinstruc_maxdoseperperiod_numerator_comparator)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_maxdoseperperiod_numerator_unit), '#NULL#') || '|||' || -- hash from: dosageInstruction/maxDosePerPeriod/numerator/unit (medreq_doseinstruc_maxdoseperperiod_numerator_unit)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_maxdoseperperiod_numerator_system), '#NULL#') || '|||' || -- hash from: dosageInstruction/maxDosePerPeriod/numerator/system (medreq_doseinstruc_maxdoseperperiod_numerator_system)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_maxdoseperperiod_numerator_code), '#NULL#') || '|||' || -- hash from: dosageInstruction/maxDosePerPeriod/numerator/code (medreq_doseinstruc_maxdoseperperiod_numerator_code)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_maxdoseperperiod_denominator_value), '#NULL#') || '|||' || -- hash from: dosageInstruction/maxDosePerPeriod/denominator/value (medreq_doseinstruc_maxdoseperperiod_denominator_value)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_maxdoseperperiod_denominator_comparator), '#NULL#') || '|||' || -- hash from: dosageInstruction/maxDosePerPeriod/denominator/comparator (medreq_doseinstruc_maxdoseperperiod_denominator_comparator)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_maxdoseperperiod_denominator_unit), '#NULL#') || '|||' || -- hash from: dosageInstruction/maxDosePerPeriod/denominator/unit (medreq_doseinstruc_maxdoseperperiod_denominator_unit)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_maxdoseperperiod_denominator_system), '#NULL#') || '|||' || -- hash from: dosageInstruction/maxDosePerPeriod/denominator/system (medreq_doseinstruc_maxdoseperperiod_denominator_system)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_maxdoseperperiod_denominator_code), '#NULL#') || '|||' || -- hash from: dosageInstruction/maxDosePerPeriod/denominator/code (medreq_doseinstruc_maxdoseperperiod_denominator_code)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_maxdoseperadministration_value), '#NULL#') || '|||' || -- hash from: dosageInstruction/maxDosePerAdministration/value (medreq_doseinstruc_maxdoseperadministration_value)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_maxdoseperadministration_unit), '#NULL#') || '|||' || -- hash from: dosageInstruction/maxDosePerAdministration/unit (medreq_doseinstruc_maxdoseperadministration_unit)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_maxdoseperadministration_system), '#NULL#') || '|||' || -- hash from: dosageInstruction/maxDosePerAdministration/system (medreq_doseinstruc_maxdoseperadministration_system)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_maxdoseperadministration_code), '#NULL#') || '|||' || -- hash from: dosageInstruction/maxDosePerAdministration/code (medreq_doseinstruc_maxdoseperadministration_code)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_maxdoseperlifetime_value), '#NULL#') || '|||' || -- hash from: dosageInstruction/maxDosePerLifetime/value (medreq_doseinstruc_maxdoseperlifetime_value)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_maxdoseperlifetime_unit), '#NULL#') || '|||' || -- hash from: dosageInstruction/maxDosePerLifetime/unit (medreq_doseinstruc_maxdoseperlifetime_unit)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_maxdoseperlifetime_system), '#NULL#') || '|||' || -- hash from: dosageInstruction/maxDosePerLifetime/system (medreq_doseinstruc_maxdoseperlifetime_system)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_maxdoseperlifetime_code), '#NULL#') || '|||' || -- hash from: dosageInstruction/maxDosePerLifetime/code (medreq_doseinstruc_maxdoseperlifetime_code)
          COALESCE(db.to_char_immutable(medreq_substitution_reason_system), '#NULL#') || '|||' || -- hash from: substitution/reason/coding/system (medreq_substitution_reason_system)
          COALESCE(db.to_char_immutable(medreq_substitution_reason_version), '#NULL#') || '|||' || -- hash from: substitution/reason/coding/version (medreq_substitution_reason_version)
          COALESCE(db.to_char_immutable(medreq_substitution_reason_code), '#NULL#') || '|||' || -- hash from: substitution/reason/coding/code (medreq_substitution_reason_code)
          COALESCE(db.to_char_immutable(medreq_substitution_reason_display), '#NULL#') || '|||' || -- hash from: substitution/reason/coding/display (medreq_substitution_reason_display)
          COALESCE(db.to_char_immutable(medreq_substitution_reason_text), '#NULL#') || '|||' || -- hash from: substitution/reason/text (medreq_substitution_reason_text)
                 '#'
               )
            ) STORED; -- Column for hash value for comparing FHIR data - collion check in second step hash_index_col
            END IF; -- currend hash definition
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationrequest'
            AND column_name = 'hash_index_col'
        ) THEN
            -- Creating the hash column
            ALTER TABLE cds2db_in.medicationrequest ADD
            hash_index_col TEXT GENERATED ALWAYS AS (
            md5(
	         COALESCE(db.to_char_immutable(medreq_id), '#NULL#') || '|||' || -- hash from: id (medreq_id)
          COALESCE(db.to_char_immutable(medreq_identifier_use), '#NULL#') || '|||' || -- hash from: identifier/use (medreq_identifier_use)
          COALESCE(db.to_char_immutable(medreq_identifier_type_system), '#NULL#') || '|||' || -- hash from: identifier/type/coding/system (medreq_identifier_type_system)
          COALESCE(db.to_char_immutable(medreq_identifier_type_version), '#NULL#') || '|||' || -- hash from: identifier/type/coding/version (medreq_identifier_type_version)
          COALESCE(db.to_char_immutable(medreq_identifier_type_code), '#NULL#') || '|||' || -- hash from: identifier/type/coding/code (medreq_identifier_type_code)
          COALESCE(db.to_char_immutable(medreq_identifier_type_display), '#NULL#') || '|||' || -- hash from: identifier/type/coding/display (medreq_identifier_type_display)
          COALESCE(db.to_char_immutable(medreq_identifier_type_text), '#NULL#') || '|||' || -- hash from: identifier/type/text (medreq_identifier_type_text)
          COALESCE(db.to_char_immutable(medreq_identifier_system), '#NULL#') || '|||' || -- hash from: identifier/system (medreq_identifier_system)
          COALESCE(db.to_char_immutable(medreq_identifier_value), '#NULL#') || '|||' || -- hash from: identifier/value (medreq_identifier_value)
          COALESCE(db.to_char_immutable(medreq_identifier_start), '#NULL#') || '|||' || -- hash from: identifier/start (medreq_identifier_start)
          COALESCE(db.to_char_immutable(medreq_identifier_end), '#NULL#') || '|||' || -- hash from: identifier/end (medreq_identifier_end)
          COALESCE(db.to_char_immutable(medreq_encounter_ref), '#NULL#') || '|||' || -- hash from: encounter/reference (medreq_encounter_ref)
          COALESCE(db.to_char_immutable(medreq_patient_ref), '#NULL#') || '|||' || -- hash from: subject/reference (medreq_patient_ref)
          COALESCE(db.to_char_immutable(medreq_medicationreference_ref), '#NULL#') || '|||' || -- hash from: medicationReference/reference (medreq_medicationreference_ref)
          COALESCE(db.to_char_immutable(medreq_status), '#NULL#') || '|||' || -- hash from: status (medreq_status)
          COALESCE(db.to_char_immutable(medreq_statusreason_system), '#NULL#') || '|||' || -- hash from: statusReason/coding/system (medreq_statusreason_system)
          COALESCE(db.to_char_immutable(medreq_statusreason_version), '#NULL#') || '|||' || -- hash from: statusReason/coding/version (medreq_statusreason_version)
          COALESCE(db.to_char_immutable(medreq_statusreason_code), '#NULL#') || '|||' || -- hash from: statusReason/coding/code (medreq_statusreason_code)
          COALESCE(db.to_char_immutable(medreq_statusreason_display), '#NULL#') || '|||' || -- hash from: statusReason/coding/display (medreq_statusreason_display)
          COALESCE(db.to_char_immutable(medreq_statusreason_text), '#NULL#') || '|||' || -- hash from: statusReason/text (medreq_statusreason_text)
          COALESCE(db.to_char_immutable(medreq_intend), '#NULL#') || '|||' || -- hash from: intend (medreq_intend)
          COALESCE(db.to_char_immutable(medreq_intent), '#NULL#') || '|||' || -- hash from: intent (medreq_intent)
          COALESCE(db.to_char_immutable(medreq_category_system), '#NULL#') || '|||' || -- hash from: category/coding/system (medreq_category_system)
          COALESCE(db.to_char_immutable(medreq_category_version), '#NULL#') || '|||' || -- hash from: category/coding/version (medreq_category_version)
          COALESCE(db.to_char_immutable(medreq_category_code), '#NULL#') || '|||' || -- hash from: category/coding/code (medreq_category_code)
          COALESCE(db.to_char_immutable(medreq_category_display), '#NULL#') || '|||' || -- hash from: category/coding/display (medreq_category_display)
          COALESCE(db.to_char_immutable(medreq_category_text), '#NULL#') || '|||' || -- hash from: category/text (medreq_category_text)
          COALESCE(db.to_char_immutable(medreq_priority), '#NULL#') || '|||' || -- hash from: priority (medreq_priority)
          COALESCE(db.to_char_immutable(medreq_reportedboolean), '#NULL#') || '|||' || -- hash from: reportedBoolean (medreq_reportedboolean)
          COALESCE(db.to_char_immutable(medreq_reportedreference_ref), '#NULL#') || '|||' || -- hash from: reportedReference/reference (medreq_reportedreference_ref)
          COALESCE(db.to_char_immutable(medreq_reportedreference_type), '#NULL#') || '|||' || -- hash from: reportedReference/type (medreq_reportedreference_type)
          COALESCE(db.to_char_immutable(medreq_reportedreference_identifier_use), '#NULL#') || '|||' || -- hash from: reportedReference/identifier/use (medreq_reportedreference_identifier_use)
          COALESCE(db.to_char_immutable(medreq_reportedreference_identifier_type_system), '#NULL#') || '|||' || -- hash from: reportedReference/identifier/type/coding/system (medreq_reportedreference_identifier_type_system)
          COALESCE(db.to_char_immutable(medreq_reportedreference_identifier_type_version), '#NULL#') || '|||' || -- hash from: reportedReference/identifier/type/coding/version (medreq_reportedreference_identifier_type_version)
          COALESCE(db.to_char_immutable(medreq_reportedreference_identifier_type_code), '#NULL#') || '|||' || -- hash from: reportedReference/identifier/type/coding/code (medreq_reportedreference_identifier_type_code)
          COALESCE(db.to_char_immutable(medreq_reportedreference_identifier_type_display), '#NULL#') || '|||' || -- hash from: reportedReference/identifier/type/coding/display (medreq_reportedreference_identifier_type_display)
          COALESCE(db.to_char_immutable(medreq_reportedreference_identifier_type_text), '#NULL#') || '|||' || -- hash from: reportedReference/identifier/type/text (medreq_reportedreference_identifier_type_text)
          COALESCE(db.to_char_immutable(medreq_reportedreference_identifier_system), '#NULL#') || '|||' || -- hash from: reportedReference/identifier/system (medreq_reportedreference_identifier_system)
          COALESCE(db.to_char_immutable(medreq_reportedreference_identifier_value), '#NULL#') || '|||' || -- hash from: reportedReference/identifier/value (medreq_reportedreference_identifier_value)
          COALESCE(db.to_char_immutable(medreq_reportedreference_display), '#NULL#') || '|||' || -- hash from: reportedReference/display (medreq_reportedreference_display)
          COALESCE(db.to_char_immutable(medreq_medicationcodeableconcept_system), '#NULL#') || '|||' || -- hash from: medicationCodeableConcept/coding/system (medreq_medicationcodeableconcept_system)
          COALESCE(db.to_char_immutable(medreq_medicationcodeableconcept_version), '#NULL#') || '|||' || -- hash from: medicationCodeableConcept/coding/version (medreq_medicationcodeableconcept_version)
          COALESCE(db.to_char_immutable(medreq_medicationcodeableconcept_code), '#NULL#') || '|||' || -- hash from: medicationCodeableConcept/coding/code (medreq_medicationcodeableconcept_code)
          COALESCE(db.to_char_immutable(medreq_medicationcodeableconcept_display), '#NULL#') || '|||' || -- hash from: medicationCodeableConcept/coding/display (medreq_medicationcodeableconcept_display)
          COALESCE(db.to_char_immutable(medreq_medicationcodeableconcept_text), '#NULL#') || '|||' || -- hash from: medicationCodeableConcept/text (medreq_medicationcodeableconcept_text)
          COALESCE(db.to_char_immutable(medreq_supportinginformation_ref), '#NULL#') || '|||' || -- hash from: supportingInformation/reference (medreq_supportinginformation_ref)
          COALESCE(db.to_char_immutable(medreq_supportinginformation_type), '#NULL#') || '|||' || -- hash from: supportingInformation/type (medreq_supportinginformation_type)
          COALESCE(db.to_char_immutable(medreq_supportinginformation_identifier_use), '#NULL#') || '|||' || -- hash from: supportingInformation/identifier/use (medreq_supportinginformation_identifier_use)
          COALESCE(db.to_char_immutable(medreq_supportinginformation_identifier_type_system), '#NULL#') || '|||' || -- hash from: supportingInformation/identifier/type/coding/system (medreq_supportinginformation_identifier_type_system)
          COALESCE(db.to_char_immutable(medreq_supportinginformation_identifier_type_version), '#NULL#') || '|||' || -- hash from: supportingInformation/identifier/type/coding/version (medreq_supportinginformation_identifier_type_version)
          COALESCE(db.to_char_immutable(medreq_supportinginformation_identifier_type_code), '#NULL#') || '|||' || -- hash from: supportingInformation/identifier/type/coding/code (medreq_supportinginformation_identifier_type_code)
          COALESCE(db.to_char_immutable(medreq_supportinginformation_identifier_type_display), '#NULL#') || '|||' || -- hash from: supportingInformation/identifier/type/coding/display (medreq_supportinginformation_identifier_type_display)
          COALESCE(db.to_char_immutable(medreq_supportinginformation_identifier_type_text), '#NULL#') || '|||' || -- hash from: supportingInformation/identifier/type/text (medreq_supportinginformation_identifier_type_text)
          COALESCE(db.to_char_immutable(medreq_supportinginformation_identifier_system), '#NULL#') || '|||' || -- hash from: supportingInformation/identifier/system (medreq_supportinginformation_identifier_system)
          COALESCE(db.to_char_immutable(medreq_supportinginformation_identifier_value), '#NULL#') || '|||' || -- hash from: supportingInformation/identifier/value (medreq_supportinginformation_identifier_value)
          COALESCE(db.to_char_immutable(medreq_supportinginformation_display), '#NULL#') || '|||' || -- hash from: supportingInformation/display (medreq_supportinginformation_display)
          COALESCE(db.to_char_immutable(medreq_authoredon), '#NULL#') || '|||' || -- hash from: authoredOn (medreq_authoredon)
          COALESCE(db.to_char_immutable(medreq_requester_ref), '#NULL#') || '|||' || -- hash from: requester/reference (medreq_requester_ref)
          COALESCE(db.to_char_immutable(medreq_requester_type), '#NULL#') || '|||' || -- hash from: requester/type (medreq_requester_type)
          COALESCE(db.to_char_immutable(medreq_requester_identifier_use), '#NULL#') || '|||' || -- hash from: requester/identifier/use (medreq_requester_identifier_use)
          COALESCE(db.to_char_immutable(medreq_requester_identifier_type_system), '#NULL#') || '|||' || -- hash from: requester/identifier/type/coding/system (medreq_requester_identifier_type_system)
          COALESCE(db.to_char_immutable(medreq_requester_identifier_type_version), '#NULL#') || '|||' || -- hash from: requester/identifier/type/coding/version (medreq_requester_identifier_type_version)
          COALESCE(db.to_char_immutable(medreq_requester_identifier_type_code), '#NULL#') || '|||' || -- hash from: requester/identifier/type/coding/code (medreq_requester_identifier_type_code)
          COALESCE(db.to_char_immutable(medreq_requester_identifier_type_display), '#NULL#') || '|||' || -- hash from: requester/identifier/type/coding/display (medreq_requester_identifier_type_display)
          COALESCE(db.to_char_immutable(medreq_requester_identifier_type_text), '#NULL#') || '|||' || -- hash from: requester/identifier/type/text (medreq_requester_identifier_type_text)
          COALESCE(db.to_char_immutable(medreq_requester_identifier_system), '#NULL#') || '|||' || -- hash from: requester/identifier/system (medreq_requester_identifier_system)
          COALESCE(db.to_char_immutable(medreq_requester_identifier_value), '#NULL#') || '|||' || -- hash from: requester/identifier/value (medreq_requester_identifier_value)
          COALESCE(db.to_char_immutable(medreq_requester_display), '#NULL#') || '|||' || -- hash from: requester/display (medreq_requester_display)
          COALESCE(db.to_char_immutable(medreq_reasoncode_system), '#NULL#') || '|||' || -- hash from: reasonCode/coding/system (medreq_reasoncode_system)
          COALESCE(db.to_char_immutable(medreq_reasoncode_version), '#NULL#') || '|||' || -- hash from: reasonCode/coding/version (medreq_reasoncode_version)
          COALESCE(db.to_char_immutable(medreq_reasoncode_code), '#NULL#') || '|||' || -- hash from: reasonCode/coding/code (medreq_reasoncode_code)
          COALESCE(db.to_char_immutable(medreq_reasoncode_display), '#NULL#') || '|||' || -- hash from: reasonCode/coding/display (medreq_reasoncode_display)
          COALESCE(db.to_char_immutable(medreq_reasoncode_text), '#NULL#') || '|||' || -- hash from: reasonCode/text (medreq_reasoncode_text)
          COALESCE(db.to_char_immutable(medreq_reasonreference_ref), '#NULL#') || '|||' || -- hash from: reasonReference/reference (medreq_reasonreference_ref)
          COALESCE(db.to_char_immutable(medreq_reasonreference_type), '#NULL#') || '|||' || -- hash from: reasonReference/type (medreq_reasonreference_type)
          COALESCE(db.to_char_immutable(medreq_reasonreference_identifier_use), '#NULL#') || '|||' || -- hash from: reasonReference/identifier/use (medreq_reasonreference_identifier_use)
          COALESCE(db.to_char_immutable(medreq_reasonreference_identifier_type_system), '#NULL#') || '|||' || -- hash from: reasonReference/identifier/type/coding/system (medreq_reasonreference_identifier_type_system)
          COALESCE(db.to_char_immutable(medreq_reasonreference_identifier_type_version), '#NULL#') || '|||' || -- hash from: reasonReference/identifier/type/coding/version (medreq_reasonreference_identifier_type_version)
          COALESCE(db.to_char_immutable(medreq_reasonreference_identifier_type_code), '#NULL#') || '|||' || -- hash from: reasonReference/identifier/type/coding/code (medreq_reasonreference_identifier_type_code)
          COALESCE(db.to_char_immutable(medreq_reasonreference_identifier_type_display), '#NULL#') || '|||' || -- hash from: reasonReference/identifier/type/coding/display (medreq_reasonreference_identifier_type_display)
          COALESCE(db.to_char_immutable(medreq_reasonreference_identifier_type_text), '#NULL#') || '|||' || -- hash from: reasonReference/identifier/type/text (medreq_reasonreference_identifier_type_text)
          COALESCE(db.to_char_immutable(medreq_reasonreference_identifier_system), '#NULL#') || '|||' || -- hash from: reasonReference/identifier/system (medreq_reasonreference_identifier_system)
          COALESCE(db.to_char_immutable(medreq_reasonreference_identifier_value), '#NULL#') || '|||' || -- hash from: reasonReference/identifier/value (medreq_reasonreference_identifier_value)
          COALESCE(db.to_char_immutable(medreq_reasonreference_display), '#NULL#') || '|||' || -- hash from: reasonReference/display (medreq_reasonreference_display)
          COALESCE(db.to_char_immutable(medreq_basedon_ref), '#NULL#') || '|||' || -- hash from: basedOn/reference (medreq_basedon_ref)
          COALESCE(db.to_char_immutable(medreq_basedon_type), '#NULL#') || '|||' || -- hash from: basedOn/type (medreq_basedon_type)
          COALESCE(db.to_char_immutable(medreq_basedon_identifier_use), '#NULL#') || '|||' || -- hash from: basedOn/identifier/use (medreq_basedon_identifier_use)
          COALESCE(db.to_char_immutable(medreq_basedon_identifier_type_system), '#NULL#') || '|||' || -- hash from: basedOn/identifier/type/coding/system (medreq_basedon_identifier_type_system)
          COALESCE(db.to_char_immutable(medreq_basedon_identifier_type_version), '#NULL#') || '|||' || -- hash from: basedOn/identifier/type/coding/version (medreq_basedon_identifier_type_version)
          COALESCE(db.to_char_immutable(medreq_basedon_identifier_type_code), '#NULL#') || '|||' || -- hash from: basedOn/identifier/type/coding/code (medreq_basedon_identifier_type_code)
          COALESCE(db.to_char_immutable(medreq_basedon_identifier_type_display), '#NULL#') || '|||' || -- hash from: basedOn/identifier/type/coding/display (medreq_basedon_identifier_type_display)
          COALESCE(db.to_char_immutable(medreq_basedon_identifier_type_text), '#NULL#') || '|||' || -- hash from: basedOn/identifier/type/text (medreq_basedon_identifier_type_text)
          COALESCE(db.to_char_immutable(medreq_basedon_identifier_system), '#NULL#') || '|||' || -- hash from: basedOn/identifier/system (medreq_basedon_identifier_system)
          COALESCE(db.to_char_immutable(medreq_basedon_identifier_value), '#NULL#') || '|||' || -- hash from: basedOn/identifier/value (medreq_basedon_identifier_value)
          COALESCE(db.to_char_immutable(medreq_basedon_display), '#NULL#') || '|||' || -- hash from: basedOn/display (medreq_basedon_display)
          COALESCE(db.to_char_immutable(medreq_note_authorstring), '#NULL#') || '|||' || -- hash from: note/authorString (medreq_note_authorstring)
          COALESCE(db.to_char_immutable(medreq_note_authorreference_ref), '#NULL#') || '|||' || -- hash from: note/authorReference/reference (medreq_note_authorreference_ref)
          COALESCE(db.to_char_immutable(medreq_note_authorreference_type), '#NULL#') || '|||' || -- hash from: note/authorReference/type (medreq_note_authorreference_type)
          COALESCE(db.to_char_immutable(medreq_note_authorreference_identifier_use), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/use (medreq_note_authorreference_identifier_use)
          COALESCE(db.to_char_immutable(medreq_note_authorreference_identifier_type_system), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/type/coding/system (medreq_note_authorreference_identifier_type_system)
          COALESCE(db.to_char_immutable(medreq_note_authorreference_identifier_type_version), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/type/coding/version (medreq_note_authorreference_identifier_type_version)
          COALESCE(db.to_char_immutable(medreq_note_authorreference_identifier_type_code), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/type/coding/code (medreq_note_authorreference_identifier_type_code)
          COALESCE(db.to_char_immutable(medreq_note_authorreference_identifier_type_display), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/type/coding/display (medreq_note_authorreference_identifier_type_display)
          COALESCE(db.to_char_immutable(medreq_note_authorreference_identifier_type_text), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/type/text (medreq_note_authorreference_identifier_type_text)
          COALESCE(db.to_char_immutable(medreq_note_authorreference_identifier_system), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/system (medreq_note_authorreference_identifier_system)
          COALESCE(db.to_char_immutable(medreq_note_authorreference_identifier_value), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/value (medreq_note_authorreference_identifier_value)
          COALESCE(db.to_char_immutable(medreq_note_authorreference_display), '#NULL#') || '|||' || -- hash from: note/authorReference/display (medreq_note_authorreference_display)
          COALESCE(db.to_char_immutable(medreq_note_time), '#NULL#') || '|||' || -- hash from: note/time (medreq_note_time)
          COALESCE(db.to_char_immutable(medreq_note_text), '#NULL#') || '|||' || -- hash from: note/text (medreq_note_text)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_sequence), '#NULL#') || '|||' || -- hash from: dosageInstruction/sequence (medreq_doseinstruc_sequence)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_text), '#NULL#') || '|||' || -- hash from: dosageInstruction/text (medreq_doseinstruc_text)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_additionalinstruction_system), '#NULL#') || '|||' || -- hash from: dosageInstruction/additionalInstruction/coding/system (medreq_doseinstruc_additionalinstruction_system)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_additionalinstruction_version), '#NULL#') || '|||' || -- hash from: dosageInstruction/additionalInstruction/coding/version (medreq_doseinstruc_additionalinstruction_version)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_additionalinstruction_code), '#NULL#') || '|||' || -- hash from: dosageInstruction/additionalInstruction/coding/code (medreq_doseinstruc_additionalinstruction_code)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_additionalinstruction_display), '#NULL#') || '|||' || -- hash from: dosageInstruction/additionalInstruction/coding/display (medreq_doseinstruc_additionalinstruction_display)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_additionalinstruction_text), '#NULL#') || '|||' || -- hash from: dosageInstruction/additionalInstruction/text (medreq_doseinstruc_additionalinstruction_text)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_patientinstruction), '#NULL#') || '|||' || -- hash from: dosageInstruction/patientInstruction (medreq_doseinstruc_patientinstruction)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_event), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/event (medreq_doseinstruc_timing_event)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_boundsduration_value), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/repeat/boundsDuration/value (medreq_doseinstruc_timing_repeat_boundsduration_value)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_boundsduration_comparator), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/repeat/boundsDuration/comparator (medreq_doseinstruc_timing_repeat_boundsduration_comparator)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_boundsduration_unit), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/repeat/boundsDuration/unit (medreq_doseinstruc_timing_repeat_boundsduration_unit)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_boundsduration_system), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/repeat/boundsDuration/system (medreq_doseinstruc_timing_repeat_boundsduration_system)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_boundsduration_code), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/repeat/boundsDuration/code (medreq_doseinstruc_timing_repeat_boundsduration_code)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_boundsrange_low_value), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/repeat/boundsRange/low/value (medreq_doseinstruc_timing_repeat_boundsrange_low_value)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_boundsrange_low_unit), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/repeat/boundsRange/low/unit (medreq_doseinstruc_timing_repeat_boundsrange_low_unit)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_boundsrange_low_system), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/repeat/boundsRange/low/system (medreq_doseinstruc_timing_repeat_boundsrange_low_system)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_boundsrange_low_code), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/repeat/boundsRange/low/code (medreq_doseinstruc_timing_repeat_boundsrange_low_code)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_boundsrange_high_value), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/repeat/boundsRange/high/value (medreq_doseinstruc_timing_repeat_boundsrange_high_value)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_boundsrange_high_unit), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/repeat/boundsRange/high/unit (medreq_doseinstruc_timing_repeat_boundsrange_high_unit)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_boundsrange_high_system), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/repeat/boundsRange/high/system (medreq_doseinstruc_timing_repeat_boundsrange_high_system)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_boundsrange_high_code), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/repeat/boundsRange/high/code (medreq_doseinstruc_timing_repeat_boundsrange_high_code)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_boundsperiod_start), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/repeat/boundsPeriod/start (medreq_doseinstruc_timing_repeat_boundsperiod_start)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_boundsperiod_end), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/repeat/boundsPeriod/end (medreq_doseinstruc_timing_repeat_boundsperiod_end)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_count), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/repeat/count (medreq_doseinstruc_timing_repeat_count)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_countmax), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/repeat/countMax (medreq_doseinstruc_timing_repeat_countmax)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_duration), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/repeat/duration (medreq_doseinstruc_timing_repeat_duration)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_durationmax), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/repeat/durationMax (medreq_doseinstruc_timing_repeat_durationmax)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_durationunit), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/repeat/durationUnit (medreq_doseinstruc_timing_repeat_durationunit)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_frequency), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/repeat/frequency (medreq_doseinstruc_timing_repeat_frequency)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_frequencymax), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/repeat/frequencyMax (medreq_doseinstruc_timing_repeat_frequencymax)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_period), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/repeat/period (medreq_doseinstruc_timing_repeat_period)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_periodmax), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/repeat/periodMax (medreq_doseinstruc_timing_repeat_periodmax)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_periodunit), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/repeat/periodUnit (medreq_doseinstruc_timing_repeat_periodunit)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_dayofweek), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/repeat/dayOfWeek (medreq_doseinstruc_timing_repeat_dayofweek)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_timeofday), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/repeat/timeOfDay (medreq_doseinstruc_timing_repeat_timeofday)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_when), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/repeat/when (medreq_doseinstruc_timing_repeat_when)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_repeat_offset), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/repeat/offset (medreq_doseinstruc_timing_repeat_offset)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_code_system), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/code/coding/system (medreq_doseinstruc_timing_code_system)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_code_version), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/code/coding/version (medreq_doseinstruc_timing_code_version)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_code_code), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/code/coding/code (medreq_doseinstruc_timing_code_code)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_code_display), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/code/coding/display (medreq_doseinstruc_timing_code_display)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_timing_code_text), '#NULL#') || '|||' || -- hash from: dosageInstruction/timing/code/text (medreq_doseinstruc_timing_code_text)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_asneededboolean), '#NULL#') || '|||' || -- hash from: dosageInstruction/asNeededBoolean (medreq_doseinstruc_asneededboolean)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_asneededcodeableconcept_system), '#NULL#') || '|||' || -- hash from: dosageInstruction/asNeededCodeableConcept/coding/system (medreq_doseinstruc_asneededcodeableconcept_system)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_asneededcodeableconcept_version), '#NULL#') || '|||' || -- hash from: dosageInstruction/asNeededCodeableConcept/coding/version (medreq_doseinstruc_asneededcodeableconcept_version)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_asneededcodeableconcept_code), '#NULL#') || '|||' || -- hash from: dosageInstruction/asNeededCodeableConcept/coding/code (medreq_doseinstruc_asneededcodeableconcept_code)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_asneededcodeableconcept_display), '#NULL#') || '|||' || -- hash from: dosageInstruction/asNeededCodeableConcept/coding/display (medreq_doseinstruc_asneededcodeableconcept_display)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_asneededcodeableconcept_text), '#NULL#') || '|||' || -- hash from: dosageInstruction/asNeededCodeableConcept/text (medreq_doseinstruc_asneededcodeableconcept_text)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_site_system), '#NULL#') || '|||' || -- hash from: dosageInstruction/site/coding/system (medreq_doseinstruc_site_system)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_site_version), '#NULL#') || '|||' || -- hash from: dosageInstruction/site/coding/version (medreq_doseinstruc_site_version)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_site_code), '#NULL#') || '|||' || -- hash from: dosageInstruction/site/coding/code (medreq_doseinstruc_site_code)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_site_display), '#NULL#') || '|||' || -- hash from: dosageInstruction/site/coding/display (medreq_doseinstruc_site_display)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_site_text), '#NULL#') || '|||' || -- hash from: dosageInstruction/site/text (medreq_doseinstruc_site_text)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_route_system), '#NULL#') || '|||' || -- hash from: dosageInstruction/route/coding/system (medreq_doseinstruc_route_system)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_route_version), '#NULL#') || '|||' || -- hash from: dosageInstruction/route/coding/version (medreq_doseinstruc_route_version)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_route_code), '#NULL#') || '|||' || -- hash from: dosageInstruction/route/coding/code (medreq_doseinstruc_route_code)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_route_display), '#NULL#') || '|||' || -- hash from: dosageInstruction/route/coding/display (medreq_doseinstruc_route_display)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_route_text), '#NULL#') || '|||' || -- hash from: dosageInstruction/route/text (medreq_doseinstruc_route_text)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_method_system), '#NULL#') || '|||' || -- hash from: dosageInstruction/method/coding/system (medreq_doseinstruc_method_system)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_method_version), '#NULL#') || '|||' || -- hash from: dosageInstruction/method/coding/version (medreq_doseinstruc_method_version)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_method_code), '#NULL#') || '|||' || -- hash from: dosageInstruction/method/coding/code (medreq_doseinstruc_method_code)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_method_display), '#NULL#') || '|||' || -- hash from: dosageInstruction/method/coding/display (medreq_doseinstruc_method_display)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_method_text), '#NULL#') || '|||' || -- hash from: dosageInstruction/method/text (medreq_doseinstruc_method_text)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_type_system), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/type/coding/system (medreq_doseinstruc_doseandrate_type_system)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_type_version), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/type/coding/version (medreq_doseinstruc_doseandrate_type_version)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_type_code), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/type/coding/code (medreq_doseinstruc_doseandrate_type_code)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_type_display), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/type/coding/display (medreq_doseinstruc_doseandrate_type_display)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_type_text), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/type/text (medreq_doseinstruc_doseandrate_type_text)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_doserange_low_value), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/doseRange/low/value (medreq_doseinstruc_doseandrate_doserange_low_value)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_doserange_low_unit), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/doseRange/low/unit (medreq_doseinstruc_doseandrate_doserange_low_unit)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_doserange_low_system), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/doseRange/low/system (medreq_doseinstruc_doseandrate_doserange_low_system)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_doserange_low_code), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/doseRange/low/code (medreq_doseinstruc_doseandrate_doserange_low_code)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_doserange_high_value), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/doseRange/high/value (medreq_doseinstruc_doseandrate_doserange_high_value)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_doserange_high_unit), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/doseRange/high/unit (medreq_doseinstruc_doseandrate_doserange_high_unit)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_doserange_high_system), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/doseRange/high/system (medreq_doseinstruc_doseandrate_doserange_high_system)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_doserange_high_code), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/doseRange/high/code (medreq_doseinstruc_doseandrate_doserange_high_code)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_dosequantity_value), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/doseQuantity/value (medreq_doseinstruc_doseandrate_dosequantity_value)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_dosequantity_comparator), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/doseQuantity/comparator (medreq_doseinstruc_doseandrate_dosequantity_comparator)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_dosequantity_unit), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/doseQuantity/unit (medreq_doseinstruc_doseandrate_dosequantity_unit)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_dosequantity_system), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/doseQuantity/system (medreq_doseinstruc_doseandrate_dosequantity_system)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_dosequantity_code), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/doseQuantity/code (medreq_doseinstruc_doseandrate_dosequantity_code)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_rateratio_numerator_value), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/rateRatio/numerator/value (medreq_doseinstruc_doseandrate_rateratio_numerator_value)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_rateratio_numerator_comparator), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/rateRatio/numerator/comparator (medreq_doseinstruc_doseandrate_rateratio_numerator_comparator)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_rateratio_numerator_unit), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/rateRatio/numerator/unit (medreq_doseinstruc_doseandrate_rateratio_numerator_unit)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_rateratio_numerator_system), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/rateRatio/numerator/system (medreq_doseinstruc_doseandrate_rateratio_numerator_system)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_rateratio_numerator_code), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/rateRatio/numerator/code (medreq_doseinstruc_doseandrate_rateratio_numerator_code)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_rateratio_denominator_value), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/rateRatio/denominator/value (medreq_doseinstruc_doseandrate_rateratio_denominator_value)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_rateratio_denominator_comparator), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/rateRatio/denominator/comparator (medreq_doseinstruc_doseandrate_rateratio_denominator_comparator)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_rateratio_denominator_unit), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/rateRatio/denominator/unit (medreq_doseinstruc_doseandrate_rateratio_denominator_unit)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_rateratio_denominator_system), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/rateRatio/denominator/system (medreq_doseinstruc_doseandrate_rateratio_denominator_system)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_rateratio_denominator_code), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/rateRatio/denominator/code (medreq_doseinstruc_doseandrate_rateratio_denominator_code)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_raterange_low_value), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/rateRange/low/value (medreq_doseinstruc_doseandrate_raterange_low_value)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_raterange_low_unit), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/rateRange/low/unit (medreq_doseinstruc_doseandrate_raterange_low_unit)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_raterange_low_system), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/rateRange/low/system (medreq_doseinstruc_doseandrate_raterange_low_system)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_raterange_low_code), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/rateRange/low/code (medreq_doseinstruc_doseandrate_raterange_low_code)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_raterange_high_value), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/rateRange/high/value (medreq_doseinstruc_doseandrate_raterange_high_value)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_raterange_high_unit), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/rateRange/high/unit (medreq_doseinstruc_doseandrate_raterange_high_unit)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_raterange_high_system), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/rateRange/high/system (medreq_doseinstruc_doseandrate_raterange_high_system)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_raterange_high_code), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/rateRange/high/code (medreq_doseinstruc_doseandrate_raterange_high_code)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_ratequantity_value), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/rateQuantity/value (medreq_doseinstruc_doseandrate_ratequantity_value)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_ratequantity_unit), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/rateQuantity/unit (medreq_doseinstruc_doseandrate_ratequantity_unit)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_ratequantity_system), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/rateQuantity/system (medreq_doseinstruc_doseandrate_ratequantity_system)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_doseandrate_ratequantity_code), '#NULL#') || '|||' || -- hash from: dosageInstruction/doseAndRate/rateQuantity/code (medreq_doseinstruc_doseandrate_ratequantity_code)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_maxdoseperperiod_numerator_value), '#NULL#') || '|||' || -- hash from: dosageInstruction/maxDosePerPeriod/numerator/value (medreq_doseinstruc_maxdoseperperiod_numerator_value)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_maxdoseperperiod_numerator_comparator), '#NULL#') || '|||' || -- hash from: dosageInstruction/maxDosePerPeriod/numerator/comparator (medreq_doseinstruc_maxdoseperperiod_numerator_comparator)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_maxdoseperperiod_numerator_unit), '#NULL#') || '|||' || -- hash from: dosageInstruction/maxDosePerPeriod/numerator/unit (medreq_doseinstruc_maxdoseperperiod_numerator_unit)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_maxdoseperperiod_numerator_system), '#NULL#') || '|||' || -- hash from: dosageInstruction/maxDosePerPeriod/numerator/system (medreq_doseinstruc_maxdoseperperiod_numerator_system)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_maxdoseperperiod_numerator_code), '#NULL#') || '|||' || -- hash from: dosageInstruction/maxDosePerPeriod/numerator/code (medreq_doseinstruc_maxdoseperperiod_numerator_code)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_maxdoseperperiod_denominator_value), '#NULL#') || '|||' || -- hash from: dosageInstruction/maxDosePerPeriod/denominator/value (medreq_doseinstruc_maxdoseperperiod_denominator_value)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_maxdoseperperiod_denominator_comparator), '#NULL#') || '|||' || -- hash from: dosageInstruction/maxDosePerPeriod/denominator/comparator (medreq_doseinstruc_maxdoseperperiod_denominator_comparator)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_maxdoseperperiod_denominator_unit), '#NULL#') || '|||' || -- hash from: dosageInstruction/maxDosePerPeriod/denominator/unit (medreq_doseinstruc_maxdoseperperiod_denominator_unit)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_maxdoseperperiod_denominator_system), '#NULL#') || '|||' || -- hash from: dosageInstruction/maxDosePerPeriod/denominator/system (medreq_doseinstruc_maxdoseperperiod_denominator_system)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_maxdoseperperiod_denominator_code), '#NULL#') || '|||' || -- hash from: dosageInstruction/maxDosePerPeriod/denominator/code (medreq_doseinstruc_maxdoseperperiod_denominator_code)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_maxdoseperadministration_value), '#NULL#') || '|||' || -- hash from: dosageInstruction/maxDosePerAdministration/value (medreq_doseinstruc_maxdoseperadministration_value)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_maxdoseperadministration_unit), '#NULL#') || '|||' || -- hash from: dosageInstruction/maxDosePerAdministration/unit (medreq_doseinstruc_maxdoseperadministration_unit)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_maxdoseperadministration_system), '#NULL#') || '|||' || -- hash from: dosageInstruction/maxDosePerAdministration/system (medreq_doseinstruc_maxdoseperadministration_system)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_maxdoseperadministration_code), '#NULL#') || '|||' || -- hash from: dosageInstruction/maxDosePerAdministration/code (medreq_doseinstruc_maxdoseperadministration_code)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_maxdoseperlifetime_value), '#NULL#') || '|||' || -- hash from: dosageInstruction/maxDosePerLifetime/value (medreq_doseinstruc_maxdoseperlifetime_value)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_maxdoseperlifetime_unit), '#NULL#') || '|||' || -- hash from: dosageInstruction/maxDosePerLifetime/unit (medreq_doseinstruc_maxdoseperlifetime_unit)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_maxdoseperlifetime_system), '#NULL#') || '|||' || -- hash from: dosageInstruction/maxDosePerLifetime/system (medreq_doseinstruc_maxdoseperlifetime_system)
          COALESCE(db.to_char_immutable(medreq_doseinstruc_maxdoseperlifetime_code), '#NULL#') || '|||' || -- hash from: dosageInstruction/maxDosePerLifetime/code (medreq_doseinstruc_maxdoseperlifetime_code)
          COALESCE(db.to_char_immutable(medreq_substitution_reason_system), '#NULL#') || '|||' || -- hash from: substitution/reason/coding/system (medreq_substitution_reason_system)
          COALESCE(db.to_char_immutable(medreq_substitution_reason_version), '#NULL#') || '|||' || -- hash from: substitution/reason/coding/version (medreq_substitution_reason_version)
          COALESCE(db.to_char_immutable(medreq_substitution_reason_code), '#NULL#') || '|||' || -- hash from: substitution/reason/coding/code (medreq_substitution_reason_code)
          COALESCE(db.to_char_immutable(medreq_substitution_reason_display), '#NULL#') || '|||' || -- hash from: substitution/reason/coding/display (medreq_substitution_reason_display)
          COALESCE(db.to_char_immutable(medreq_substitution_reason_text), '#NULL#') || '|||' || -- hash from: substitution/reason/text (medreq_substitution_reason_text)
                 '#'
               )
            ) STORED; -- Column for hash value for comparing FHIR data - collion check in second step hash_index_col
        END IF; -- column
    END IF; -- Table
END
$$;
-- Table "medicationadministration" in schema "cds2db_in"
-------------------------------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS cds2db_in.medicationadministration (
  medicationadministration_id int PRIMARY KEY DEFAULT nextval('db.db_seq') -- Primary key of the entity
);

DO
$$
DECLARE
    IF EXISTS ( -- Table exists
        SELECT 1 FROM information_schema.columns 
        WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
    ) THEN
        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'input_datetime'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medicationadministration_raw_id int NOT NULL; -- Primary key of the corresponding raw table
            NULL;
        END IF; -- column

-- Organizational items - fixed for each database table -----------------------------------------
        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'input_datetime'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD input_datetime TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP; -- Time at which data record was created
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'last_check_datetime'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD last_check_datetime TIMESTAMP DEFAULT NULL; -- Time at which data record was last checked
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'current_dataset_status'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD current_dataset_status VARCHAR DEFAULT 'input'; -- Processing status of the data record
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'input_processing_nr'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD input_processing_nr INT; -- (First) Processing number of the data record
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'last_processing_nr'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD last_processing_nr INT; -- Last processing number of the data record
        END IF; -- column

-- Data-leading columns -------------------------------------------------------------------------
        IF NOT EXISTS ( -- column not exists (medadm_id)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_id'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_id varchar;   -- id (varchar)
        END IF; -- column (medadm_id)
        IF NOT EXISTS ( -- column not exists (medadm_meta_versionid)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_meta_versionid'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_meta_versionid varchar;   -- meta/versionId (varchar)
        END IF; -- column (medadm_meta_versionid)
        IF NOT EXISTS ( -- column not exists (medadm_meta_lastupdated)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_meta_lastupdated'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_meta_lastupdated timestamp;   -- meta/lastUpdated (timestamp)
        END IF; -- column (medadm_meta_lastupdated)
        IF NOT EXISTS ( -- column not exists (medadm_meta_profile)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_meta_profile'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_meta_profile varchar;   -- meta/profile (varchar)
        END IF; -- column (medadm_meta_profile)
        IF NOT EXISTS ( -- column not exists (medadm_identifier_use)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_identifier_use'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_identifier_use varchar;   -- identifier/use (varchar)
        END IF; -- column (medadm_identifier_use)
        IF NOT EXISTS ( -- column not exists (medadm_identifier_type_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_identifier_type_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_identifier_type_system varchar;   -- identifier/type/coding/system (varchar)
        END IF; -- column (medadm_identifier_type_system)
        IF NOT EXISTS ( -- column not exists (medadm_identifier_type_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_identifier_type_version'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_identifier_type_version varchar;   -- identifier/type/coding/version (varchar)
        END IF; -- column (medadm_identifier_type_version)
        IF NOT EXISTS ( -- column not exists (medadm_identifier_type_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_identifier_type_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_identifier_type_code varchar;   -- identifier/type/coding/code (varchar)
        END IF; -- column (medadm_identifier_type_code)
        IF NOT EXISTS ( -- column not exists (medadm_identifier_type_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_identifier_type_display'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_identifier_type_display varchar;   -- identifier/type/coding/display (varchar)
        END IF; -- column (medadm_identifier_type_display)
        IF NOT EXISTS ( -- column not exists (medadm_identifier_type_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_identifier_type_text'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_identifier_type_text varchar;   -- identifier/type/text (varchar)
        END IF; -- column (medadm_identifier_type_text)
        IF NOT EXISTS ( -- column not exists (medadm_identifier_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_identifier_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_identifier_system varchar;   -- identifier/system (varchar)
        END IF; -- column (medadm_identifier_system)
        IF NOT EXISTS ( -- column not exists (medadm_identifier_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_identifier_value'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_identifier_value varchar;   -- identifier/value (varchar)
        END IF; -- column (medadm_identifier_value)
        IF NOT EXISTS ( -- column not exists (medadm_identifier_start)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_identifier_start'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_identifier_start timestamp;   -- identifier/start (timestamp)
        END IF; -- column (medadm_identifier_start)
        IF NOT EXISTS ( -- column not exists (medadm_identifier_end)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_identifier_end'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_identifier_end timestamp;   -- identifier/end (timestamp)
        END IF; -- column (medadm_identifier_end)
        IF NOT EXISTS ( -- column not exists (medadm_encounter_ref)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_encounter_ref'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_encounter_ref varchar;   -- context/reference (varchar)
        END IF; -- column (medadm_encounter_ref)
        IF NOT EXISTS ( -- column not exists (medadm_patient_ref)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_patient_ref'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_patient_ref varchar;   -- subject/reference (varchar)
        END IF; -- column (medadm_patient_ref)
        IF NOT EXISTS ( -- column not exists (medadm_partof_ref)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_partof_ref'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_partof_ref varchar;   -- partOf/reference (varchar)
        END IF; -- column (medadm_partof_ref)
        IF NOT EXISTS ( -- column not exists (medadm_status)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_status'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_status varchar;   -- status (varchar)
        END IF; -- column (medadm_status)
        IF NOT EXISTS ( -- column not exists (medadm_statusreason_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_statusreason_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_statusreason_system varchar;   -- statusReason/coding/system (varchar)
        END IF; -- column (medadm_statusreason_system)
        IF NOT EXISTS ( -- column not exists (medadm_statusreason_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_statusreason_version'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_statusreason_version varchar;   -- statusReason/coding/version (varchar)
        END IF; -- column (medadm_statusreason_version)
        IF NOT EXISTS ( -- column not exists (medadm_statusreason_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_statusreason_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_statusreason_code varchar;   -- statusReason/coding/code (varchar)
        END IF; -- column (medadm_statusreason_code)
        IF NOT EXISTS ( -- column not exists (medadm_statusreason_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_statusreason_display'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_statusreason_display varchar;   -- statusReason/coding/display (varchar)
        END IF; -- column (medadm_statusreason_display)
        IF NOT EXISTS ( -- column not exists (medadm_statusreason_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_statusreason_text'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_statusreason_text varchar;   -- statusReason/text (varchar)
        END IF; -- column (medadm_statusreason_text)
        IF NOT EXISTS ( -- column not exists (medadm_category_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_category_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_category_system varchar;   -- category/coding/system (varchar)
        END IF; -- column (medadm_category_system)
        IF NOT EXISTS ( -- column not exists (medadm_category_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_category_version'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_category_version varchar;   -- category/coding/version (varchar)
        END IF; -- column (medadm_category_version)
        IF NOT EXISTS ( -- column not exists (medadm_category_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_category_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_category_code varchar;   -- category/coding/code (varchar)
        END IF; -- column (medadm_category_code)
        IF NOT EXISTS ( -- column not exists (medadm_category_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_category_display'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_category_display varchar;   -- category/coding/display (varchar)
        END IF; -- column (medadm_category_display)
        IF NOT EXISTS ( -- column not exists (medadm_category_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_category_text'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_category_text varchar;   -- category/text (varchar)
        END IF; -- column (medadm_category_text)
        IF NOT EXISTS ( -- column not exists (medadm_medicationreference_ref)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_medicationreference_ref'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_medicationreference_ref varchar;   -- medicationReference/reference (varchar)
        END IF; -- column (medadm_medicationreference_ref)
        IF NOT EXISTS ( -- column not exists (medadm_medicationcodeableconcept_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_medicationcodeableconcept_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_medicationcodeableconcept_system varchar;   -- medicationCodeableConcept/coding/system (varchar)
        END IF; -- column (medadm_medicationcodeableconcept_system)
        IF NOT EXISTS ( -- column not exists (medadm_medicationcodeableconcept_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_medicationcodeableconcept_version'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_medicationcodeableconcept_version varchar;   -- medicationCodeableConcept/coding/version (varchar)
        END IF; -- column (medadm_medicationcodeableconcept_version)
        IF NOT EXISTS ( -- column not exists (medadm_medicationcodeableconcept_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_medicationcodeableconcept_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_medicationcodeableconcept_code varchar;   -- medicationCodeableConcept/coding/code (varchar)
        END IF; -- column (medadm_medicationcodeableconcept_code)
        IF NOT EXISTS ( -- column not exists (medadm_medicationcodeableconcept_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_medicationcodeableconcept_display'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_medicationcodeableconcept_display varchar;   -- medicationCodeableConcept/coding/display (varchar)
        END IF; -- column (medadm_medicationcodeableconcept_display)
        IF NOT EXISTS ( -- column not exists (medadm_medicationcodeableconcept_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_medicationcodeableconcept_text'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_medicationcodeableconcept_text varchar;   -- medicationCodeableConcept/text (varchar)
        END IF; -- column (medadm_medicationcodeableconcept_text)
        IF NOT EXISTS ( -- column not exists (medadm_supportinginformation_ref)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_supportinginformation_ref'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_supportinginformation_ref varchar;   -- supportingInformation/reference (varchar)
        END IF; -- column (medadm_supportinginformation_ref)
        IF NOT EXISTS ( -- column not exists (medadm_supportinginformation_type)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_supportinginformation_type'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_supportinginformation_type varchar;   -- supportingInformation/type (varchar)
        END IF; -- column (medadm_supportinginformation_type)
        IF NOT EXISTS ( -- column not exists (medadm_supportinginformation_identifier_use)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_supportinginformation_identifier_use'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_supportinginformation_identifier_use varchar;   -- supportingInformation/identifier/use (varchar)
        END IF; -- column (medadm_supportinginformation_identifier_use)
        IF NOT EXISTS ( -- column not exists (medadm_supportinginformation_identifier_type_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_supportinginformation_identifier_type_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_supportinginformation_identifier_type_system varchar;   -- supportingInformation/identifier/type/coding/system (varchar)
        END IF; -- column (medadm_supportinginformation_identifier_type_system)
        IF NOT EXISTS ( -- column not exists (medadm_supportinginformation_identifier_type_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_supportinginformation_identifier_type_version'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_supportinginformation_identifier_type_version varchar;   -- supportingInformation/identifier/type/coding/version (varchar)
        END IF; -- column (medadm_supportinginformation_identifier_type_version)
        IF NOT EXISTS ( -- column not exists (medadm_supportinginformation_identifier_type_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_supportinginformation_identifier_type_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_supportinginformation_identifier_type_code varchar;   -- supportingInformation/identifier/type/coding/code (varchar)
        END IF; -- column (medadm_supportinginformation_identifier_type_code)
        IF NOT EXISTS ( -- column not exists (medadm_supportinginformation_identifier_type_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_supportinginformation_identifier_type_display'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_supportinginformation_identifier_type_display varchar;   -- supportingInformation/identifier/type/coding/display (varchar)
        END IF; -- column (medadm_supportinginformation_identifier_type_display)
        IF NOT EXISTS ( -- column not exists (medadm_supportinginformation_identifier_type_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_supportinginformation_identifier_type_text'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_supportinginformation_identifier_type_text varchar;   -- supportingInformation/identifier/type/text (varchar)
        END IF; -- column (medadm_supportinginformation_identifier_type_text)
        IF NOT EXISTS ( -- column not exists (medadm_supportinginformation_identifier_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_supportinginformation_identifier_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_supportinginformation_identifier_system varchar;   -- supportingInformation/identifier/system (varchar)
        END IF; -- column (medadm_supportinginformation_identifier_system)
        IF NOT EXISTS ( -- column not exists (medadm_supportinginformation_identifier_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_supportinginformation_identifier_value'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_supportinginformation_identifier_value varchar;   -- supportingInformation/identifier/value (varchar)
        END IF; -- column (medadm_supportinginformation_identifier_value)
        IF NOT EXISTS ( -- column not exists (medadm_supportinginformation_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_supportinginformation_display'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_supportinginformation_display varchar;   -- supportingInformation/display (varchar)
        END IF; -- column (medadm_supportinginformation_display)
        IF NOT EXISTS ( -- column not exists (medadm_effectivedatetime)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_effectivedatetime'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_effectivedatetime timestamp;   -- effectiveDateTime (timestamp)
        END IF; -- column (medadm_effectivedatetime)
        IF NOT EXISTS ( -- column not exists (medadm_effectiveperiod_start)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_effectiveperiod_start'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_effectiveperiod_start timestamp;   -- effectivePeriod/start (timestamp)
        END IF; -- column (medadm_effectiveperiod_start)
        IF NOT EXISTS ( -- column not exists (medadm_effectiveperiod_end)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_effectiveperiod_end'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_effectiveperiod_end timestamp;   -- effectivePeriod/end (timestamp)
        END IF; -- column (medadm_effectiveperiod_end)
        IF NOT EXISTS ( -- column not exists (medadm_performer_function_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_performer_function_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_performer_function_system varchar;   -- performer/function/coding/system (varchar)
        END IF; -- column (medadm_performer_function_system)
        IF NOT EXISTS ( -- column not exists (medadm_performer_function_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_performer_function_version'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_performer_function_version varchar;   -- performer/function/coding/version (varchar)
        END IF; -- column (medadm_performer_function_version)
        IF NOT EXISTS ( -- column not exists (medadm_performer_function_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_performer_function_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_performer_function_code varchar;   -- performer/function/coding/code (varchar)
        END IF; -- column (medadm_performer_function_code)
        IF NOT EXISTS ( -- column not exists (medadm_performer_function_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_performer_function_display'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_performer_function_display varchar;   -- performer/function/coding/display (varchar)
        END IF; -- column (medadm_performer_function_display)
        IF NOT EXISTS ( -- column not exists (medadm_performer_function_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_performer_function_text'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_performer_function_text varchar;   -- performer/function/text (varchar)
        END IF; -- column (medadm_performer_function_text)
        IF NOT EXISTS ( -- column not exists (medadm_reasoncode_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_reasoncode_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_reasoncode_system varchar;   -- reasonCode/coding/system (varchar)
        END IF; -- column (medadm_reasoncode_system)
        IF NOT EXISTS ( -- column not exists (medadm_reasoncode_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_reasoncode_version'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_reasoncode_version varchar;   -- reasonCode/coding/version (varchar)
        END IF; -- column (medadm_reasoncode_version)
        IF NOT EXISTS ( -- column not exists (medadm_reasoncode_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_reasoncode_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_reasoncode_code varchar;   -- reasonCode/coding/code (varchar)
        END IF; -- column (medadm_reasoncode_code)
        IF NOT EXISTS ( -- column not exists (medadm_reasoncode_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_reasoncode_display'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_reasoncode_display varchar;   -- reasonCode/coding/display (varchar)
        END IF; -- column (medadm_reasoncode_display)
        IF NOT EXISTS ( -- column not exists (medadm_reasoncode_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_reasoncode_text'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_reasoncode_text varchar;   -- reasonCode/text (varchar)
        END IF; -- column (medadm_reasoncode_text)
        IF NOT EXISTS ( -- column not exists (medadm_reasonreference_ref)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_reasonreference_ref'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_reasonreference_ref varchar;   -- reasonReference/reference (varchar)
        END IF; -- column (medadm_reasonreference_ref)
        IF NOT EXISTS ( -- column not exists (medadm_reasonreference_type)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_reasonreference_type'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_reasonreference_type varchar;   -- reasonReference/type (varchar)
        END IF; -- column (medadm_reasonreference_type)
        IF NOT EXISTS ( -- column not exists (medadm_reasonreference_identifier_use)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_reasonreference_identifier_use'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_reasonreference_identifier_use varchar;   -- reasonReference/identifier/use (varchar)
        END IF; -- column (medadm_reasonreference_identifier_use)
        IF NOT EXISTS ( -- column not exists (medadm_reasonreference_identifier_type_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_reasonreference_identifier_type_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_reasonreference_identifier_type_system varchar;   -- reasonReference/identifier/type/coding/system (varchar)
        END IF; -- column (medadm_reasonreference_identifier_type_system)
        IF NOT EXISTS ( -- column not exists (medadm_reasonreference_identifier_type_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_reasonreference_identifier_type_version'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_reasonreference_identifier_type_version varchar;   -- reasonReference/identifier/type/coding/version (varchar)
        END IF; -- column (medadm_reasonreference_identifier_type_version)
        IF NOT EXISTS ( -- column not exists (medadm_reasonreference_identifier_type_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_reasonreference_identifier_type_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_reasonreference_identifier_type_code varchar;   -- reasonReference/identifier/type/coding/code (varchar)
        END IF; -- column (medadm_reasonreference_identifier_type_code)
        IF NOT EXISTS ( -- column not exists (medadm_reasonreference_identifier_type_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_reasonreference_identifier_type_display'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_reasonreference_identifier_type_display varchar;   -- reasonReference/identifier/type/coding/display (varchar)
        END IF; -- column (medadm_reasonreference_identifier_type_display)
        IF NOT EXISTS ( -- column not exists (medadm_reasonreference_identifier_type_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_reasonreference_identifier_type_text'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_reasonreference_identifier_type_text varchar;   -- reasonReference/identifier/type/text (varchar)
        END IF; -- column (medadm_reasonreference_identifier_type_text)
        IF NOT EXISTS ( -- column not exists (medadm_reasonreference_identifier_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_reasonreference_identifier_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_reasonreference_identifier_system varchar;   -- reasonReference/identifier/system (varchar)
        END IF; -- column (medadm_reasonreference_identifier_system)
        IF NOT EXISTS ( -- column not exists (medadm_reasonreference_identifier_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_reasonreference_identifier_value'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_reasonreference_identifier_value varchar;   -- reasonReference/identifier/value (varchar)
        END IF; -- column (medadm_reasonreference_identifier_value)
        IF NOT EXISTS ( -- column not exists (medadm_reasonreference_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_reasonreference_display'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_reasonreference_display varchar;   -- reasonReference/display (varchar)
        END IF; -- column (medadm_reasonreference_display)
        IF NOT EXISTS ( -- column not exists (medadm_request_ref)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_request_ref'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_request_ref varchar;   -- request/reference (varchar)
        END IF; -- column (medadm_request_ref)
        IF NOT EXISTS ( -- column not exists (medadm_note_authorstring)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_note_authorstring'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_note_authorstring varchar;   -- note/authorString (varchar)
        END IF; -- column (medadm_note_authorstring)
        IF NOT EXISTS ( -- column not exists (medadm_note_authorreference_ref)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_note_authorreference_ref'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_note_authorreference_ref varchar;   -- note/authorReference/reference (varchar)
        END IF; -- column (medadm_note_authorreference_ref)
        IF NOT EXISTS ( -- column not exists (medadm_note_authorreference_type)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_note_authorreference_type'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_note_authorreference_type varchar;   -- note/authorReference/type (varchar)
        END IF; -- column (medadm_note_authorreference_type)
        IF NOT EXISTS ( -- column not exists (medadm_note_authorreference_identifier_use)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_note_authorreference_identifier_use'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_note_authorreference_identifier_use varchar;   -- note/authorReference/identifier/use (varchar)
        END IF; -- column (medadm_note_authorreference_identifier_use)
        IF NOT EXISTS ( -- column not exists (medadm_note_authorreference_identifier_type_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_note_authorreference_identifier_type_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_note_authorreference_identifier_type_system varchar;   -- note/authorReference/identifier/type/coding/system (varchar)
        END IF; -- column (medadm_note_authorreference_identifier_type_system)
        IF NOT EXISTS ( -- column not exists (medadm_note_authorreference_identifier_type_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_note_authorreference_identifier_type_version'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_note_authorreference_identifier_type_version varchar;   -- note/authorReference/identifier/type/coding/version (varchar)
        END IF; -- column (medadm_note_authorreference_identifier_type_version)
        IF NOT EXISTS ( -- column not exists (medadm_note_authorreference_identifier_type_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_note_authorreference_identifier_type_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_note_authorreference_identifier_type_code varchar;   -- note/authorReference/identifier/type/coding/code (varchar)
        END IF; -- column (medadm_note_authorreference_identifier_type_code)
        IF NOT EXISTS ( -- column not exists (medadm_note_authorreference_identifier_type_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_note_authorreference_identifier_type_display'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_note_authorreference_identifier_type_display varchar;   -- note/authorReference/identifier/type/coding/display (varchar)
        END IF; -- column (medadm_note_authorreference_identifier_type_display)
        IF NOT EXISTS ( -- column not exists (medadm_note_authorreference_identifier_type_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_note_authorreference_identifier_type_text'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_note_authorreference_identifier_type_text varchar;   -- note/authorReference/identifier/type/text (varchar)
        END IF; -- column (medadm_note_authorreference_identifier_type_text)
        IF NOT EXISTS ( -- column not exists (medadm_note_authorreference_identifier_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_note_authorreference_identifier_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_note_authorreference_identifier_system varchar;   -- note/authorReference/identifier/system (varchar)
        END IF; -- column (medadm_note_authorreference_identifier_system)
        IF NOT EXISTS ( -- column not exists (medadm_note_authorreference_identifier_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_note_authorreference_identifier_value'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_note_authorreference_identifier_value varchar;   -- note/authorReference/identifier/value (varchar)
        END IF; -- column (medadm_note_authorreference_identifier_value)
        IF NOT EXISTS ( -- column not exists (medadm_note_authorreference_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_note_authorreference_display'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_note_authorreference_display varchar;   -- note/authorReference/display (varchar)
        END IF; -- column (medadm_note_authorreference_display)
        IF NOT EXISTS ( -- column not exists (medadm_note_time)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_note_time'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_note_time timestamp;   -- note/time (timestamp)
        END IF; -- column (medadm_note_time)
        IF NOT EXISTS ( -- column not exists (medadm_note_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_note_text'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_note_text varchar;   -- note/text (varchar)
        END IF; -- column (medadm_note_text)
        IF NOT EXISTS ( -- column not exists (medadm_dosage_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_dosage_text'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_dosage_text varchar;   -- dosage/text (varchar)
        END IF; -- column (medadm_dosage_text)
        IF NOT EXISTS ( -- column not exists (medadm_dosage_site_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_dosage_site_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_dosage_site_system varchar;   -- dosage/site/coding/system (varchar)
        END IF; -- column (medadm_dosage_site_system)
        IF NOT EXISTS ( -- column not exists (medadm_dosage_site_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_dosage_site_version'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_dosage_site_version varchar;   -- dosage/site/coding/version (varchar)
        END IF; -- column (medadm_dosage_site_version)
        IF NOT EXISTS ( -- column not exists (medadm_dosage_site_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_dosage_site_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_dosage_site_code varchar;   -- dosage/site/coding/code (varchar)
        END IF; -- column (medadm_dosage_site_code)
        IF NOT EXISTS ( -- column not exists (medadm_dosage_site_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_dosage_site_display'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_dosage_site_display varchar;   -- dosage/site/coding/display (varchar)
        END IF; -- column (medadm_dosage_site_display)
        IF NOT EXISTS ( -- column not exists (medadm_dosage_site_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_dosage_site_text'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_dosage_site_text varchar;   -- dosage/site/text (varchar)
        END IF; -- column (medadm_dosage_site_text)
        IF NOT EXISTS ( -- column not exists (medadm_dosage_route_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_dosage_route_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_dosage_route_system varchar;   -- dosage/route/coding/system (varchar)
        END IF; -- column (medadm_dosage_route_system)
        IF NOT EXISTS ( -- column not exists (medadm_dosage_route_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_dosage_route_version'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_dosage_route_version varchar;   -- dosage/route/coding/version (varchar)
        END IF; -- column (medadm_dosage_route_version)
        IF NOT EXISTS ( -- column not exists (medadm_dosage_route_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_dosage_route_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_dosage_route_code varchar;   -- dosage/route/coding/code (varchar)
        END IF; -- column (medadm_dosage_route_code)
        IF NOT EXISTS ( -- column not exists (medadm_dosage_route_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_dosage_route_display'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_dosage_route_display varchar;   -- dosage/route/coding/display (varchar)
        END IF; -- column (medadm_dosage_route_display)
        IF NOT EXISTS ( -- column not exists (medadm_dosage_route_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_dosage_route_text'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_dosage_route_text varchar;   -- dosage/route/text (varchar)
        END IF; -- column (medadm_dosage_route_text)
        IF NOT EXISTS ( -- column not exists (medadm_dosage_method_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_dosage_method_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_dosage_method_system varchar;   -- dosage/method/coding/system (varchar)
        END IF; -- column (medadm_dosage_method_system)
        IF NOT EXISTS ( -- column not exists (medadm_dosage_method_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_dosage_method_version'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_dosage_method_version varchar;   -- dosage/method/coding/version (varchar)
        END IF; -- column (medadm_dosage_method_version)
        IF NOT EXISTS ( -- column not exists (medadm_dosage_method_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_dosage_method_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_dosage_method_code varchar;   -- dosage/method/coding/code (varchar)
        END IF; -- column (medadm_dosage_method_code)
        IF NOT EXISTS ( -- column not exists (medadm_dosage_method_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_dosage_method_display'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_dosage_method_display varchar;   -- dosage/method/coding/display (varchar)
        END IF; -- column (medadm_dosage_method_display)
        IF NOT EXISTS ( -- column not exists (medadm_dosage_method_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_dosage_method_text'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_dosage_method_text varchar;   -- dosage/method/text (varchar)
        END IF; -- column (medadm_dosage_method_text)
        IF NOT EXISTS ( -- column not exists (medadm_dosage_dose_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_dosage_dose_value'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_dosage_dose_value double precision;   -- dosage/dose/value (double precision)
        END IF; -- column (medadm_dosage_dose_value)
        IF NOT EXISTS ( -- column not exists (medadm_dosage_dose_unit)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_dosage_dose_unit'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_dosage_dose_unit varchar;   -- dosage/dose/unit (varchar)
        END IF; -- column (medadm_dosage_dose_unit)
        IF NOT EXISTS ( -- column not exists (medadm_dosage_dose_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_dosage_dose_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_dosage_dose_system varchar;   -- dosage/dose/system (varchar)
        END IF; -- column (medadm_dosage_dose_system)
        IF NOT EXISTS ( -- column not exists (medadm_dosage_dose_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_dosage_dose_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_dosage_dose_code varchar;   -- dosage/dose/code (varchar)
        END IF; -- column (medadm_dosage_dose_code)
        IF NOT EXISTS ( -- column not exists (medadm_dosage_rateratio_numerator_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_dosage_rateratio_numerator_value'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_dosage_rateratio_numerator_value double precision;   -- dosage/rateRatio/numerator/value (double precision)
        END IF; -- column (medadm_dosage_rateratio_numerator_value)
        IF NOT EXISTS ( -- column not exists (medadm_dosage_rateratio_numerator_comparator)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_dosage_rateratio_numerator_comparator'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_dosage_rateratio_numerator_comparator varchar;   -- dosage/rateRatio/numerator/comparator (varchar)
        END IF; -- column (medadm_dosage_rateratio_numerator_comparator)
        IF NOT EXISTS ( -- column not exists (medadm_dosage_rateratio_numerator_unit)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_dosage_rateratio_numerator_unit'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_dosage_rateratio_numerator_unit varchar;   -- dosage/rateRatio/numerator/unit (varchar)
        END IF; -- column (medadm_dosage_rateratio_numerator_unit)
        IF NOT EXISTS ( -- column not exists (medadm_dosage_rateratio_numerator_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_dosage_rateratio_numerator_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_dosage_rateratio_numerator_system varchar;   -- dosage/rateRatio/numerator/system (varchar)
        END IF; -- column (medadm_dosage_rateratio_numerator_system)
        IF NOT EXISTS ( -- column not exists (medadm_dosage_rateratio_numerator_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_dosage_rateratio_numerator_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_dosage_rateratio_numerator_code varchar;   -- dosage/rateRatio/numerator/code (varchar)
        END IF; -- column (medadm_dosage_rateratio_numerator_code)
        IF NOT EXISTS ( -- column not exists (medadm_dosage_rateratio_denominator_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_dosage_rateratio_denominator_value'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_dosage_rateratio_denominator_value double precision;   -- dosage/rateRatio/denominator/value (double precision)
        END IF; -- column (medadm_dosage_rateratio_denominator_value)
        IF NOT EXISTS ( -- column not exists (medadm_dosage_rateratio_denominator_comparator)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_dosage_rateratio_denominator_comparator'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_dosage_rateratio_denominator_comparator varchar;   -- dosage/rateRatio/denominator/comparator (varchar)
        END IF; -- column (medadm_dosage_rateratio_denominator_comparator)
        IF NOT EXISTS ( -- column not exists (medadm_dosage_rateratio_denominator_unit)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_dosage_rateratio_denominator_unit'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_dosage_rateratio_denominator_unit varchar;   -- dosage/rateRatio/denominator/unit (varchar)
        END IF; -- column (medadm_dosage_rateratio_denominator_unit)
        IF NOT EXISTS ( -- column not exists (medadm_dosage_rateratio_denominator_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_dosage_rateratio_denominator_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_dosage_rateratio_denominator_system varchar;   -- dosage/rateRatio/denominator/system (varchar)
        END IF; -- column (medadm_dosage_rateratio_denominator_system)
        IF NOT EXISTS ( -- column not exists (medadm_dosage_rateratio_denominator_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_dosage_rateratio_denominator_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_dosage_rateratio_denominator_code varchar;   -- dosage/rateRatio/denominator/code (varchar)
        END IF; -- column (medadm_dosage_rateratio_denominator_code)
        IF NOT EXISTS ( -- column not exists (medadm_dosage_ratequantity_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_dosage_ratequantity_value'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_dosage_ratequantity_value double precision;   -- dosage/rateQuantity/value (double precision)
        END IF; -- column (medadm_dosage_ratequantity_value)
        IF NOT EXISTS ( -- column not exists (medadm_dosage_ratequantity_unit)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_dosage_ratequantity_unit'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_dosage_ratequantity_unit varchar;   -- dosage/rateQuantity/unit (varchar)
        END IF; -- column (medadm_dosage_ratequantity_unit)
        IF NOT EXISTS ( -- column not exists (medadm_dosage_ratequantity_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_dosage_ratequantity_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_dosage_ratequantity_system varchar;   -- dosage/rateQuantity/system (varchar)
        END IF; -- column (medadm_dosage_ratequantity_system)
        IF NOT EXISTS ( -- column not exists (medadm_dosage_ratequantity_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'medadm_dosage_ratequantity_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationadministration ADD medadm_dosage_ratequantity_code varchar;   -- dosage/rateQuantity/code (varchar)
        END IF; -- column (medadm_dosage_ratequantity_code)

-- Hash column for comparison on data-bearing columns -------------------------------------------
        IF EXISTS ( -- column exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration' AND column_name = 'hash_index_col'
        ) THEN
            IF NOT EXISTS ( -- column exists
                SELECT 1 FROM information_schema.columns WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration' AND column_name = 'hash_index_col'
                AND trim(replace(replace(generation_expression::TEXT,'(',''),')','')) != trim(replace(replace('
	         COALESCE(db.to_char_immutable(medadm_id), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_identifier_use), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_identifier_type_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_identifier_type_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_identifier_type_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_identifier_type_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_identifier_type_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_identifier_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_identifier_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_identifier_start), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_identifier_end), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_encounter_ref), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_patient_ref), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_partof_ref), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_status), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_statusreason_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_statusreason_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_statusreason_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_statusreason_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_statusreason_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_category_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_category_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_category_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_category_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_category_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_medicationreference_ref), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_medicationcodeableconcept_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_medicationcodeableconcept_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_medicationcodeableconcept_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_medicationcodeableconcept_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_medicationcodeableconcept_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_supportinginformation_ref), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_supportinginformation_type), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_supportinginformation_identifier_use), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_supportinginformation_identifier_type_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_supportinginformation_identifier_type_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_supportinginformation_identifier_type_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_supportinginformation_identifier_type_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_supportinginformation_identifier_type_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_supportinginformation_identifier_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_supportinginformation_identifier_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_supportinginformation_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_effectivedatetime), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_effectiveperiod_start), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_effectiveperiod_end), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_performer_function_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_performer_function_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_performer_function_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_performer_function_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_performer_function_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_reasoncode_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_reasoncode_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_reasoncode_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_reasoncode_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_reasoncode_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_reasonreference_ref), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_reasonreference_type), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_reasonreference_identifier_use), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_reasonreference_identifier_type_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_reasonreference_identifier_type_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_reasonreference_identifier_type_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_reasonreference_identifier_type_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_reasonreference_identifier_type_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_reasonreference_identifier_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_reasonreference_identifier_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_reasonreference_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_request_ref), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_note_authorstring), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_note_authorreference_ref), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_note_authorreference_type), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_note_authorreference_identifier_use), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_note_authorreference_identifier_type_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_note_authorreference_identifier_type_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_note_authorreference_identifier_type_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_note_authorreference_identifier_type_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_note_authorreference_identifier_type_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_note_authorreference_identifier_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_note_authorreference_identifier_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_note_authorreference_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_note_time), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_note_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_dosage_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_dosage_site_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_dosage_site_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_dosage_site_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_dosage_site_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_dosage_site_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_dosage_route_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_dosage_route_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_dosage_route_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_dosage_route_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_dosage_route_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_dosage_method_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_dosage_method_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_dosage_method_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_dosage_method_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_dosage_method_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_dosage_dose_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_dosage_dose_unit), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_dosage_dose_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_dosage_dose_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_dosage_rateratio_numerator_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_dosage_rateratio_numerator_comparator), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_dosage_rateratio_numerator_unit), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_dosage_rateratio_numerator_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_dosage_rateratio_numerator_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_dosage_rateratio_denominator_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_dosage_rateratio_denominator_comparator), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_dosage_rateratio_denominator_unit), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_dosage_rateratio_denominator_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_dosage_rateratio_denominator_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_dosage_ratequantity_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_dosage_ratequantity_unit), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_dosage_ratequantity_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medadm_dosage_ratequantity_code), ''#NULL#'') || ''|||'' ||''#''
                ','(',''),')',''))
            ) THEN
            -- Delete the old hash column so that a new one can be created
            ALTER TABLE cds2db_in.medicationadministration DROP COLUMN hash_index_col;

            -- Creating the hash column
            ALTER TABLE cds2db_in.medicationadministration ADD
            hash_index_col TEXT GENERATED ALWAYS AS (
            md5(
	         COALESCE(db.to_char_immutable(medadm_id), '#NULL#') || '|||' || -- hash from: id (medadm_id)
          COALESCE(db.to_char_immutable(medadm_identifier_use), '#NULL#') || '|||' || -- hash from: identifier/use (medadm_identifier_use)
          COALESCE(db.to_char_immutable(medadm_identifier_type_system), '#NULL#') || '|||' || -- hash from: identifier/type/coding/system (medadm_identifier_type_system)
          COALESCE(db.to_char_immutable(medadm_identifier_type_version), '#NULL#') || '|||' || -- hash from: identifier/type/coding/version (medadm_identifier_type_version)
          COALESCE(db.to_char_immutable(medadm_identifier_type_code), '#NULL#') || '|||' || -- hash from: identifier/type/coding/code (medadm_identifier_type_code)
          COALESCE(db.to_char_immutable(medadm_identifier_type_display), '#NULL#') || '|||' || -- hash from: identifier/type/coding/display (medadm_identifier_type_display)
          COALESCE(db.to_char_immutable(medadm_identifier_type_text), '#NULL#') || '|||' || -- hash from: identifier/type/text (medadm_identifier_type_text)
          COALESCE(db.to_char_immutable(medadm_identifier_system), '#NULL#') || '|||' || -- hash from: identifier/system (medadm_identifier_system)
          COALESCE(db.to_char_immutable(medadm_identifier_value), '#NULL#') || '|||' || -- hash from: identifier/value (medadm_identifier_value)
          COALESCE(db.to_char_immutable(medadm_identifier_start), '#NULL#') || '|||' || -- hash from: identifier/start (medadm_identifier_start)
          COALESCE(db.to_char_immutable(medadm_identifier_end), '#NULL#') || '|||' || -- hash from: identifier/end (medadm_identifier_end)
          COALESCE(db.to_char_immutable(medadm_encounter_ref), '#NULL#') || '|||' || -- hash from: context/reference (medadm_encounter_ref)
          COALESCE(db.to_char_immutable(medadm_patient_ref), '#NULL#') || '|||' || -- hash from: subject/reference (medadm_patient_ref)
          COALESCE(db.to_char_immutable(medadm_partof_ref), '#NULL#') || '|||' || -- hash from: partOf/reference (medadm_partof_ref)
          COALESCE(db.to_char_immutable(medadm_status), '#NULL#') || '|||' || -- hash from: status (medadm_status)
          COALESCE(db.to_char_immutable(medadm_statusreason_system), '#NULL#') || '|||' || -- hash from: statusReason/coding/system (medadm_statusreason_system)
          COALESCE(db.to_char_immutable(medadm_statusreason_version), '#NULL#') || '|||' || -- hash from: statusReason/coding/version (medadm_statusreason_version)
          COALESCE(db.to_char_immutable(medadm_statusreason_code), '#NULL#') || '|||' || -- hash from: statusReason/coding/code (medadm_statusreason_code)
          COALESCE(db.to_char_immutable(medadm_statusreason_display), '#NULL#') || '|||' || -- hash from: statusReason/coding/display (medadm_statusreason_display)
          COALESCE(db.to_char_immutable(medadm_statusreason_text), '#NULL#') || '|||' || -- hash from: statusReason/text (medadm_statusreason_text)
          COALESCE(db.to_char_immutable(medadm_category_system), '#NULL#') || '|||' || -- hash from: category/coding/system (medadm_category_system)
          COALESCE(db.to_char_immutable(medadm_category_version), '#NULL#') || '|||' || -- hash from: category/coding/version (medadm_category_version)
          COALESCE(db.to_char_immutable(medadm_category_code), '#NULL#') || '|||' || -- hash from: category/coding/code (medadm_category_code)
          COALESCE(db.to_char_immutable(medadm_category_display), '#NULL#') || '|||' || -- hash from: category/coding/display (medadm_category_display)
          COALESCE(db.to_char_immutable(medadm_category_text), '#NULL#') || '|||' || -- hash from: category/text (medadm_category_text)
          COALESCE(db.to_char_immutable(medadm_medicationreference_ref), '#NULL#') || '|||' || -- hash from: medicationReference/reference (medadm_medicationreference_ref)
          COALESCE(db.to_char_immutable(medadm_medicationcodeableconcept_system), '#NULL#') || '|||' || -- hash from: medicationCodeableConcept/coding/system (medadm_medicationcodeableconcept_system)
          COALESCE(db.to_char_immutable(medadm_medicationcodeableconcept_version), '#NULL#') || '|||' || -- hash from: medicationCodeableConcept/coding/version (medadm_medicationcodeableconcept_version)
          COALESCE(db.to_char_immutable(medadm_medicationcodeableconcept_code), '#NULL#') || '|||' || -- hash from: medicationCodeableConcept/coding/code (medadm_medicationcodeableconcept_code)
          COALESCE(db.to_char_immutable(medadm_medicationcodeableconcept_display), '#NULL#') || '|||' || -- hash from: medicationCodeableConcept/coding/display (medadm_medicationcodeableconcept_display)
          COALESCE(db.to_char_immutable(medadm_medicationcodeableconcept_text), '#NULL#') || '|||' || -- hash from: medicationCodeableConcept/text (medadm_medicationcodeableconcept_text)
          COALESCE(db.to_char_immutable(medadm_supportinginformation_ref), '#NULL#') || '|||' || -- hash from: supportingInformation/reference (medadm_supportinginformation_ref)
          COALESCE(db.to_char_immutable(medadm_supportinginformation_type), '#NULL#') || '|||' || -- hash from: supportingInformation/type (medadm_supportinginformation_type)
          COALESCE(db.to_char_immutable(medadm_supportinginformation_identifier_use), '#NULL#') || '|||' || -- hash from: supportingInformation/identifier/use (medadm_supportinginformation_identifier_use)
          COALESCE(db.to_char_immutable(medadm_supportinginformation_identifier_type_system), '#NULL#') || '|||' || -- hash from: supportingInformation/identifier/type/coding/system (medadm_supportinginformation_identifier_type_system)
          COALESCE(db.to_char_immutable(medadm_supportinginformation_identifier_type_version), '#NULL#') || '|||' || -- hash from: supportingInformation/identifier/type/coding/version (medadm_supportinginformation_identifier_type_version)
          COALESCE(db.to_char_immutable(medadm_supportinginformation_identifier_type_code), '#NULL#') || '|||' || -- hash from: supportingInformation/identifier/type/coding/code (medadm_supportinginformation_identifier_type_code)
          COALESCE(db.to_char_immutable(medadm_supportinginformation_identifier_type_display), '#NULL#') || '|||' || -- hash from: supportingInformation/identifier/type/coding/display (medadm_supportinginformation_identifier_type_display)
          COALESCE(db.to_char_immutable(medadm_supportinginformation_identifier_type_text), '#NULL#') || '|||' || -- hash from: supportingInformation/identifier/type/text (medadm_supportinginformation_identifier_type_text)
          COALESCE(db.to_char_immutable(medadm_supportinginformation_identifier_system), '#NULL#') || '|||' || -- hash from: supportingInformation/identifier/system (medadm_supportinginformation_identifier_system)
          COALESCE(db.to_char_immutable(medadm_supportinginformation_identifier_value), '#NULL#') || '|||' || -- hash from: supportingInformation/identifier/value (medadm_supportinginformation_identifier_value)
          COALESCE(db.to_char_immutable(medadm_supportinginformation_display), '#NULL#') || '|||' || -- hash from: supportingInformation/display (medadm_supportinginformation_display)
          COALESCE(db.to_char_immutable(medadm_effectivedatetime), '#NULL#') || '|||' || -- hash from: effectiveDateTime (medadm_effectivedatetime)
          COALESCE(db.to_char_immutable(medadm_effectiveperiod_start), '#NULL#') || '|||' || -- hash from: effectivePeriod/start (medadm_effectiveperiod_start)
          COALESCE(db.to_char_immutable(medadm_effectiveperiod_end), '#NULL#') || '|||' || -- hash from: effectivePeriod/end (medadm_effectiveperiod_end)
          COALESCE(db.to_char_immutable(medadm_performer_function_system), '#NULL#') || '|||' || -- hash from: performer/function/coding/system (medadm_performer_function_system)
          COALESCE(db.to_char_immutable(medadm_performer_function_version), '#NULL#') || '|||' || -- hash from: performer/function/coding/version (medadm_performer_function_version)
          COALESCE(db.to_char_immutable(medadm_performer_function_code), '#NULL#') || '|||' || -- hash from: performer/function/coding/code (medadm_performer_function_code)
          COALESCE(db.to_char_immutable(medadm_performer_function_display), '#NULL#') || '|||' || -- hash from: performer/function/coding/display (medadm_performer_function_display)
          COALESCE(db.to_char_immutable(medadm_performer_function_text), '#NULL#') || '|||' || -- hash from: performer/function/text (medadm_performer_function_text)
          COALESCE(db.to_char_immutable(medadm_reasoncode_system), '#NULL#') || '|||' || -- hash from: reasonCode/coding/system (medadm_reasoncode_system)
          COALESCE(db.to_char_immutable(medadm_reasoncode_version), '#NULL#') || '|||' || -- hash from: reasonCode/coding/version (medadm_reasoncode_version)
          COALESCE(db.to_char_immutable(medadm_reasoncode_code), '#NULL#') || '|||' || -- hash from: reasonCode/coding/code (medadm_reasoncode_code)
          COALESCE(db.to_char_immutable(medadm_reasoncode_display), '#NULL#') || '|||' || -- hash from: reasonCode/coding/display (medadm_reasoncode_display)
          COALESCE(db.to_char_immutable(medadm_reasoncode_text), '#NULL#') || '|||' || -- hash from: reasonCode/text (medadm_reasoncode_text)
          COALESCE(db.to_char_immutable(medadm_reasonreference_ref), '#NULL#') || '|||' || -- hash from: reasonReference/reference (medadm_reasonreference_ref)
          COALESCE(db.to_char_immutable(medadm_reasonreference_type), '#NULL#') || '|||' || -- hash from: reasonReference/type (medadm_reasonreference_type)
          COALESCE(db.to_char_immutable(medadm_reasonreference_identifier_use), '#NULL#') || '|||' || -- hash from: reasonReference/identifier/use (medadm_reasonreference_identifier_use)
          COALESCE(db.to_char_immutable(medadm_reasonreference_identifier_type_system), '#NULL#') || '|||' || -- hash from: reasonReference/identifier/type/coding/system (medadm_reasonreference_identifier_type_system)
          COALESCE(db.to_char_immutable(medadm_reasonreference_identifier_type_version), '#NULL#') || '|||' || -- hash from: reasonReference/identifier/type/coding/version (medadm_reasonreference_identifier_type_version)
          COALESCE(db.to_char_immutable(medadm_reasonreference_identifier_type_code), '#NULL#') || '|||' || -- hash from: reasonReference/identifier/type/coding/code (medadm_reasonreference_identifier_type_code)
          COALESCE(db.to_char_immutable(medadm_reasonreference_identifier_type_display), '#NULL#') || '|||' || -- hash from: reasonReference/identifier/type/coding/display (medadm_reasonreference_identifier_type_display)
          COALESCE(db.to_char_immutable(medadm_reasonreference_identifier_type_text), '#NULL#') || '|||' || -- hash from: reasonReference/identifier/type/text (medadm_reasonreference_identifier_type_text)
          COALESCE(db.to_char_immutable(medadm_reasonreference_identifier_system), '#NULL#') || '|||' || -- hash from: reasonReference/identifier/system (medadm_reasonreference_identifier_system)
          COALESCE(db.to_char_immutable(medadm_reasonreference_identifier_value), '#NULL#') || '|||' || -- hash from: reasonReference/identifier/value (medadm_reasonreference_identifier_value)
          COALESCE(db.to_char_immutable(medadm_reasonreference_display), '#NULL#') || '|||' || -- hash from: reasonReference/display (medadm_reasonreference_display)
          COALESCE(db.to_char_immutable(medadm_request_ref), '#NULL#') || '|||' || -- hash from: request/reference (medadm_request_ref)
          COALESCE(db.to_char_immutable(medadm_note_authorstring), '#NULL#') || '|||' || -- hash from: note/authorString (medadm_note_authorstring)
          COALESCE(db.to_char_immutable(medadm_note_authorreference_ref), '#NULL#') || '|||' || -- hash from: note/authorReference/reference (medadm_note_authorreference_ref)
          COALESCE(db.to_char_immutable(medadm_note_authorreference_type), '#NULL#') || '|||' || -- hash from: note/authorReference/type (medadm_note_authorreference_type)
          COALESCE(db.to_char_immutable(medadm_note_authorreference_identifier_use), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/use (medadm_note_authorreference_identifier_use)
          COALESCE(db.to_char_immutable(medadm_note_authorreference_identifier_type_system), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/type/coding/system (medadm_note_authorreference_identifier_type_system)
          COALESCE(db.to_char_immutable(medadm_note_authorreference_identifier_type_version), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/type/coding/version (medadm_note_authorreference_identifier_type_version)
          COALESCE(db.to_char_immutable(medadm_note_authorreference_identifier_type_code), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/type/coding/code (medadm_note_authorreference_identifier_type_code)
          COALESCE(db.to_char_immutable(medadm_note_authorreference_identifier_type_display), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/type/coding/display (medadm_note_authorreference_identifier_type_display)
          COALESCE(db.to_char_immutable(medadm_note_authorreference_identifier_type_text), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/type/text (medadm_note_authorreference_identifier_type_text)
          COALESCE(db.to_char_immutable(medadm_note_authorreference_identifier_system), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/system (medadm_note_authorreference_identifier_system)
          COALESCE(db.to_char_immutable(medadm_note_authorreference_identifier_value), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/value (medadm_note_authorreference_identifier_value)
          COALESCE(db.to_char_immutable(medadm_note_authorreference_display), '#NULL#') || '|||' || -- hash from: note/authorReference/display (medadm_note_authorreference_display)
          COALESCE(db.to_char_immutable(medadm_note_time), '#NULL#') || '|||' || -- hash from: note/time (medadm_note_time)
          COALESCE(db.to_char_immutable(medadm_note_text), '#NULL#') || '|||' || -- hash from: note/text (medadm_note_text)
          COALESCE(db.to_char_immutable(medadm_dosage_text), '#NULL#') || '|||' || -- hash from: dosage/text (medadm_dosage_text)
          COALESCE(db.to_char_immutable(medadm_dosage_site_system), '#NULL#') || '|||' || -- hash from: dosage/site/coding/system (medadm_dosage_site_system)
          COALESCE(db.to_char_immutable(medadm_dosage_site_version), '#NULL#') || '|||' || -- hash from: dosage/site/coding/version (medadm_dosage_site_version)
          COALESCE(db.to_char_immutable(medadm_dosage_site_code), '#NULL#') || '|||' || -- hash from: dosage/site/coding/code (medadm_dosage_site_code)
          COALESCE(db.to_char_immutable(medadm_dosage_site_display), '#NULL#') || '|||' || -- hash from: dosage/site/coding/display (medadm_dosage_site_display)
          COALESCE(db.to_char_immutable(medadm_dosage_site_text), '#NULL#') || '|||' || -- hash from: dosage/site/text (medadm_dosage_site_text)
          COALESCE(db.to_char_immutable(medadm_dosage_route_system), '#NULL#') || '|||' || -- hash from: dosage/route/coding/system (medadm_dosage_route_system)
          COALESCE(db.to_char_immutable(medadm_dosage_route_version), '#NULL#') || '|||' || -- hash from: dosage/route/coding/version (medadm_dosage_route_version)
          COALESCE(db.to_char_immutable(medadm_dosage_route_code), '#NULL#') || '|||' || -- hash from: dosage/route/coding/code (medadm_dosage_route_code)
          COALESCE(db.to_char_immutable(medadm_dosage_route_display), '#NULL#') || '|||' || -- hash from: dosage/route/coding/display (medadm_dosage_route_display)
          COALESCE(db.to_char_immutable(medadm_dosage_route_text), '#NULL#') || '|||' || -- hash from: dosage/route/text (medadm_dosage_route_text)
          COALESCE(db.to_char_immutable(medadm_dosage_method_system), '#NULL#') || '|||' || -- hash from: dosage/method/coding/system (medadm_dosage_method_system)
          COALESCE(db.to_char_immutable(medadm_dosage_method_version), '#NULL#') || '|||' || -- hash from: dosage/method/coding/version (medadm_dosage_method_version)
          COALESCE(db.to_char_immutable(medadm_dosage_method_code), '#NULL#') || '|||' || -- hash from: dosage/method/coding/code (medadm_dosage_method_code)
          COALESCE(db.to_char_immutable(medadm_dosage_method_display), '#NULL#') || '|||' || -- hash from: dosage/method/coding/display (medadm_dosage_method_display)
          COALESCE(db.to_char_immutable(medadm_dosage_method_text), '#NULL#') || '|||' || -- hash from: dosage/method/text (medadm_dosage_method_text)
          COALESCE(db.to_char_immutable(medadm_dosage_dose_value), '#NULL#') || '|||' || -- hash from: dosage/dose/value (medadm_dosage_dose_value)
          COALESCE(db.to_char_immutable(medadm_dosage_dose_unit), '#NULL#') || '|||' || -- hash from: dosage/dose/unit (medadm_dosage_dose_unit)
          COALESCE(db.to_char_immutable(medadm_dosage_dose_system), '#NULL#') || '|||' || -- hash from: dosage/dose/system (medadm_dosage_dose_system)
          COALESCE(db.to_char_immutable(medadm_dosage_dose_code), '#NULL#') || '|||' || -- hash from: dosage/dose/code (medadm_dosage_dose_code)
          COALESCE(db.to_char_immutable(medadm_dosage_rateratio_numerator_value), '#NULL#') || '|||' || -- hash from: dosage/rateRatio/numerator/value (medadm_dosage_rateratio_numerator_value)
          COALESCE(db.to_char_immutable(medadm_dosage_rateratio_numerator_comparator), '#NULL#') || '|||' || -- hash from: dosage/rateRatio/numerator/comparator (medadm_dosage_rateratio_numerator_comparator)
          COALESCE(db.to_char_immutable(medadm_dosage_rateratio_numerator_unit), '#NULL#') || '|||' || -- hash from: dosage/rateRatio/numerator/unit (medadm_dosage_rateratio_numerator_unit)
          COALESCE(db.to_char_immutable(medadm_dosage_rateratio_numerator_system), '#NULL#') || '|||' || -- hash from: dosage/rateRatio/numerator/system (medadm_dosage_rateratio_numerator_system)
          COALESCE(db.to_char_immutable(medadm_dosage_rateratio_numerator_code), '#NULL#') || '|||' || -- hash from: dosage/rateRatio/numerator/code (medadm_dosage_rateratio_numerator_code)
          COALESCE(db.to_char_immutable(medadm_dosage_rateratio_denominator_value), '#NULL#') || '|||' || -- hash from: dosage/rateRatio/denominator/value (medadm_dosage_rateratio_denominator_value)
          COALESCE(db.to_char_immutable(medadm_dosage_rateratio_denominator_comparator), '#NULL#') || '|||' || -- hash from: dosage/rateRatio/denominator/comparator (medadm_dosage_rateratio_denominator_comparator)
          COALESCE(db.to_char_immutable(medadm_dosage_rateratio_denominator_unit), '#NULL#') || '|||' || -- hash from: dosage/rateRatio/denominator/unit (medadm_dosage_rateratio_denominator_unit)
          COALESCE(db.to_char_immutable(medadm_dosage_rateratio_denominator_system), '#NULL#') || '|||' || -- hash from: dosage/rateRatio/denominator/system (medadm_dosage_rateratio_denominator_system)
          COALESCE(db.to_char_immutable(medadm_dosage_rateratio_denominator_code), '#NULL#') || '|||' || -- hash from: dosage/rateRatio/denominator/code (medadm_dosage_rateratio_denominator_code)
          COALESCE(db.to_char_immutable(medadm_dosage_ratequantity_value), '#NULL#') || '|||' || -- hash from: dosage/rateQuantity/value (medadm_dosage_ratequantity_value)
          COALESCE(db.to_char_immutable(medadm_dosage_ratequantity_unit), '#NULL#') || '|||' || -- hash from: dosage/rateQuantity/unit (medadm_dosage_ratequantity_unit)
          COALESCE(db.to_char_immutable(medadm_dosage_ratequantity_system), '#NULL#') || '|||' || -- hash from: dosage/rateQuantity/system (medadm_dosage_ratequantity_system)
          COALESCE(db.to_char_immutable(medadm_dosage_ratequantity_code), '#NULL#') || '|||' || -- hash from: dosage/rateQuantity/code (medadm_dosage_ratequantity_code)
                 '#'
               )
            ) STORED; -- Column for hash value for comparing FHIR data - collion check in second step hash_index_col
            END IF; -- currend hash definition
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationadministration'
            AND column_name = 'hash_index_col'
        ) THEN
            -- Creating the hash column
            ALTER TABLE cds2db_in.medicationadministration ADD
            hash_index_col TEXT GENERATED ALWAYS AS (
            md5(
	         COALESCE(db.to_char_immutable(medadm_id), '#NULL#') || '|||' || -- hash from: id (medadm_id)
          COALESCE(db.to_char_immutable(medadm_identifier_use), '#NULL#') || '|||' || -- hash from: identifier/use (medadm_identifier_use)
          COALESCE(db.to_char_immutable(medadm_identifier_type_system), '#NULL#') || '|||' || -- hash from: identifier/type/coding/system (medadm_identifier_type_system)
          COALESCE(db.to_char_immutable(medadm_identifier_type_version), '#NULL#') || '|||' || -- hash from: identifier/type/coding/version (medadm_identifier_type_version)
          COALESCE(db.to_char_immutable(medadm_identifier_type_code), '#NULL#') || '|||' || -- hash from: identifier/type/coding/code (medadm_identifier_type_code)
          COALESCE(db.to_char_immutable(medadm_identifier_type_display), '#NULL#') || '|||' || -- hash from: identifier/type/coding/display (medadm_identifier_type_display)
          COALESCE(db.to_char_immutable(medadm_identifier_type_text), '#NULL#') || '|||' || -- hash from: identifier/type/text (medadm_identifier_type_text)
          COALESCE(db.to_char_immutable(medadm_identifier_system), '#NULL#') || '|||' || -- hash from: identifier/system (medadm_identifier_system)
          COALESCE(db.to_char_immutable(medadm_identifier_value), '#NULL#') || '|||' || -- hash from: identifier/value (medadm_identifier_value)
          COALESCE(db.to_char_immutable(medadm_identifier_start), '#NULL#') || '|||' || -- hash from: identifier/start (medadm_identifier_start)
          COALESCE(db.to_char_immutable(medadm_identifier_end), '#NULL#') || '|||' || -- hash from: identifier/end (medadm_identifier_end)
          COALESCE(db.to_char_immutable(medadm_encounter_ref), '#NULL#') || '|||' || -- hash from: context/reference (medadm_encounter_ref)
          COALESCE(db.to_char_immutable(medadm_patient_ref), '#NULL#') || '|||' || -- hash from: subject/reference (medadm_patient_ref)
          COALESCE(db.to_char_immutable(medadm_partof_ref), '#NULL#') || '|||' || -- hash from: partOf/reference (medadm_partof_ref)
          COALESCE(db.to_char_immutable(medadm_status), '#NULL#') || '|||' || -- hash from: status (medadm_status)
          COALESCE(db.to_char_immutable(medadm_statusreason_system), '#NULL#') || '|||' || -- hash from: statusReason/coding/system (medadm_statusreason_system)
          COALESCE(db.to_char_immutable(medadm_statusreason_version), '#NULL#') || '|||' || -- hash from: statusReason/coding/version (medadm_statusreason_version)
          COALESCE(db.to_char_immutable(medadm_statusreason_code), '#NULL#') || '|||' || -- hash from: statusReason/coding/code (medadm_statusreason_code)
          COALESCE(db.to_char_immutable(medadm_statusreason_display), '#NULL#') || '|||' || -- hash from: statusReason/coding/display (medadm_statusreason_display)
          COALESCE(db.to_char_immutable(medadm_statusreason_text), '#NULL#') || '|||' || -- hash from: statusReason/text (medadm_statusreason_text)
          COALESCE(db.to_char_immutable(medadm_category_system), '#NULL#') || '|||' || -- hash from: category/coding/system (medadm_category_system)
          COALESCE(db.to_char_immutable(medadm_category_version), '#NULL#') || '|||' || -- hash from: category/coding/version (medadm_category_version)
          COALESCE(db.to_char_immutable(medadm_category_code), '#NULL#') || '|||' || -- hash from: category/coding/code (medadm_category_code)
          COALESCE(db.to_char_immutable(medadm_category_display), '#NULL#') || '|||' || -- hash from: category/coding/display (medadm_category_display)
          COALESCE(db.to_char_immutable(medadm_category_text), '#NULL#') || '|||' || -- hash from: category/text (medadm_category_text)
          COALESCE(db.to_char_immutable(medadm_medicationreference_ref), '#NULL#') || '|||' || -- hash from: medicationReference/reference (medadm_medicationreference_ref)
          COALESCE(db.to_char_immutable(medadm_medicationcodeableconcept_system), '#NULL#') || '|||' || -- hash from: medicationCodeableConcept/coding/system (medadm_medicationcodeableconcept_system)
          COALESCE(db.to_char_immutable(medadm_medicationcodeableconcept_version), '#NULL#') || '|||' || -- hash from: medicationCodeableConcept/coding/version (medadm_medicationcodeableconcept_version)
          COALESCE(db.to_char_immutable(medadm_medicationcodeableconcept_code), '#NULL#') || '|||' || -- hash from: medicationCodeableConcept/coding/code (medadm_medicationcodeableconcept_code)
          COALESCE(db.to_char_immutable(medadm_medicationcodeableconcept_display), '#NULL#') || '|||' || -- hash from: medicationCodeableConcept/coding/display (medadm_medicationcodeableconcept_display)
          COALESCE(db.to_char_immutable(medadm_medicationcodeableconcept_text), '#NULL#') || '|||' || -- hash from: medicationCodeableConcept/text (medadm_medicationcodeableconcept_text)
          COALESCE(db.to_char_immutable(medadm_supportinginformation_ref), '#NULL#') || '|||' || -- hash from: supportingInformation/reference (medadm_supportinginformation_ref)
          COALESCE(db.to_char_immutable(medadm_supportinginformation_type), '#NULL#') || '|||' || -- hash from: supportingInformation/type (medadm_supportinginformation_type)
          COALESCE(db.to_char_immutable(medadm_supportinginformation_identifier_use), '#NULL#') || '|||' || -- hash from: supportingInformation/identifier/use (medadm_supportinginformation_identifier_use)
          COALESCE(db.to_char_immutable(medadm_supportinginformation_identifier_type_system), '#NULL#') || '|||' || -- hash from: supportingInformation/identifier/type/coding/system (medadm_supportinginformation_identifier_type_system)
          COALESCE(db.to_char_immutable(medadm_supportinginformation_identifier_type_version), '#NULL#') || '|||' || -- hash from: supportingInformation/identifier/type/coding/version (medadm_supportinginformation_identifier_type_version)
          COALESCE(db.to_char_immutable(medadm_supportinginformation_identifier_type_code), '#NULL#') || '|||' || -- hash from: supportingInformation/identifier/type/coding/code (medadm_supportinginformation_identifier_type_code)
          COALESCE(db.to_char_immutable(medadm_supportinginformation_identifier_type_display), '#NULL#') || '|||' || -- hash from: supportingInformation/identifier/type/coding/display (medadm_supportinginformation_identifier_type_display)
          COALESCE(db.to_char_immutable(medadm_supportinginformation_identifier_type_text), '#NULL#') || '|||' || -- hash from: supportingInformation/identifier/type/text (medadm_supportinginformation_identifier_type_text)
          COALESCE(db.to_char_immutable(medadm_supportinginformation_identifier_system), '#NULL#') || '|||' || -- hash from: supportingInformation/identifier/system (medadm_supportinginformation_identifier_system)
          COALESCE(db.to_char_immutable(medadm_supportinginformation_identifier_value), '#NULL#') || '|||' || -- hash from: supportingInformation/identifier/value (medadm_supportinginformation_identifier_value)
          COALESCE(db.to_char_immutable(medadm_supportinginformation_display), '#NULL#') || '|||' || -- hash from: supportingInformation/display (medadm_supportinginformation_display)
          COALESCE(db.to_char_immutable(medadm_effectivedatetime), '#NULL#') || '|||' || -- hash from: effectiveDateTime (medadm_effectivedatetime)
          COALESCE(db.to_char_immutable(medadm_effectiveperiod_start), '#NULL#') || '|||' || -- hash from: effectivePeriod/start (medadm_effectiveperiod_start)
          COALESCE(db.to_char_immutable(medadm_effectiveperiod_end), '#NULL#') || '|||' || -- hash from: effectivePeriod/end (medadm_effectiveperiod_end)
          COALESCE(db.to_char_immutable(medadm_performer_function_system), '#NULL#') || '|||' || -- hash from: performer/function/coding/system (medadm_performer_function_system)
          COALESCE(db.to_char_immutable(medadm_performer_function_version), '#NULL#') || '|||' || -- hash from: performer/function/coding/version (medadm_performer_function_version)
          COALESCE(db.to_char_immutable(medadm_performer_function_code), '#NULL#') || '|||' || -- hash from: performer/function/coding/code (medadm_performer_function_code)
          COALESCE(db.to_char_immutable(medadm_performer_function_display), '#NULL#') || '|||' || -- hash from: performer/function/coding/display (medadm_performer_function_display)
          COALESCE(db.to_char_immutable(medadm_performer_function_text), '#NULL#') || '|||' || -- hash from: performer/function/text (medadm_performer_function_text)
          COALESCE(db.to_char_immutable(medadm_reasoncode_system), '#NULL#') || '|||' || -- hash from: reasonCode/coding/system (medadm_reasoncode_system)
          COALESCE(db.to_char_immutable(medadm_reasoncode_version), '#NULL#') || '|||' || -- hash from: reasonCode/coding/version (medadm_reasoncode_version)
          COALESCE(db.to_char_immutable(medadm_reasoncode_code), '#NULL#') || '|||' || -- hash from: reasonCode/coding/code (medadm_reasoncode_code)
          COALESCE(db.to_char_immutable(medadm_reasoncode_display), '#NULL#') || '|||' || -- hash from: reasonCode/coding/display (medadm_reasoncode_display)
          COALESCE(db.to_char_immutable(medadm_reasoncode_text), '#NULL#') || '|||' || -- hash from: reasonCode/text (medadm_reasoncode_text)
          COALESCE(db.to_char_immutable(medadm_reasonreference_ref), '#NULL#') || '|||' || -- hash from: reasonReference/reference (medadm_reasonreference_ref)
          COALESCE(db.to_char_immutable(medadm_reasonreference_type), '#NULL#') || '|||' || -- hash from: reasonReference/type (medadm_reasonreference_type)
          COALESCE(db.to_char_immutable(medadm_reasonreference_identifier_use), '#NULL#') || '|||' || -- hash from: reasonReference/identifier/use (medadm_reasonreference_identifier_use)
          COALESCE(db.to_char_immutable(medadm_reasonreference_identifier_type_system), '#NULL#') || '|||' || -- hash from: reasonReference/identifier/type/coding/system (medadm_reasonreference_identifier_type_system)
          COALESCE(db.to_char_immutable(medadm_reasonreference_identifier_type_version), '#NULL#') || '|||' || -- hash from: reasonReference/identifier/type/coding/version (medadm_reasonreference_identifier_type_version)
          COALESCE(db.to_char_immutable(medadm_reasonreference_identifier_type_code), '#NULL#') || '|||' || -- hash from: reasonReference/identifier/type/coding/code (medadm_reasonreference_identifier_type_code)
          COALESCE(db.to_char_immutable(medadm_reasonreference_identifier_type_display), '#NULL#') || '|||' || -- hash from: reasonReference/identifier/type/coding/display (medadm_reasonreference_identifier_type_display)
          COALESCE(db.to_char_immutable(medadm_reasonreference_identifier_type_text), '#NULL#') || '|||' || -- hash from: reasonReference/identifier/type/text (medadm_reasonreference_identifier_type_text)
          COALESCE(db.to_char_immutable(medadm_reasonreference_identifier_system), '#NULL#') || '|||' || -- hash from: reasonReference/identifier/system (medadm_reasonreference_identifier_system)
          COALESCE(db.to_char_immutable(medadm_reasonreference_identifier_value), '#NULL#') || '|||' || -- hash from: reasonReference/identifier/value (medadm_reasonreference_identifier_value)
          COALESCE(db.to_char_immutable(medadm_reasonreference_display), '#NULL#') || '|||' || -- hash from: reasonReference/display (medadm_reasonreference_display)
          COALESCE(db.to_char_immutable(medadm_request_ref), '#NULL#') || '|||' || -- hash from: request/reference (medadm_request_ref)
          COALESCE(db.to_char_immutable(medadm_note_authorstring), '#NULL#') || '|||' || -- hash from: note/authorString (medadm_note_authorstring)
          COALESCE(db.to_char_immutable(medadm_note_authorreference_ref), '#NULL#') || '|||' || -- hash from: note/authorReference/reference (medadm_note_authorreference_ref)
          COALESCE(db.to_char_immutable(medadm_note_authorreference_type), '#NULL#') || '|||' || -- hash from: note/authorReference/type (medadm_note_authorreference_type)
          COALESCE(db.to_char_immutable(medadm_note_authorreference_identifier_use), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/use (medadm_note_authorreference_identifier_use)
          COALESCE(db.to_char_immutable(medadm_note_authorreference_identifier_type_system), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/type/coding/system (medadm_note_authorreference_identifier_type_system)
          COALESCE(db.to_char_immutable(medadm_note_authorreference_identifier_type_version), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/type/coding/version (medadm_note_authorreference_identifier_type_version)
          COALESCE(db.to_char_immutable(medadm_note_authorreference_identifier_type_code), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/type/coding/code (medadm_note_authorreference_identifier_type_code)
          COALESCE(db.to_char_immutable(medadm_note_authorreference_identifier_type_display), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/type/coding/display (medadm_note_authorreference_identifier_type_display)
          COALESCE(db.to_char_immutable(medadm_note_authorreference_identifier_type_text), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/type/text (medadm_note_authorreference_identifier_type_text)
          COALESCE(db.to_char_immutable(medadm_note_authorreference_identifier_system), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/system (medadm_note_authorreference_identifier_system)
          COALESCE(db.to_char_immutable(medadm_note_authorreference_identifier_value), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/value (medadm_note_authorreference_identifier_value)
          COALESCE(db.to_char_immutable(medadm_note_authorreference_display), '#NULL#') || '|||' || -- hash from: note/authorReference/display (medadm_note_authorreference_display)
          COALESCE(db.to_char_immutable(medadm_note_time), '#NULL#') || '|||' || -- hash from: note/time (medadm_note_time)
          COALESCE(db.to_char_immutable(medadm_note_text), '#NULL#') || '|||' || -- hash from: note/text (medadm_note_text)
          COALESCE(db.to_char_immutable(medadm_dosage_text), '#NULL#') || '|||' || -- hash from: dosage/text (medadm_dosage_text)
          COALESCE(db.to_char_immutable(medadm_dosage_site_system), '#NULL#') || '|||' || -- hash from: dosage/site/coding/system (medadm_dosage_site_system)
          COALESCE(db.to_char_immutable(medadm_dosage_site_version), '#NULL#') || '|||' || -- hash from: dosage/site/coding/version (medadm_dosage_site_version)
          COALESCE(db.to_char_immutable(medadm_dosage_site_code), '#NULL#') || '|||' || -- hash from: dosage/site/coding/code (medadm_dosage_site_code)
          COALESCE(db.to_char_immutable(medadm_dosage_site_display), '#NULL#') || '|||' || -- hash from: dosage/site/coding/display (medadm_dosage_site_display)
          COALESCE(db.to_char_immutable(medadm_dosage_site_text), '#NULL#') || '|||' || -- hash from: dosage/site/text (medadm_dosage_site_text)
          COALESCE(db.to_char_immutable(medadm_dosage_route_system), '#NULL#') || '|||' || -- hash from: dosage/route/coding/system (medadm_dosage_route_system)
          COALESCE(db.to_char_immutable(medadm_dosage_route_version), '#NULL#') || '|||' || -- hash from: dosage/route/coding/version (medadm_dosage_route_version)
          COALESCE(db.to_char_immutable(medadm_dosage_route_code), '#NULL#') || '|||' || -- hash from: dosage/route/coding/code (medadm_dosage_route_code)
          COALESCE(db.to_char_immutable(medadm_dosage_route_display), '#NULL#') || '|||' || -- hash from: dosage/route/coding/display (medadm_dosage_route_display)
          COALESCE(db.to_char_immutable(medadm_dosage_route_text), '#NULL#') || '|||' || -- hash from: dosage/route/text (medadm_dosage_route_text)
          COALESCE(db.to_char_immutable(medadm_dosage_method_system), '#NULL#') || '|||' || -- hash from: dosage/method/coding/system (medadm_dosage_method_system)
          COALESCE(db.to_char_immutable(medadm_dosage_method_version), '#NULL#') || '|||' || -- hash from: dosage/method/coding/version (medadm_dosage_method_version)
          COALESCE(db.to_char_immutable(medadm_dosage_method_code), '#NULL#') || '|||' || -- hash from: dosage/method/coding/code (medadm_dosage_method_code)
          COALESCE(db.to_char_immutable(medadm_dosage_method_display), '#NULL#') || '|||' || -- hash from: dosage/method/coding/display (medadm_dosage_method_display)
          COALESCE(db.to_char_immutable(medadm_dosage_method_text), '#NULL#') || '|||' || -- hash from: dosage/method/text (medadm_dosage_method_text)
          COALESCE(db.to_char_immutable(medadm_dosage_dose_value), '#NULL#') || '|||' || -- hash from: dosage/dose/value (medadm_dosage_dose_value)
          COALESCE(db.to_char_immutable(medadm_dosage_dose_unit), '#NULL#') || '|||' || -- hash from: dosage/dose/unit (medadm_dosage_dose_unit)
          COALESCE(db.to_char_immutable(medadm_dosage_dose_system), '#NULL#') || '|||' || -- hash from: dosage/dose/system (medadm_dosage_dose_system)
          COALESCE(db.to_char_immutable(medadm_dosage_dose_code), '#NULL#') || '|||' || -- hash from: dosage/dose/code (medadm_dosage_dose_code)
          COALESCE(db.to_char_immutable(medadm_dosage_rateratio_numerator_value), '#NULL#') || '|||' || -- hash from: dosage/rateRatio/numerator/value (medadm_dosage_rateratio_numerator_value)
          COALESCE(db.to_char_immutable(medadm_dosage_rateratio_numerator_comparator), '#NULL#') || '|||' || -- hash from: dosage/rateRatio/numerator/comparator (medadm_dosage_rateratio_numerator_comparator)
          COALESCE(db.to_char_immutable(medadm_dosage_rateratio_numerator_unit), '#NULL#') || '|||' || -- hash from: dosage/rateRatio/numerator/unit (medadm_dosage_rateratio_numerator_unit)
          COALESCE(db.to_char_immutable(medadm_dosage_rateratio_numerator_system), '#NULL#') || '|||' || -- hash from: dosage/rateRatio/numerator/system (medadm_dosage_rateratio_numerator_system)
          COALESCE(db.to_char_immutable(medadm_dosage_rateratio_numerator_code), '#NULL#') || '|||' || -- hash from: dosage/rateRatio/numerator/code (medadm_dosage_rateratio_numerator_code)
          COALESCE(db.to_char_immutable(medadm_dosage_rateratio_denominator_value), '#NULL#') || '|||' || -- hash from: dosage/rateRatio/denominator/value (medadm_dosage_rateratio_denominator_value)
          COALESCE(db.to_char_immutable(medadm_dosage_rateratio_denominator_comparator), '#NULL#') || '|||' || -- hash from: dosage/rateRatio/denominator/comparator (medadm_dosage_rateratio_denominator_comparator)
          COALESCE(db.to_char_immutable(medadm_dosage_rateratio_denominator_unit), '#NULL#') || '|||' || -- hash from: dosage/rateRatio/denominator/unit (medadm_dosage_rateratio_denominator_unit)
          COALESCE(db.to_char_immutable(medadm_dosage_rateratio_denominator_system), '#NULL#') || '|||' || -- hash from: dosage/rateRatio/denominator/system (medadm_dosage_rateratio_denominator_system)
          COALESCE(db.to_char_immutable(medadm_dosage_rateratio_denominator_code), '#NULL#') || '|||' || -- hash from: dosage/rateRatio/denominator/code (medadm_dosage_rateratio_denominator_code)
          COALESCE(db.to_char_immutable(medadm_dosage_ratequantity_value), '#NULL#') || '|||' || -- hash from: dosage/rateQuantity/value (medadm_dosage_ratequantity_value)
          COALESCE(db.to_char_immutable(medadm_dosage_ratequantity_unit), '#NULL#') || '|||' || -- hash from: dosage/rateQuantity/unit (medadm_dosage_ratequantity_unit)
          COALESCE(db.to_char_immutable(medadm_dosage_ratequantity_system), '#NULL#') || '|||' || -- hash from: dosage/rateQuantity/system (medadm_dosage_ratequantity_system)
          COALESCE(db.to_char_immutable(medadm_dosage_ratequantity_code), '#NULL#') || '|||' || -- hash from: dosage/rateQuantity/code (medadm_dosage_ratequantity_code)
                 '#'
               )
            ) STORED; -- Column for hash value for comparing FHIR data - collion check in second step hash_index_col
        END IF; -- column
    END IF; -- Table
END
$$;
-- Table "medicationstatement" in schema "cds2db_in"
-------------------------------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS cds2db_in.medicationstatement (
  medicationstatement_id int PRIMARY KEY DEFAULT nextval('db.db_seq') -- Primary key of the entity
);

DO
$$
DECLARE
    IF EXISTS ( -- Table exists
        SELECT 1 FROM information_schema.columns 
        WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
    ) THEN
        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'input_datetime'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medicationstatement_raw_id int NOT NULL; -- Primary key of the corresponding raw table
            NULL;
        END IF; -- column

-- Organizational items - fixed for each database table -----------------------------------------
        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'input_datetime'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD input_datetime TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP; -- Time at which data record was created
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'last_check_datetime'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD last_check_datetime TIMESTAMP DEFAULT NULL; -- Time at which data record was last checked
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'current_dataset_status'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD current_dataset_status VARCHAR DEFAULT 'input'; -- Processing status of the data record
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'input_processing_nr'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD input_processing_nr INT; -- (First) Processing number of the data record
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'last_processing_nr'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD last_processing_nr INT; -- Last processing number of the data record
        END IF; -- column

-- Data-leading columns -------------------------------------------------------------------------
        IF NOT EXISTS ( -- column not exists (medstat_id)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_id'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_id varchar;   -- id (varchar)
        END IF; -- column (medstat_id)
        IF NOT EXISTS ( -- column not exists (medstat_meta_versionid)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_meta_versionid'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_meta_versionid varchar;   -- meta/versionId (varchar)
        END IF; -- column (medstat_meta_versionid)
        IF NOT EXISTS ( -- column not exists (medstat_meta_lastupdated)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_meta_lastupdated'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_meta_lastupdated timestamp;   -- meta/lastUpdated (timestamp)
        END IF; -- column (medstat_meta_lastupdated)
        IF NOT EXISTS ( -- column not exists (medstat_meta_profile)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_meta_profile'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_meta_profile varchar;   -- meta/profile (varchar)
        END IF; -- column (medstat_meta_profile)
        IF NOT EXISTS ( -- column not exists (medstat_identifier_use)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_identifier_use'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_identifier_use varchar;   -- identifier/use (varchar)
        END IF; -- column (medstat_identifier_use)
        IF NOT EXISTS ( -- column not exists (medstat_identifier_type_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_identifier_type_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_identifier_type_system varchar;   -- identifier/type/coding/system (varchar)
        END IF; -- column (medstat_identifier_type_system)
        IF NOT EXISTS ( -- column not exists (medstat_identifier_type_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_identifier_type_version'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_identifier_type_version varchar;   -- identifier/type/coding/version (varchar)
        END IF; -- column (medstat_identifier_type_version)
        IF NOT EXISTS ( -- column not exists (medstat_identifier_type_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_identifier_type_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_identifier_type_code varchar;   -- identifier/type/coding/code (varchar)
        END IF; -- column (medstat_identifier_type_code)
        IF NOT EXISTS ( -- column not exists (medstat_identifier_type_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_identifier_type_display'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_identifier_type_display varchar;   -- identifier/type/coding/display (varchar)
        END IF; -- column (medstat_identifier_type_display)
        IF NOT EXISTS ( -- column not exists (medstat_identifier_type_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_identifier_type_text'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_identifier_type_text varchar;   -- identifier/type/text (varchar)
        END IF; -- column (medstat_identifier_type_text)
        IF NOT EXISTS ( -- column not exists (medstat_identifier_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_identifier_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_identifier_system varchar;   -- identifier/system (varchar)
        END IF; -- column (medstat_identifier_system)
        IF NOT EXISTS ( -- column not exists (medstat_identifier_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_identifier_value'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_identifier_value varchar;   -- identifier/value (varchar)
        END IF; -- column (medstat_identifier_value)
        IF NOT EXISTS ( -- column not exists (medstat_identifier_start)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_identifier_start'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_identifier_start timestamp;   -- identifier/start (timestamp)
        END IF; -- column (medstat_identifier_start)
        IF NOT EXISTS ( -- column not exists (medstat_identifier_end)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_identifier_end'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_identifier_end timestamp;   -- identifier/end (timestamp)
        END IF; -- column (medstat_identifier_end)
        IF NOT EXISTS ( -- column not exists (medstat_encounter_ref)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_encounter_ref'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_encounter_ref varchar;   -- context/reference (varchar)
        END IF; -- column (medstat_encounter_ref)
        IF NOT EXISTS ( -- column not exists (medstat_patient_ref)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_patient_ref'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_patient_ref varchar;   -- subject/reference (varchar)
        END IF; -- column (medstat_patient_ref)
        IF NOT EXISTS ( -- column not exists (medstat_partof_ref)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_partof_ref'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_partof_ref varchar;   -- partOf/reference (varchar)
        END IF; -- column (medstat_partof_ref)
        IF NOT EXISTS ( -- column not exists (medstat_basedon_ref)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_basedon_ref'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_basedon_ref varchar;   -- basedOn/reference (varchar)
        END IF; -- column (medstat_basedon_ref)
        IF NOT EXISTS ( -- column not exists (medstat_basedon_type)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_basedon_type'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_basedon_type varchar;   -- basedOn/type (varchar)
        END IF; -- column (medstat_basedon_type)
        IF NOT EXISTS ( -- column not exists (medstat_basedon_identifier_use)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_basedon_identifier_use'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_basedon_identifier_use varchar;   -- basedOn/identifier/use (varchar)
        END IF; -- column (medstat_basedon_identifier_use)
        IF NOT EXISTS ( -- column not exists (medstat_basedon_identifier_type_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_basedon_identifier_type_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_basedon_identifier_type_system varchar;   -- basedOn/identifier/type/coding/system (varchar)
        END IF; -- column (medstat_basedon_identifier_type_system)
        IF NOT EXISTS ( -- column not exists (medstat_basedon_identifier_type_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_basedon_identifier_type_version'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_basedon_identifier_type_version varchar;   -- basedOn/identifier/type/coding/version (varchar)
        END IF; -- column (medstat_basedon_identifier_type_version)
        IF NOT EXISTS ( -- column not exists (medstat_basedon_identifier_type_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_basedon_identifier_type_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_basedon_identifier_type_code varchar;   -- basedOn/identifier/type/coding/code (varchar)
        END IF; -- column (medstat_basedon_identifier_type_code)
        IF NOT EXISTS ( -- column not exists (medstat_basedon_identifier_type_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_basedon_identifier_type_display'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_basedon_identifier_type_display varchar;   -- basedOn/identifier/type/coding/display (varchar)
        END IF; -- column (medstat_basedon_identifier_type_display)
        IF NOT EXISTS ( -- column not exists (medstat_basedon_identifier_type_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_basedon_identifier_type_text'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_basedon_identifier_type_text varchar;   -- basedOn/identifier/type/text (varchar)
        END IF; -- column (medstat_basedon_identifier_type_text)
        IF NOT EXISTS ( -- column not exists (medstat_basedon_identifier_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_basedon_identifier_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_basedon_identifier_system varchar;   -- basedOn/identifier/system (varchar)
        END IF; -- column (medstat_basedon_identifier_system)
        IF NOT EXISTS ( -- column not exists (medstat_basedon_identifier_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_basedon_identifier_value'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_basedon_identifier_value varchar;   -- basedOn/identifier/value (varchar)
        END IF; -- column (medstat_basedon_identifier_value)
        IF NOT EXISTS ( -- column not exists (medstat_basedon_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_basedon_display'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_basedon_display varchar;   -- basedOn/display (varchar)
        END IF; -- column (medstat_basedon_display)
        IF NOT EXISTS ( -- column not exists (medstat_status)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_status'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_status varchar;   -- status (varchar)
        END IF; -- column (medstat_status)
        IF NOT EXISTS ( -- column not exists (medstat_statusreason_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_statusreason_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_statusreason_system varchar;   -- statusReason/coding/system (varchar)
        END IF; -- column (medstat_statusreason_system)
        IF NOT EXISTS ( -- column not exists (medstat_statusreason_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_statusreason_version'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_statusreason_version varchar;   -- statusReason/coding/version (varchar)
        END IF; -- column (medstat_statusreason_version)
        IF NOT EXISTS ( -- column not exists (medstat_statusreason_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_statusreason_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_statusreason_code varchar;   -- statusReason/coding/code (varchar)
        END IF; -- column (medstat_statusreason_code)
        IF NOT EXISTS ( -- column not exists (medstat_statusreason_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_statusreason_display'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_statusreason_display varchar;   -- statusReason/coding/display (varchar)
        END IF; -- column (medstat_statusreason_display)
        IF NOT EXISTS ( -- column not exists (medstat_statusreason_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_statusreason_text'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_statusreason_text varchar;   -- statusReason/text (varchar)
        END IF; -- column (medstat_statusreason_text)
        IF NOT EXISTS ( -- column not exists (medstat_category_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_category_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_category_system varchar;   -- category/coding/system (varchar)
        END IF; -- column (medstat_category_system)
        IF NOT EXISTS ( -- column not exists (medstat_category_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_category_version'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_category_version varchar;   -- category/coding/version (varchar)
        END IF; -- column (medstat_category_version)
        IF NOT EXISTS ( -- column not exists (medstat_category_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_category_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_category_code varchar;   -- category/coding/code (varchar)
        END IF; -- column (medstat_category_code)
        IF NOT EXISTS ( -- column not exists (medstat_category_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_category_display'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_category_display varchar;   -- category/coding/display (varchar)
        END IF; -- column (medstat_category_display)
        IF NOT EXISTS ( -- column not exists (medstat_category_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_category_text'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_category_text varchar;   -- category/text (varchar)
        END IF; -- column (medstat_category_text)
        IF NOT EXISTS ( -- column not exists (medstat_medicationreference_ref)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_medicationreference_ref'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_medicationreference_ref varchar;   -- medicationReference/reference (varchar)
        END IF; -- column (medstat_medicationreference_ref)
        IF NOT EXISTS ( -- column not exists (medstat_medicationcodeableconcept_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_medicationcodeableconcept_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_medicationcodeableconcept_system varchar;   -- medicationCodeableConcept/coding/system (varchar)
        END IF; -- column (medstat_medicationcodeableconcept_system)
        IF NOT EXISTS ( -- column not exists (medstat_medicationcodeableconcept_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_medicationcodeableconcept_version'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_medicationcodeableconcept_version varchar;   -- medicationCodeableConcept/coding/version (varchar)
        END IF; -- column (medstat_medicationcodeableconcept_version)
        IF NOT EXISTS ( -- column not exists (medstat_medicationcodeableconcept_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_medicationcodeableconcept_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_medicationcodeableconcept_code varchar;   -- medicationCodeableConcept/coding/code (varchar)
        END IF; -- column (medstat_medicationcodeableconcept_code)
        IF NOT EXISTS ( -- column not exists (medstat_medicationcodeableconcept_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_medicationcodeableconcept_display'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_medicationcodeableconcept_display varchar;   -- medicationCodeableConcept/coding/display (varchar)
        END IF; -- column (medstat_medicationcodeableconcept_display)
        IF NOT EXISTS ( -- column not exists (medstat_medicationcodeableconcept_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_medicationcodeableconcept_text'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_medicationcodeableconcept_text varchar;   -- medicationCodeableConcept/text (varchar)
        END IF; -- column (medstat_medicationcodeableconcept_text)
        IF NOT EXISTS ( -- column not exists (medstat_effectivedatetime)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_effectivedatetime'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_effectivedatetime timestamp;   -- effectiveDateTime (timestamp)
        END IF; -- column (medstat_effectivedatetime)
        IF NOT EXISTS ( -- column not exists (medstat_effectiveperiod_start)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_effectiveperiod_start'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_effectiveperiod_start timestamp;   -- effectivePeriod/start (timestamp)
        END IF; -- column (medstat_effectiveperiod_start)
        IF NOT EXISTS ( -- column not exists (medstat_effectiveperiod_end)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_effectiveperiod_end'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_effectiveperiod_end timestamp;   -- effectivePeriod/end (timestamp)
        END IF; -- column (medstat_effectiveperiod_end)
        IF NOT EXISTS ( -- column not exists (medstat_dateasserted)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dateasserted'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dateasserted timestamp;   -- dateAsserted (timestamp)
        END IF; -- column (medstat_dateasserted)
        IF NOT EXISTS ( -- column not exists (medstat_informationsource_ref)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_informationsource_ref'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_informationsource_ref varchar;   -- informationSource/reference (varchar)
        END IF; -- column (medstat_informationsource_ref)
        IF NOT EXISTS ( -- column not exists (medstat_informationsource_type)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_informationsource_type'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_informationsource_type varchar;   -- informationSource/type (varchar)
        END IF; -- column (medstat_informationsource_type)
        IF NOT EXISTS ( -- column not exists (medstat_informationsource_identifier_use)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_informationsource_identifier_use'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_informationsource_identifier_use varchar;   -- informationSource/identifier/use (varchar)
        END IF; -- column (medstat_informationsource_identifier_use)
        IF NOT EXISTS ( -- column not exists (medstat_informationsource_identifier_type_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_informationsource_identifier_type_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_informationsource_identifier_type_system varchar;   -- informationSource/identifier/type/coding/system (varchar)
        END IF; -- column (medstat_informationsource_identifier_type_system)
        IF NOT EXISTS ( -- column not exists (medstat_informationsource_identifier_type_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_informationsource_identifier_type_version'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_informationsource_identifier_type_version varchar;   -- informationSource/identifier/type/coding/version (varchar)
        END IF; -- column (medstat_informationsource_identifier_type_version)
        IF NOT EXISTS ( -- column not exists (medstat_informationsource_identifier_type_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_informationsource_identifier_type_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_informationsource_identifier_type_code varchar;   -- informationSource/identifier/type/coding/code (varchar)
        END IF; -- column (medstat_informationsource_identifier_type_code)
        IF NOT EXISTS ( -- column not exists (medstat_informationsource_identifier_type_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_informationsource_identifier_type_display'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_informationsource_identifier_type_display varchar;   -- informationSource/identifier/type/coding/display (varchar)
        END IF; -- column (medstat_informationsource_identifier_type_display)
        IF NOT EXISTS ( -- column not exists (medstat_informationsource_identifier_type_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_informationsource_identifier_type_text'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_informationsource_identifier_type_text varchar;   -- informationSource/identifier/type/text (varchar)
        END IF; -- column (medstat_informationsource_identifier_type_text)
        IF NOT EXISTS ( -- column not exists (medstat_informationsource_identifier_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_informationsource_identifier_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_informationsource_identifier_system varchar;   -- informationSource/identifier/system (varchar)
        END IF; -- column (medstat_informationsource_identifier_system)
        IF NOT EXISTS ( -- column not exists (medstat_informationsource_identifier_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_informationsource_identifier_value'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_informationsource_identifier_value varchar;   -- informationSource/identifier/value (varchar)
        END IF; -- column (medstat_informationsource_identifier_value)
        IF NOT EXISTS ( -- column not exists (medstat_informationsource_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_informationsource_display'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_informationsource_display varchar;   -- informationSource/display (varchar)
        END IF; -- column (medstat_informationsource_display)
        IF NOT EXISTS ( -- column not exists (medstat_derivedfrom_ref)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_derivedfrom_ref'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_derivedfrom_ref varchar;   -- derivedFrom/reference (varchar)
        END IF; -- column (medstat_derivedfrom_ref)
        IF NOT EXISTS ( -- column not exists (medstat_derivedfrom_type)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_derivedfrom_type'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_derivedfrom_type varchar;   -- derivedFrom/type (varchar)
        END IF; -- column (medstat_derivedfrom_type)
        IF NOT EXISTS ( -- column not exists (medstat_derivedfrom_identifier_use)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_derivedfrom_identifier_use'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_derivedfrom_identifier_use varchar;   -- derivedFrom/identifier/use (varchar)
        END IF; -- column (medstat_derivedfrom_identifier_use)
        IF NOT EXISTS ( -- column not exists (medstat_derivedfrom_identifier_type_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_derivedfrom_identifier_type_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_derivedfrom_identifier_type_system varchar;   -- derivedFrom/identifier/type/coding/system (varchar)
        END IF; -- column (medstat_derivedfrom_identifier_type_system)
        IF NOT EXISTS ( -- column not exists (medstat_derivedfrom_identifier_type_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_derivedfrom_identifier_type_version'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_derivedfrom_identifier_type_version varchar;   -- derivedFrom/identifier/type/coding/version (varchar)
        END IF; -- column (medstat_derivedfrom_identifier_type_version)
        IF NOT EXISTS ( -- column not exists (medstat_derivedfrom_identifier_type_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_derivedfrom_identifier_type_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_derivedfrom_identifier_type_code varchar;   -- derivedFrom/identifier/type/coding/code (varchar)
        END IF; -- column (medstat_derivedfrom_identifier_type_code)
        IF NOT EXISTS ( -- column not exists (medstat_derivedfrom_identifier_type_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_derivedfrom_identifier_type_display'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_derivedfrom_identifier_type_display varchar;   -- derivedFrom/identifier/type/coding/display (varchar)
        END IF; -- column (medstat_derivedfrom_identifier_type_display)
        IF NOT EXISTS ( -- column not exists (medstat_derivedfrom_identifier_type_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_derivedfrom_identifier_type_text'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_derivedfrom_identifier_type_text varchar;   -- derivedFrom/identifier/type/text (varchar)
        END IF; -- column (medstat_derivedfrom_identifier_type_text)
        IF NOT EXISTS ( -- column not exists (medstat_derivedfrom_identifier_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_derivedfrom_identifier_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_derivedfrom_identifier_system varchar;   -- derivedFrom/identifier/system (varchar)
        END IF; -- column (medstat_derivedfrom_identifier_system)
        IF NOT EXISTS ( -- column not exists (medstat_derivedfrom_identifier_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_derivedfrom_identifier_value'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_derivedfrom_identifier_value varchar;   -- derivedFrom/identifier/value (varchar)
        END IF; -- column (medstat_derivedfrom_identifier_value)
        IF NOT EXISTS ( -- column not exists (medstat_derivedfrom_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_derivedfrom_display'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_derivedfrom_display varchar;   -- derivedFrom/display (varchar)
        END IF; -- column (medstat_derivedfrom_display)
        IF NOT EXISTS ( -- column not exists (medstat_reasoncode_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_reasoncode_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_reasoncode_system varchar;   -- reasonCode/coding/system (varchar)
        END IF; -- column (medstat_reasoncode_system)
        IF NOT EXISTS ( -- column not exists (medstat_reasoncode_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_reasoncode_version'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_reasoncode_version varchar;   -- reasonCode/coding/version (varchar)
        END IF; -- column (medstat_reasoncode_version)
        IF NOT EXISTS ( -- column not exists (medstat_reasoncode_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_reasoncode_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_reasoncode_code varchar;   -- reasonCode/coding/code (varchar)
        END IF; -- column (medstat_reasoncode_code)
        IF NOT EXISTS ( -- column not exists (medstat_reasoncode_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_reasoncode_display'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_reasoncode_display varchar;   -- reasonCode/coding/display (varchar)
        END IF; -- column (medstat_reasoncode_display)
        IF NOT EXISTS ( -- column not exists (medstat_reasoncode_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_reasoncode_text'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_reasoncode_text varchar;   -- reasonCode/text (varchar)
        END IF; -- column (medstat_reasoncode_text)
        IF NOT EXISTS ( -- column not exists (medstat_reasonreference_ref)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_reasonreference_ref'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_reasonreference_ref varchar;   -- reasonReference/reference (varchar)
        END IF; -- column (medstat_reasonreference_ref)
        IF NOT EXISTS ( -- column not exists (medstat_reasonreference_type)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_reasonreference_type'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_reasonreference_type varchar;   -- reasonReference/type (varchar)
        END IF; -- column (medstat_reasonreference_type)
        IF NOT EXISTS ( -- column not exists (medstat_reasonreference_identifier_use)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_reasonreference_identifier_use'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_reasonreference_identifier_use varchar;   -- reasonReference/identifier/use (varchar)
        END IF; -- column (medstat_reasonreference_identifier_use)
        IF NOT EXISTS ( -- column not exists (medstat_reasonreference_identifier_type_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_reasonreference_identifier_type_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_reasonreference_identifier_type_system varchar;   -- reasonReference/identifier/type/coding/system (varchar)
        END IF; -- column (medstat_reasonreference_identifier_type_system)
        IF NOT EXISTS ( -- column not exists (medstat_reasonreference_identifier_type_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_reasonreference_identifier_type_version'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_reasonreference_identifier_type_version varchar;   -- reasonReference/identifier/type/coding/version (varchar)
        END IF; -- column (medstat_reasonreference_identifier_type_version)
        IF NOT EXISTS ( -- column not exists (medstat_reasonreference_identifier_type_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_reasonreference_identifier_type_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_reasonreference_identifier_type_code varchar;   -- reasonReference/identifier/type/coding/code (varchar)
        END IF; -- column (medstat_reasonreference_identifier_type_code)
        IF NOT EXISTS ( -- column not exists (medstat_reasonreference_identifier_type_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_reasonreference_identifier_type_display'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_reasonreference_identifier_type_display varchar;   -- reasonReference/identifier/type/coding/display (varchar)
        END IF; -- column (medstat_reasonreference_identifier_type_display)
        IF NOT EXISTS ( -- column not exists (medstat_reasonreference_identifier_type_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_reasonreference_identifier_type_text'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_reasonreference_identifier_type_text varchar;   -- reasonReference/identifier/type/text (varchar)
        END IF; -- column (medstat_reasonreference_identifier_type_text)
        IF NOT EXISTS ( -- column not exists (medstat_reasonreference_identifier_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_reasonreference_identifier_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_reasonreference_identifier_system varchar;   -- reasonReference/identifier/system (varchar)
        END IF; -- column (medstat_reasonreference_identifier_system)
        IF NOT EXISTS ( -- column not exists (medstat_reasonreference_identifier_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_reasonreference_identifier_value'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_reasonreference_identifier_value varchar;   -- reasonReference/identifier/value (varchar)
        END IF; -- column (medstat_reasonreference_identifier_value)
        IF NOT EXISTS ( -- column not exists (medstat_reasonreference_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_reasonreference_display'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_reasonreference_display varchar;   -- reasonReference/display (varchar)
        END IF; -- column (medstat_reasonreference_display)
        IF NOT EXISTS ( -- column not exists (medstat_note_authorstring)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_note_authorstring'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_note_authorstring varchar;   -- note/authorString (varchar)
        END IF; -- column (medstat_note_authorstring)
        IF NOT EXISTS ( -- column not exists (medstat_note_authorreference_ref)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_note_authorreference_ref'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_note_authorreference_ref varchar;   -- note/authorReference/reference (varchar)
        END IF; -- column (medstat_note_authorreference_ref)
        IF NOT EXISTS ( -- column not exists (medstat_note_authorreference_type)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_note_authorreference_type'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_note_authorreference_type varchar;   -- note/authorReference/type (varchar)
        END IF; -- column (medstat_note_authorreference_type)
        IF NOT EXISTS ( -- column not exists (medstat_note_authorreference_identifier_use)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_note_authorreference_identifier_use'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_note_authorreference_identifier_use varchar;   -- note/authorReference/identifier/use (varchar)
        END IF; -- column (medstat_note_authorreference_identifier_use)
        IF NOT EXISTS ( -- column not exists (medstat_note_authorreference_identifier_type_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_note_authorreference_identifier_type_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_note_authorreference_identifier_type_system varchar;   -- note/authorReference/identifier/type/coding/system (varchar)
        END IF; -- column (medstat_note_authorreference_identifier_type_system)
        IF NOT EXISTS ( -- column not exists (medstat_note_authorreference_identifier_type_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_note_authorreference_identifier_type_version'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_note_authorreference_identifier_type_version varchar;   -- note/authorReference/identifier/type/coding/version (varchar)
        END IF; -- column (medstat_note_authorreference_identifier_type_version)
        IF NOT EXISTS ( -- column not exists (medstat_note_authorreference_identifier_type_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_note_authorreference_identifier_type_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_note_authorreference_identifier_type_code varchar;   -- note/authorReference/identifier/type/coding/code (varchar)
        END IF; -- column (medstat_note_authorreference_identifier_type_code)
        IF NOT EXISTS ( -- column not exists (medstat_note_authorreference_identifier_type_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_note_authorreference_identifier_type_display'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_note_authorreference_identifier_type_display varchar;   -- note/authorReference/identifier/type/coding/display (varchar)
        END IF; -- column (medstat_note_authorreference_identifier_type_display)
        IF NOT EXISTS ( -- column not exists (medstat_note_authorreference_identifier_type_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_note_authorreference_identifier_type_text'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_note_authorreference_identifier_type_text varchar;   -- note/authorReference/identifier/type/text (varchar)
        END IF; -- column (medstat_note_authorreference_identifier_type_text)
        IF NOT EXISTS ( -- column not exists (medstat_note_authorreference_identifier_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_note_authorreference_identifier_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_note_authorreference_identifier_system varchar;   -- note/authorReference/identifier/system (varchar)
        END IF; -- column (medstat_note_authorreference_identifier_system)
        IF NOT EXISTS ( -- column not exists (medstat_note_authorreference_identifier_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_note_authorreference_identifier_value'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_note_authorreference_identifier_value varchar;   -- note/authorReference/identifier/value (varchar)
        END IF; -- column (medstat_note_authorreference_identifier_value)
        IF NOT EXISTS ( -- column not exists (medstat_note_authorreference_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_note_authorreference_display'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_note_authorreference_display varchar;   -- note/authorReference/display (varchar)
        END IF; -- column (medstat_note_authorreference_display)
        IF NOT EXISTS ( -- column not exists (medstat_note_time)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_note_time'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_note_time timestamp;   -- note/time (timestamp)
        END IF; -- column (medstat_note_time)
        IF NOT EXISTS ( -- column not exists (medstat_note_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_note_text'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_note_text varchar;   -- note/text (varchar)
        END IF; -- column (medstat_note_text)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_sequence)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_sequence'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_sequence int;   -- dosage/sequence (int)
        END IF; -- column (medstat_dosage_sequence)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_text'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_text varchar;   -- dosage/text (varchar)
        END IF; -- column (medstat_dosage_text)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_additionalinstruction_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_additionalinstruction_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_additionalinstruction_system varchar;   -- dosage/additionalInstruction/coding/system (varchar)
        END IF; -- column (medstat_dosage_additionalinstruction_system)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_additionalinstruction_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_additionalinstruction_version'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_additionalinstruction_version varchar;   -- dosage/additionalInstruction/coding/version (varchar)
        END IF; -- column (medstat_dosage_additionalinstruction_version)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_additionalinstruction_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_additionalinstruction_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_additionalinstruction_code varchar;   -- dosage/additionalInstruction/coding/code (varchar)
        END IF; -- column (medstat_dosage_additionalinstruction_code)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_additionalinstruction_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_additionalinstruction_display'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_additionalinstruction_display varchar;   -- dosage/additionalInstruction/coding/display (varchar)
        END IF; -- column (medstat_dosage_additionalinstruction_display)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_additionalinstruction_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_additionalinstruction_text'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_additionalinstruction_text varchar;   -- dosage/additionalInstruction/text (varchar)
        END IF; -- column (medstat_dosage_additionalinstruction_text)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_patientinstruction)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_patientinstruction'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_patientinstruction varchar;   -- dosage/patientInstruction (varchar)
        END IF; -- column (medstat_dosage_patientinstruction)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_timing_event)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_timing_event'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_timing_event timestamp;   -- dosage/timing/event (timestamp)
        END IF; -- column (medstat_dosage_timing_event)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_timing_repeat_boundsduration_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_timing_repeat_boundsduration_value'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_timing_repeat_boundsduration_value double precision;   -- dosage/timing/repeat/boundsDuration/value (double precision)
        END IF; -- column (medstat_dosage_timing_repeat_boundsduration_value)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_timing_repeat_boundsduration_comparator)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_timing_repeat_boundsduration_comparator'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_timing_repeat_boundsduration_comparator varchar;   -- dosage/timing/repeat/boundsDuration/comparator (varchar)
        END IF; -- column (medstat_dosage_timing_repeat_boundsduration_comparator)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_timing_repeat_boundsduration_unit)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_timing_repeat_boundsduration_unit'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_timing_repeat_boundsduration_unit varchar;   -- dosage/timing/repeat/boundsDuration/unit (varchar)
        END IF; -- column (medstat_dosage_timing_repeat_boundsduration_unit)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_timing_repeat_boundsduration_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_timing_repeat_boundsduration_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_timing_repeat_boundsduration_system varchar;   -- dosage/timing/repeat/boundsDuration/system (varchar)
        END IF; -- column (medstat_dosage_timing_repeat_boundsduration_system)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_timing_repeat_boundsduration_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_timing_repeat_boundsduration_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_timing_repeat_boundsduration_code varchar;   -- dosage/timing/repeat/boundsDuration/code (varchar)
        END IF; -- column (medstat_dosage_timing_repeat_boundsduration_code)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_timing_repeat_boundsrange_low_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_timing_repeat_boundsrange_low_value'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_timing_repeat_boundsrange_low_value double precision;   -- dosage/timing/repeat/boundsRange/low/value (double precision)
        END IF; -- column (medstat_dosage_timing_repeat_boundsrange_low_value)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_timing_repeat_boundsrange_low_unit)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_timing_repeat_boundsrange_low_unit'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_timing_repeat_boundsrange_low_unit varchar;   -- dosage/timing/repeat/boundsRange/low/unit (varchar)
        END IF; -- column (medstat_dosage_timing_repeat_boundsrange_low_unit)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_timing_repeat_boundsrange_low_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_timing_repeat_boundsrange_low_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_timing_repeat_boundsrange_low_system varchar;   -- dosage/timing/repeat/boundsRange/low/system (varchar)
        END IF; -- column (medstat_dosage_timing_repeat_boundsrange_low_system)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_timing_repeat_boundsrange_low_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_timing_repeat_boundsrange_low_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_timing_repeat_boundsrange_low_code varchar;   -- dosage/timing/repeat/boundsRange/low/code (varchar)
        END IF; -- column (medstat_dosage_timing_repeat_boundsrange_low_code)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_timing_repeat_boundsrange_high_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_timing_repeat_boundsrange_high_value'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_timing_repeat_boundsrange_high_value double precision;   -- dosage/timing/repeat/boundsRange/high/value (double precision)
        END IF; -- column (medstat_dosage_timing_repeat_boundsrange_high_value)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_timing_repeat_boundsrange_high_unit)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_timing_repeat_boundsrange_high_unit'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_timing_repeat_boundsrange_high_unit varchar;   -- dosage/timing/repeat/boundsRange/high/unit (varchar)
        END IF; -- column (medstat_dosage_timing_repeat_boundsrange_high_unit)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_timing_repeat_boundsrange_high_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_timing_repeat_boundsrange_high_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_timing_repeat_boundsrange_high_system varchar;   -- dosage/timing/repeat/boundsRange/high/system (varchar)
        END IF; -- column (medstat_dosage_timing_repeat_boundsrange_high_system)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_timing_repeat_boundsrange_high_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_timing_repeat_boundsrange_high_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_timing_repeat_boundsrange_high_code varchar;   -- dosage/timing/repeat/boundsRange/high/code (varchar)
        END IF; -- column (medstat_dosage_timing_repeat_boundsrange_high_code)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_timing_repeat_boundsperiod_start)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_timing_repeat_boundsperiod_start'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_timing_repeat_boundsperiod_start timestamp;   -- dosage/timing/repeat/boundsPeriod/start (timestamp)
        END IF; -- column (medstat_dosage_timing_repeat_boundsperiod_start)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_timing_repeat_boundsperiod_end)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_timing_repeat_boundsperiod_end'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_timing_repeat_boundsperiod_end timestamp;   -- dosage/timing/repeat/boundsPeriod/end (timestamp)
        END IF; -- column (medstat_dosage_timing_repeat_boundsperiod_end)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_timing_repeat_count)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_timing_repeat_count'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_timing_repeat_count int;   -- dosage/timing/repeat/count (int)
        END IF; -- column (medstat_dosage_timing_repeat_count)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_timing_repeat_countmax)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_timing_repeat_countmax'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_timing_repeat_countmax int;   -- dosage/timing/repeat/countMax (int)
        END IF; -- column (medstat_dosage_timing_repeat_countmax)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_timing_repeat_duration)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_timing_repeat_duration'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_timing_repeat_duration double precision;   -- dosage/timing/repeat/duration (double precision)
        END IF; -- column (medstat_dosage_timing_repeat_duration)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_timing_repeat_durationmax)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_timing_repeat_durationmax'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_timing_repeat_durationmax double precision;   -- dosage/timing/repeat/durationMax (double precision)
        END IF; -- column (medstat_dosage_timing_repeat_durationmax)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_timing_repeat_durationunit)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_timing_repeat_durationunit'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_timing_repeat_durationunit varchar;   -- dosage/timing/repeat/durationUnit (varchar)
        END IF; -- column (medstat_dosage_timing_repeat_durationunit)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_timing_repeat_frequency)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_timing_repeat_frequency'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_timing_repeat_frequency int;   -- dosage/timing/repeat/frequency (int)
        END IF; -- column (medstat_dosage_timing_repeat_frequency)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_timing_repeat_frequencymax)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_timing_repeat_frequencymax'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_timing_repeat_frequencymax int;   -- dosage/timing/repeat/frequencyMax (int)
        END IF; -- column (medstat_dosage_timing_repeat_frequencymax)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_timing_repeat_period)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_timing_repeat_period'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_timing_repeat_period double precision;   -- dosage/timing/repeat/period (double precision)
        END IF; -- column (medstat_dosage_timing_repeat_period)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_timing_repeat_periodmax)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_timing_repeat_periodmax'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_timing_repeat_periodmax double precision;   -- dosage/timing/repeat/periodMax (double precision)
        END IF; -- column (medstat_dosage_timing_repeat_periodmax)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_timing_repeat_periodunit)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_timing_repeat_periodunit'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_timing_repeat_periodunit varchar;   -- dosage/timing/repeat/periodUnit (varchar)
        END IF; -- column (medstat_dosage_timing_repeat_periodunit)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_timing_repeat_dayofweek)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_timing_repeat_dayofweek'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_timing_repeat_dayofweek varchar;   -- dosage/timing/repeat/dayOfWeek (varchar)
        END IF; -- column (medstat_dosage_timing_repeat_dayofweek)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_timing_repeat_timeofday)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_timing_repeat_timeofday'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_timing_repeat_timeofday time;   -- dosage/timing/repeat/timeOfDay (time)
        END IF; -- column (medstat_dosage_timing_repeat_timeofday)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_timing_repeat_when)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_timing_repeat_when'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_timing_repeat_when varchar;   -- dosage/timing/repeat/when (varchar)
        END IF; -- column (medstat_dosage_timing_repeat_when)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_timing_repeat_offset)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_timing_repeat_offset'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_timing_repeat_offset int;   -- dosage/timing/repeat/offset (int)
        END IF; -- column (medstat_dosage_timing_repeat_offset)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_timing_code_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_timing_code_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_timing_code_system varchar;   -- dosage/timing/code/coding/system (varchar)
        END IF; -- column (medstat_dosage_timing_code_system)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_timing_code_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_timing_code_version'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_timing_code_version varchar;   -- dosage/timing/code/coding/version (varchar)
        END IF; -- column (medstat_dosage_timing_code_version)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_timing_code_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_timing_code_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_timing_code_code varchar;   -- dosage/timing/code/coding/code (varchar)
        END IF; -- column (medstat_dosage_timing_code_code)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_timing_code_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_timing_code_display'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_timing_code_display varchar;   -- dosage/timing/code/coding/display (varchar)
        END IF; -- column (medstat_dosage_timing_code_display)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_timing_code_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_timing_code_text'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_timing_code_text varchar;   -- dosage/timing/code/text (varchar)
        END IF; -- column (medstat_dosage_timing_code_text)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_asneededboolean)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_asneededboolean'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_asneededboolean boolean;   -- dosage/asNeededBoolean (boolean)
        END IF; -- column (medstat_dosage_asneededboolean)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_asneededcodeableconcept_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_asneededcodeableconcept_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_asneededcodeableconcept_system varchar;   -- dosage/asNeededCodeableConcept/coding/system (varchar)
        END IF; -- column (medstat_dosage_asneededcodeableconcept_system)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_asneededcodeableconcept_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_asneededcodeableconcept_version'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_asneededcodeableconcept_version varchar;   -- dosage/asNeededCodeableConcept/coding/version (varchar)
        END IF; -- column (medstat_dosage_asneededcodeableconcept_version)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_asneededcodeableconcept_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_asneededcodeableconcept_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_asneededcodeableconcept_code varchar;   -- dosage/asNeededCodeableConcept/coding/code (varchar)
        END IF; -- column (medstat_dosage_asneededcodeableconcept_code)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_asneededcodeableconcept_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_asneededcodeableconcept_display'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_asneededcodeableconcept_display varchar;   -- dosage/asNeededCodeableConcept/coding/display (varchar)
        END IF; -- column (medstat_dosage_asneededcodeableconcept_display)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_asneededcodeableconcept_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_asneededcodeableconcept_text'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_asneededcodeableconcept_text varchar;   -- dosage/asNeededCodeableConcept/text (varchar)
        END IF; -- column (medstat_dosage_asneededcodeableconcept_text)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_site_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_site_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_site_system varchar;   -- dosage/site/coding/system (varchar)
        END IF; -- column (medstat_dosage_site_system)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_site_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_site_version'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_site_version varchar;   -- dosage/site/coding/version (varchar)
        END IF; -- column (medstat_dosage_site_version)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_site_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_site_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_site_code varchar;   -- dosage/site/coding/code (varchar)
        END IF; -- column (medstat_dosage_site_code)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_site_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_site_display'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_site_display varchar;   -- dosage/site/coding/display (varchar)
        END IF; -- column (medstat_dosage_site_display)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_site_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_site_text'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_site_text varchar;   -- dosage/site/text (varchar)
        END IF; -- column (medstat_dosage_site_text)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_route_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_route_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_route_system varchar;   -- dosage/route/coding/system (varchar)
        END IF; -- column (medstat_dosage_route_system)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_route_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_route_version'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_route_version varchar;   -- dosage/route/coding/version (varchar)
        END IF; -- column (medstat_dosage_route_version)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_route_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_route_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_route_code varchar;   -- dosage/route/coding/code (varchar)
        END IF; -- column (medstat_dosage_route_code)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_route_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_route_display'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_route_display varchar;   -- dosage/route/coding/display (varchar)
        END IF; -- column (medstat_dosage_route_display)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_route_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_route_text'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_route_text varchar;   -- dosage/route/text (varchar)
        END IF; -- column (medstat_dosage_route_text)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_method_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_method_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_method_system varchar;   -- dosage/method/coding/system (varchar)
        END IF; -- column (medstat_dosage_method_system)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_method_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_method_version'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_method_version varchar;   -- dosage/method/coding/version (varchar)
        END IF; -- column (medstat_dosage_method_version)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_method_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_method_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_method_code varchar;   -- dosage/method/coding/code (varchar)
        END IF; -- column (medstat_dosage_method_code)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_method_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_method_display'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_method_display varchar;   -- dosage/method/coding/display (varchar)
        END IF; -- column (medstat_dosage_method_display)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_method_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_method_text'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_method_text varchar;   -- dosage/method/text (varchar)
        END IF; -- column (medstat_dosage_method_text)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_doseandrate_type_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_doseandrate_type_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_doseandrate_type_system varchar;   -- dosage/doseAndRate/type/coding/system (varchar)
        END IF; -- column (medstat_dosage_doseandrate_type_system)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_doseandrate_type_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_doseandrate_type_version'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_doseandrate_type_version varchar;   -- dosage/doseAndRate/type/coding/version (varchar)
        END IF; -- column (medstat_dosage_doseandrate_type_version)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_doseandrate_type_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_doseandrate_type_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_doseandrate_type_code varchar;   -- dosage/doseAndRate/type/coding/code (varchar)
        END IF; -- column (medstat_dosage_doseandrate_type_code)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_doseandrate_type_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_doseandrate_type_display'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_doseandrate_type_display varchar;   -- dosage/doseAndRate/type/coding/display (varchar)
        END IF; -- column (medstat_dosage_doseandrate_type_display)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_doseandrate_type_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_doseandrate_type_text'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_doseandrate_type_text varchar;   -- dosage/doseAndRate/type/text (varchar)
        END IF; -- column (medstat_dosage_doseandrate_type_text)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_doseandrate_doserange_low_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_doseandrate_doserange_low_value'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_doseandrate_doserange_low_value double precision;   -- dosage/doseAndRate/doseRange/low/value (double precision)
        END IF; -- column (medstat_dosage_doseandrate_doserange_low_value)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_doseandrate_doserange_low_unit)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_doseandrate_doserange_low_unit'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_doseandrate_doserange_low_unit varchar;   -- dosage/doseAndRate/doseRange/low/unit (varchar)
        END IF; -- column (medstat_dosage_doseandrate_doserange_low_unit)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_doseandrate_doserange_low_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_doseandrate_doserange_low_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_doseandrate_doserange_low_system varchar;   -- dosage/doseAndRate/doseRange/low/system (varchar)
        END IF; -- column (medstat_dosage_doseandrate_doserange_low_system)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_doseandrate_doserange_low_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_doseandrate_doserange_low_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_doseandrate_doserange_low_code varchar;   -- dosage/doseAndRate/doseRange/low/code (varchar)
        END IF; -- column (medstat_dosage_doseandrate_doserange_low_code)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_doseandrate_doserange_high_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_doseandrate_doserange_high_value'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_doseandrate_doserange_high_value double precision;   -- dosage/doseAndRate/doseRange/high/value (double precision)
        END IF; -- column (medstat_dosage_doseandrate_doserange_high_value)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_doseandrate_doserange_high_unit)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_doseandrate_doserange_high_unit'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_doseandrate_doserange_high_unit varchar;   -- dosage/doseAndRate/doseRange/high/unit (varchar)
        END IF; -- column (medstat_dosage_doseandrate_doserange_high_unit)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_doseandrate_doserange_high_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_doseandrate_doserange_high_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_doseandrate_doserange_high_system varchar;   -- dosage/doseAndRate/doseRange/high/system (varchar)
        END IF; -- column (medstat_dosage_doseandrate_doserange_high_system)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_doseandrate_doserange_high_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_doseandrate_doserange_high_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_doseandrate_doserange_high_code varchar;   -- dosage/doseAndRate/doseRange/high/code (varchar)
        END IF; -- column (medstat_dosage_doseandrate_doserange_high_code)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_doseandrate_dosequantity_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_doseandrate_dosequantity_value'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_doseandrate_dosequantity_value double precision;   -- dosage/doseAndRate/doseQuantity/value (double precision)
        END IF; -- column (medstat_dosage_doseandrate_dosequantity_value)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_doseandrate_dosequantity_comparator)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_doseandrate_dosequantity_comparator'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_doseandrate_dosequantity_comparator varchar;   -- dosage/doseAndRate/doseQuantity/comparator (varchar)
        END IF; -- column (medstat_dosage_doseandrate_dosequantity_comparator)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_doseandrate_dosequantity_unit)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_doseandrate_dosequantity_unit'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_doseandrate_dosequantity_unit varchar;   -- dosage/doseAndRate/doseQuantity/unit (varchar)
        END IF; -- column (medstat_dosage_doseandrate_dosequantity_unit)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_doseandrate_dosequantity_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_doseandrate_dosequantity_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_doseandrate_dosequantity_system varchar;   -- dosage/doseAndRate/doseQuantity/system (varchar)
        END IF; -- column (medstat_dosage_doseandrate_dosequantity_system)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_doseandrate_dosequantity_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_doseandrate_dosequantity_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_doseandrate_dosequantity_code varchar;   -- dosage/doseAndRate/doseQuantity/code (varchar)
        END IF; -- column (medstat_dosage_doseandrate_dosequantity_code)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_doseandrate_rateratio_numerator_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_doseandrate_rateratio_numerator_value'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_doseandrate_rateratio_numerator_value double precision;   -- dosage/doseAndRate/rateRatio/numerator/value (double precision)
        END IF; -- column (medstat_dosage_doseandrate_rateratio_numerator_value)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_doseandrate_rateratio_numerator_comparator)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_doseandrate_rateratio_numerator_comparator'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_doseandrate_rateratio_numerator_comparator varchar;   -- dosage/doseAndRate/rateRatio/numerator/comparator (varchar)
        END IF; -- column (medstat_dosage_doseandrate_rateratio_numerator_comparator)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_doseandrate_rateratio_numerator_unit)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_doseandrate_rateratio_numerator_unit'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_doseandrate_rateratio_numerator_unit varchar;   -- dosage/doseAndRate/rateRatio/numerator/unit (varchar)
        END IF; -- column (medstat_dosage_doseandrate_rateratio_numerator_unit)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_doseandrate_rateratio_numerator_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_doseandrate_rateratio_numerator_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_doseandrate_rateratio_numerator_system varchar;   -- dosage/doseAndRate/rateRatio/numerator/system (varchar)
        END IF; -- column (medstat_dosage_doseandrate_rateratio_numerator_system)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_doseandrate_rateratio_numerator_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_doseandrate_rateratio_numerator_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_doseandrate_rateratio_numerator_code varchar;   -- dosage/doseAndRate/rateRatio/numerator/code (varchar)
        END IF; -- column (medstat_dosage_doseandrate_rateratio_numerator_code)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_doseandrate_rateratio_denominator_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_doseandrate_rateratio_denominator_value'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_doseandrate_rateratio_denominator_value double precision;   -- dosage/doseAndRate/rateRatio/denominator/value (double precision)
        END IF; -- column (medstat_dosage_doseandrate_rateratio_denominator_value)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_doseandrate_rateratio_denominator_comparator)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_doseandrate_rateratio_denominator_comparator'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_doseandrate_rateratio_denominator_comparator varchar;   -- dosage/doseAndRate/rateRatio/denominator/comparator (varchar)
        END IF; -- column (medstat_dosage_doseandrate_rateratio_denominator_comparator)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_doseandrate_rateratio_denominator_unit)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_doseandrate_rateratio_denominator_unit'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_doseandrate_rateratio_denominator_unit varchar;   -- dosage/doseAndRate/rateRatio/denominator/unit (varchar)
        END IF; -- column (medstat_dosage_doseandrate_rateratio_denominator_unit)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_doseandrate_rateratio_denominator_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_doseandrate_rateratio_denominator_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_doseandrate_rateratio_denominator_system varchar;   -- dosage/doseAndRate/rateRatio/denominator/system (varchar)
        END IF; -- column (medstat_dosage_doseandrate_rateratio_denominator_system)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_doseandrate_rateratio_denominator_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_doseandrate_rateratio_denominator_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_doseandrate_rateratio_denominator_code varchar;   -- dosage/doseAndRate/rateRatio/denominator/code (varchar)
        END IF; -- column (medstat_dosage_doseandrate_rateratio_denominator_code)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_doseandrate_raterange_low_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_doseandrate_raterange_low_value'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_doseandrate_raterange_low_value double precision;   -- dosage/doseAndRate/rateRange/low/value (double precision)
        END IF; -- column (medstat_dosage_doseandrate_raterange_low_value)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_doseandrate_raterange_low_unit)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_doseandrate_raterange_low_unit'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_doseandrate_raterange_low_unit varchar;   -- dosage/doseAndRate/rateRange/low/unit (varchar)
        END IF; -- column (medstat_dosage_doseandrate_raterange_low_unit)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_doseandrate_raterange_low_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_doseandrate_raterange_low_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_doseandrate_raterange_low_system varchar;   -- dosage/doseAndRate/rateRange/low/system (varchar)
        END IF; -- column (medstat_dosage_doseandrate_raterange_low_system)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_doseandrate_raterange_low_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_doseandrate_raterange_low_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_doseandrate_raterange_low_code varchar;   -- dosage/doseAndRate/rateRange/low/code (varchar)
        END IF; -- column (medstat_dosage_doseandrate_raterange_low_code)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_doseandrate_raterange_high_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_doseandrate_raterange_high_value'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_doseandrate_raterange_high_value double precision;   -- dosage/doseAndRate/rateRange/high/value (double precision)
        END IF; -- column (medstat_dosage_doseandrate_raterange_high_value)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_doseandrate_raterange_high_unit)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_doseandrate_raterange_high_unit'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_doseandrate_raterange_high_unit varchar;   -- dosage/doseAndRate/rateRange/high/unit (varchar)
        END IF; -- column (medstat_dosage_doseandrate_raterange_high_unit)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_doseandrate_raterange_high_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_doseandrate_raterange_high_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_doseandrate_raterange_high_system varchar;   -- dosage/doseAndRate/rateRange/high/system (varchar)
        END IF; -- column (medstat_dosage_doseandrate_raterange_high_system)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_doseandrate_raterange_high_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_doseandrate_raterange_high_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_doseandrate_raterange_high_code varchar;   -- dosage/doseAndRate/rateRange/high/code (varchar)
        END IF; -- column (medstat_dosage_doseandrate_raterange_high_code)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_doseandrate_ratequantity_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_doseandrate_ratequantity_value'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_doseandrate_ratequantity_value double precision;   -- dosage/doseAndRate/rateQuantity/value (double precision)
        END IF; -- column (medstat_dosage_doseandrate_ratequantity_value)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_doseandrate_ratequantity_unit)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_doseandrate_ratequantity_unit'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_doseandrate_ratequantity_unit varchar;   -- dosage/doseAndRate/rateQuantity/unit (varchar)
        END IF; -- column (medstat_dosage_doseandrate_ratequantity_unit)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_doseandrate_ratequantity_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_doseandrate_ratequantity_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_doseandrate_ratequantity_system varchar;   -- dosage/doseAndRate/rateQuantity/system (varchar)
        END IF; -- column (medstat_dosage_doseandrate_ratequantity_system)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_doseandrate_ratequantity_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_doseandrate_ratequantity_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_doseandrate_ratequantity_code varchar;   -- dosage/doseAndRate/rateQuantity/code (varchar)
        END IF; -- column (medstat_dosage_doseandrate_ratequantity_code)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_maxdoseperperiod_numerator_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_maxdoseperperiod_numerator_value'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_maxdoseperperiod_numerator_value double precision;   -- dosage/maxDosePerPeriod/numerator/value (double precision)
        END IF; -- column (medstat_dosage_maxdoseperperiod_numerator_value)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_maxdoseperperiod_numerator_comparator)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_maxdoseperperiod_numerator_comparator'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_maxdoseperperiod_numerator_comparator varchar;   -- dosage/maxDosePerPeriod/numerator/comparator (varchar)
        END IF; -- column (medstat_dosage_maxdoseperperiod_numerator_comparator)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_maxdoseperperiod_numerator_unit)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_maxdoseperperiod_numerator_unit'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_maxdoseperperiod_numerator_unit varchar;   -- dosage/maxDosePerPeriod/numerator/unit (varchar)
        END IF; -- column (medstat_dosage_maxdoseperperiod_numerator_unit)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_maxdoseperperiod_numerator_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_maxdoseperperiod_numerator_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_maxdoseperperiod_numerator_system varchar;   -- dosage/maxDosePerPeriod/numerator/system (varchar)
        END IF; -- column (medstat_dosage_maxdoseperperiod_numerator_system)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_maxdoseperperiod_numerator_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_maxdoseperperiod_numerator_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_maxdoseperperiod_numerator_code varchar;   -- dosage/maxDosePerPeriod/numerator/code (varchar)
        END IF; -- column (medstat_dosage_maxdoseperperiod_numerator_code)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_maxdoseperperiod_denominator_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_maxdoseperperiod_denominator_value'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_maxdoseperperiod_denominator_value double precision;   -- dosage/maxDosePerPeriod/denominator/value (double precision)
        END IF; -- column (medstat_dosage_maxdoseperperiod_denominator_value)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_maxdoseperperiod_denominator_comparator)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_maxdoseperperiod_denominator_comparator'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_maxdoseperperiod_denominator_comparator varchar;   -- dosage/maxDosePerPeriod/denominator/comparator (varchar)
        END IF; -- column (medstat_dosage_maxdoseperperiod_denominator_comparator)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_maxdoseperperiod_denominator_unit)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_maxdoseperperiod_denominator_unit'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_maxdoseperperiod_denominator_unit varchar;   -- dosage/maxDosePerPeriod/denominator/unit (varchar)
        END IF; -- column (medstat_dosage_maxdoseperperiod_denominator_unit)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_maxdoseperperiod_denominator_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_maxdoseperperiod_denominator_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_maxdoseperperiod_denominator_system varchar;   -- dosage/maxDosePerPeriod/denominator/system (varchar)
        END IF; -- column (medstat_dosage_maxdoseperperiod_denominator_system)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_maxdoseperperiod_denominator_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_maxdoseperperiod_denominator_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_maxdoseperperiod_denominator_code varchar;   -- dosage/maxDosePerPeriod/denominator/code (varchar)
        END IF; -- column (medstat_dosage_maxdoseperperiod_denominator_code)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_maxdoseperadministration_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_maxdoseperadministration_value'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_maxdoseperadministration_value double precision;   -- dosage/maxDosePerAdministration/value (double precision)
        END IF; -- column (medstat_dosage_maxdoseperadministration_value)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_maxdoseperadministration_unit)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_maxdoseperadministration_unit'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_maxdoseperadministration_unit varchar;   -- dosage/maxDosePerAdministration/unit (varchar)
        END IF; -- column (medstat_dosage_maxdoseperadministration_unit)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_maxdoseperadministration_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_maxdoseperadministration_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_maxdoseperadministration_system varchar;   -- dosage/maxDosePerAdministration/system (varchar)
        END IF; -- column (medstat_dosage_maxdoseperadministration_system)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_maxdoseperadministration_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_maxdoseperadministration_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_maxdoseperadministration_code varchar;   -- dosage/maxDosePerAdministration/code (varchar)
        END IF; -- column (medstat_dosage_maxdoseperadministration_code)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_maxdoseperlifetime_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_maxdoseperlifetime_value'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_maxdoseperlifetime_value double precision;   -- dosage/maxDosePerLifetime/value (double precision)
        END IF; -- column (medstat_dosage_maxdoseperlifetime_value)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_maxdoseperlifetime_unit)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_maxdoseperlifetime_unit'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_maxdoseperlifetime_unit varchar;   -- dosage/maxDosePerLifetime/unit (varchar)
        END IF; -- column (medstat_dosage_maxdoseperlifetime_unit)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_maxdoseperlifetime_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_maxdoseperlifetime_system'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_maxdoseperlifetime_system varchar;   -- dosage/maxDosePerLifetime/system (varchar)
        END IF; -- column (medstat_dosage_maxdoseperlifetime_system)
        IF NOT EXISTS ( -- column not exists (medstat_dosage_maxdoseperlifetime_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'medstat_dosage_maxdoseperlifetime_code'
        ) THEN
            ALTER TABLE cds2db_in.medicationstatement ADD medstat_dosage_maxdoseperlifetime_code varchar;   -- dosage/maxDosePerLifetime/code (varchar)
        END IF; -- column (medstat_dosage_maxdoseperlifetime_code)

-- Hash column for comparison on data-bearing columns -------------------------------------------
        IF EXISTS ( -- column exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement' AND column_name = 'hash_index_col'
        ) THEN
            IF NOT EXISTS ( -- column exists
                SELECT 1 FROM information_schema.columns WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement' AND column_name = 'hash_index_col'
                AND trim(replace(replace(generation_expression::TEXT,'(',''),')','')) != trim(replace(replace('
	         COALESCE(db.to_char_immutable(medstat_id), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_identifier_use), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_identifier_type_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_identifier_type_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_identifier_type_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_identifier_type_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_identifier_type_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_identifier_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_identifier_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_identifier_start), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_identifier_end), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_encounter_ref), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_patient_ref), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_partof_ref), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_basedon_ref), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_basedon_type), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_basedon_identifier_use), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_basedon_identifier_type_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_basedon_identifier_type_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_basedon_identifier_type_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_basedon_identifier_type_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_basedon_identifier_type_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_basedon_identifier_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_basedon_identifier_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_basedon_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_status), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_statusreason_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_statusreason_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_statusreason_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_statusreason_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_statusreason_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_category_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_category_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_category_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_category_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_category_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_medicationreference_ref), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_medicationcodeableconcept_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_medicationcodeableconcept_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_medicationcodeableconcept_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_medicationcodeableconcept_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_medicationcodeableconcept_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_effectivedatetime), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_effectiveperiod_start), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_effectiveperiod_end), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dateasserted), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_informationsource_ref), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_informationsource_type), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_informationsource_identifier_use), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_informationsource_identifier_type_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_informationsource_identifier_type_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_informationsource_identifier_type_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_informationsource_identifier_type_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_informationsource_identifier_type_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_informationsource_identifier_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_informationsource_identifier_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_informationsource_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_derivedfrom_ref), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_derivedfrom_type), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_derivedfrom_identifier_use), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_derivedfrom_identifier_type_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_derivedfrom_identifier_type_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_derivedfrom_identifier_type_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_derivedfrom_identifier_type_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_derivedfrom_identifier_type_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_derivedfrom_identifier_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_derivedfrom_identifier_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_derivedfrom_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_reasoncode_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_reasoncode_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_reasoncode_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_reasoncode_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_reasoncode_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_reasonreference_ref), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_reasonreference_type), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_reasonreference_identifier_use), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_reasonreference_identifier_type_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_reasonreference_identifier_type_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_reasonreference_identifier_type_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_reasonreference_identifier_type_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_reasonreference_identifier_type_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_reasonreference_identifier_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_reasonreference_identifier_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_reasonreference_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_note_authorstring), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_note_authorreference_ref), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_note_authorreference_type), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_note_authorreference_identifier_use), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_note_authorreference_identifier_type_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_note_authorreference_identifier_type_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_note_authorreference_identifier_type_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_note_authorreference_identifier_type_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_note_authorreference_identifier_type_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_note_authorreference_identifier_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_note_authorreference_identifier_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_note_authorreference_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_note_time), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_note_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_sequence), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_additionalinstruction_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_additionalinstruction_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_additionalinstruction_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_additionalinstruction_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_additionalinstruction_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_patientinstruction), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_timing_event), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_boundsduration_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_boundsduration_comparator), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_boundsduration_unit), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_boundsduration_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_boundsduration_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_boundsrange_low_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_boundsrange_low_unit), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_boundsrange_low_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_boundsrange_low_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_boundsrange_high_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_boundsrange_high_unit), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_boundsrange_high_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_boundsrange_high_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_boundsperiod_start), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_boundsperiod_end), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_count), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_countmax), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_duration), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_durationmax), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_durationunit), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_frequency), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_frequencymax), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_period), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_periodmax), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_periodunit), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_dayofweek), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_timeofday), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_when), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_offset), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_timing_code_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_timing_code_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_timing_code_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_timing_code_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_timing_code_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_asneededboolean), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_asneededcodeableconcept_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_asneededcodeableconcept_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_asneededcodeableconcept_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_asneededcodeableconcept_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_asneededcodeableconcept_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_site_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_site_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_site_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_site_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_site_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_route_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_route_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_route_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_route_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_route_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_method_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_method_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_method_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_method_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_method_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_type_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_type_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_type_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_type_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_type_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_doserange_low_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_doserange_low_unit), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_doserange_low_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_doserange_low_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_doserange_high_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_doserange_high_unit), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_doserange_high_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_doserange_high_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_dosequantity_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_dosequantity_comparator), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_dosequantity_unit), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_dosequantity_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_dosequantity_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_rateratio_numerator_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_rateratio_numerator_comparator), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_rateratio_numerator_unit), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_rateratio_numerator_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_rateratio_numerator_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_rateratio_denominator_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_rateratio_denominator_comparator), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_rateratio_denominator_unit), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_rateratio_denominator_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_rateratio_denominator_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_raterange_low_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_raterange_low_unit), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_raterange_low_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_raterange_low_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_raterange_high_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_raterange_high_unit), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_raterange_high_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_raterange_high_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_ratequantity_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_ratequantity_unit), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_ratequantity_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_ratequantity_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_maxdoseperperiod_numerator_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_maxdoseperperiod_numerator_comparator), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_maxdoseperperiod_numerator_unit), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_maxdoseperperiod_numerator_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_maxdoseperperiod_numerator_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_maxdoseperperiod_denominator_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_maxdoseperperiod_denominator_comparator), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_maxdoseperperiod_denominator_unit), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_maxdoseperperiod_denominator_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_maxdoseperperiod_denominator_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_maxdoseperadministration_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_maxdoseperadministration_unit), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_maxdoseperadministration_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_maxdoseperadministration_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_maxdoseperlifetime_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_maxdoseperlifetime_unit), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_maxdoseperlifetime_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(medstat_dosage_maxdoseperlifetime_code), ''#NULL#'') || ''|||'' ||''#''
                ','(',''),')',''))
            ) THEN
            -- Delete the old hash column so that a new one can be created
            ALTER TABLE cds2db_in.medicationstatement DROP COLUMN hash_index_col;

            -- Creating the hash column
            ALTER TABLE cds2db_in.medicationstatement ADD
            hash_index_col TEXT GENERATED ALWAYS AS (
            md5(
	         COALESCE(db.to_char_immutable(medstat_id), '#NULL#') || '|||' || -- hash from: id (medstat_id)
          COALESCE(db.to_char_immutable(medstat_identifier_use), '#NULL#') || '|||' || -- hash from: identifier/use (medstat_identifier_use)
          COALESCE(db.to_char_immutable(medstat_identifier_type_system), '#NULL#') || '|||' || -- hash from: identifier/type/coding/system (medstat_identifier_type_system)
          COALESCE(db.to_char_immutable(medstat_identifier_type_version), '#NULL#') || '|||' || -- hash from: identifier/type/coding/version (medstat_identifier_type_version)
          COALESCE(db.to_char_immutable(medstat_identifier_type_code), '#NULL#') || '|||' || -- hash from: identifier/type/coding/code (medstat_identifier_type_code)
          COALESCE(db.to_char_immutable(medstat_identifier_type_display), '#NULL#') || '|||' || -- hash from: identifier/type/coding/display (medstat_identifier_type_display)
          COALESCE(db.to_char_immutable(medstat_identifier_type_text), '#NULL#') || '|||' || -- hash from: identifier/type/text (medstat_identifier_type_text)
          COALESCE(db.to_char_immutable(medstat_identifier_system), '#NULL#') || '|||' || -- hash from: identifier/system (medstat_identifier_system)
          COALESCE(db.to_char_immutable(medstat_identifier_value), '#NULL#') || '|||' || -- hash from: identifier/value (medstat_identifier_value)
          COALESCE(db.to_char_immutable(medstat_identifier_start), '#NULL#') || '|||' || -- hash from: identifier/start (medstat_identifier_start)
          COALESCE(db.to_char_immutable(medstat_identifier_end), '#NULL#') || '|||' || -- hash from: identifier/end (medstat_identifier_end)
          COALESCE(db.to_char_immutable(medstat_encounter_ref), '#NULL#') || '|||' || -- hash from: context/reference (medstat_encounter_ref)
          COALESCE(db.to_char_immutable(medstat_patient_ref), '#NULL#') || '|||' || -- hash from: subject/reference (medstat_patient_ref)
          COALESCE(db.to_char_immutable(medstat_partof_ref), '#NULL#') || '|||' || -- hash from: partOf/reference (medstat_partof_ref)
          COALESCE(db.to_char_immutable(medstat_basedon_ref), '#NULL#') || '|||' || -- hash from: basedOn/reference (medstat_basedon_ref)
          COALESCE(db.to_char_immutable(medstat_basedon_type), '#NULL#') || '|||' || -- hash from: basedOn/type (medstat_basedon_type)
          COALESCE(db.to_char_immutable(medstat_basedon_identifier_use), '#NULL#') || '|||' || -- hash from: basedOn/identifier/use (medstat_basedon_identifier_use)
          COALESCE(db.to_char_immutable(medstat_basedon_identifier_type_system), '#NULL#') || '|||' || -- hash from: basedOn/identifier/type/coding/system (medstat_basedon_identifier_type_system)
          COALESCE(db.to_char_immutable(medstat_basedon_identifier_type_version), '#NULL#') || '|||' || -- hash from: basedOn/identifier/type/coding/version (medstat_basedon_identifier_type_version)
          COALESCE(db.to_char_immutable(medstat_basedon_identifier_type_code), '#NULL#') || '|||' || -- hash from: basedOn/identifier/type/coding/code (medstat_basedon_identifier_type_code)
          COALESCE(db.to_char_immutable(medstat_basedon_identifier_type_display), '#NULL#') || '|||' || -- hash from: basedOn/identifier/type/coding/display (medstat_basedon_identifier_type_display)
          COALESCE(db.to_char_immutable(medstat_basedon_identifier_type_text), '#NULL#') || '|||' || -- hash from: basedOn/identifier/type/text (medstat_basedon_identifier_type_text)
          COALESCE(db.to_char_immutable(medstat_basedon_identifier_system), '#NULL#') || '|||' || -- hash from: basedOn/identifier/system (medstat_basedon_identifier_system)
          COALESCE(db.to_char_immutable(medstat_basedon_identifier_value), '#NULL#') || '|||' || -- hash from: basedOn/identifier/value (medstat_basedon_identifier_value)
          COALESCE(db.to_char_immutable(medstat_basedon_display), '#NULL#') || '|||' || -- hash from: basedOn/display (medstat_basedon_display)
          COALESCE(db.to_char_immutable(medstat_status), '#NULL#') || '|||' || -- hash from: status (medstat_status)
          COALESCE(db.to_char_immutable(medstat_statusreason_system), '#NULL#') || '|||' || -- hash from: statusReason/coding/system (medstat_statusreason_system)
          COALESCE(db.to_char_immutable(medstat_statusreason_version), '#NULL#') || '|||' || -- hash from: statusReason/coding/version (medstat_statusreason_version)
          COALESCE(db.to_char_immutable(medstat_statusreason_code), '#NULL#') || '|||' || -- hash from: statusReason/coding/code (medstat_statusreason_code)
          COALESCE(db.to_char_immutable(medstat_statusreason_display), '#NULL#') || '|||' || -- hash from: statusReason/coding/display (medstat_statusreason_display)
          COALESCE(db.to_char_immutable(medstat_statusreason_text), '#NULL#') || '|||' || -- hash from: statusReason/text (medstat_statusreason_text)
          COALESCE(db.to_char_immutable(medstat_category_system), '#NULL#') || '|||' || -- hash from: category/coding/system (medstat_category_system)
          COALESCE(db.to_char_immutable(medstat_category_version), '#NULL#') || '|||' || -- hash from: category/coding/version (medstat_category_version)
          COALESCE(db.to_char_immutable(medstat_category_code), '#NULL#') || '|||' || -- hash from: category/coding/code (medstat_category_code)
          COALESCE(db.to_char_immutable(medstat_category_display), '#NULL#') || '|||' || -- hash from: category/coding/display (medstat_category_display)
          COALESCE(db.to_char_immutable(medstat_category_text), '#NULL#') || '|||' || -- hash from: category/text (medstat_category_text)
          COALESCE(db.to_char_immutable(medstat_medicationreference_ref), '#NULL#') || '|||' || -- hash from: medicationReference/reference (medstat_medicationreference_ref)
          COALESCE(db.to_char_immutable(medstat_medicationcodeableconcept_system), '#NULL#') || '|||' || -- hash from: medicationCodeableConcept/coding/system (medstat_medicationcodeableconcept_system)
          COALESCE(db.to_char_immutable(medstat_medicationcodeableconcept_version), '#NULL#') || '|||' || -- hash from: medicationCodeableConcept/coding/version (medstat_medicationcodeableconcept_version)
          COALESCE(db.to_char_immutable(medstat_medicationcodeableconcept_code), '#NULL#') || '|||' || -- hash from: medicationCodeableConcept/coding/code (medstat_medicationcodeableconcept_code)
          COALESCE(db.to_char_immutable(medstat_medicationcodeableconcept_display), '#NULL#') || '|||' || -- hash from: medicationCodeableConcept/coding/display (medstat_medicationcodeableconcept_display)
          COALESCE(db.to_char_immutable(medstat_medicationcodeableconcept_text), '#NULL#') || '|||' || -- hash from: medicationCodeableConcept/text (medstat_medicationcodeableconcept_text)
          COALESCE(db.to_char_immutable(medstat_effectivedatetime), '#NULL#') || '|||' || -- hash from: effectiveDateTime (medstat_effectivedatetime)
          COALESCE(db.to_char_immutable(medstat_effectiveperiod_start), '#NULL#') || '|||' || -- hash from: effectivePeriod/start (medstat_effectiveperiod_start)
          COALESCE(db.to_char_immutable(medstat_effectiveperiod_end), '#NULL#') || '|||' || -- hash from: effectivePeriod/end (medstat_effectiveperiod_end)
          COALESCE(db.to_char_immutable(medstat_dateasserted), '#NULL#') || '|||' || -- hash from: dateAsserted (medstat_dateasserted)
          COALESCE(db.to_char_immutable(medstat_informationsource_ref), '#NULL#') || '|||' || -- hash from: informationSource/reference (medstat_informationsource_ref)
          COALESCE(db.to_char_immutable(medstat_informationsource_type), '#NULL#') || '|||' || -- hash from: informationSource/type (medstat_informationsource_type)
          COALESCE(db.to_char_immutable(medstat_informationsource_identifier_use), '#NULL#') || '|||' || -- hash from: informationSource/identifier/use (medstat_informationsource_identifier_use)
          COALESCE(db.to_char_immutable(medstat_informationsource_identifier_type_system), '#NULL#') || '|||' || -- hash from: informationSource/identifier/type/coding/system (medstat_informationsource_identifier_type_system)
          COALESCE(db.to_char_immutable(medstat_informationsource_identifier_type_version), '#NULL#') || '|||' || -- hash from: informationSource/identifier/type/coding/version (medstat_informationsource_identifier_type_version)
          COALESCE(db.to_char_immutable(medstat_informationsource_identifier_type_code), '#NULL#') || '|||' || -- hash from: informationSource/identifier/type/coding/code (medstat_informationsource_identifier_type_code)
          COALESCE(db.to_char_immutable(medstat_informationsource_identifier_type_display), '#NULL#') || '|||' || -- hash from: informationSource/identifier/type/coding/display (medstat_informationsource_identifier_type_display)
          COALESCE(db.to_char_immutable(medstat_informationsource_identifier_type_text), '#NULL#') || '|||' || -- hash from: informationSource/identifier/type/text (medstat_informationsource_identifier_type_text)
          COALESCE(db.to_char_immutable(medstat_informationsource_identifier_system), '#NULL#') || '|||' || -- hash from: informationSource/identifier/system (medstat_informationsource_identifier_system)
          COALESCE(db.to_char_immutable(medstat_informationsource_identifier_value), '#NULL#') || '|||' || -- hash from: informationSource/identifier/value (medstat_informationsource_identifier_value)
          COALESCE(db.to_char_immutable(medstat_informationsource_display), '#NULL#') || '|||' || -- hash from: informationSource/display (medstat_informationsource_display)
          COALESCE(db.to_char_immutable(medstat_derivedfrom_ref), '#NULL#') || '|||' || -- hash from: derivedFrom/reference (medstat_derivedfrom_ref)
          COALESCE(db.to_char_immutable(medstat_derivedfrom_type), '#NULL#') || '|||' || -- hash from: derivedFrom/type (medstat_derivedfrom_type)
          COALESCE(db.to_char_immutable(medstat_derivedfrom_identifier_use), '#NULL#') || '|||' || -- hash from: derivedFrom/identifier/use (medstat_derivedfrom_identifier_use)
          COALESCE(db.to_char_immutable(medstat_derivedfrom_identifier_type_system), '#NULL#') || '|||' || -- hash from: derivedFrom/identifier/type/coding/system (medstat_derivedfrom_identifier_type_system)
          COALESCE(db.to_char_immutable(medstat_derivedfrom_identifier_type_version), '#NULL#') || '|||' || -- hash from: derivedFrom/identifier/type/coding/version (medstat_derivedfrom_identifier_type_version)
          COALESCE(db.to_char_immutable(medstat_derivedfrom_identifier_type_code), '#NULL#') || '|||' || -- hash from: derivedFrom/identifier/type/coding/code (medstat_derivedfrom_identifier_type_code)
          COALESCE(db.to_char_immutable(medstat_derivedfrom_identifier_type_display), '#NULL#') || '|||' || -- hash from: derivedFrom/identifier/type/coding/display (medstat_derivedfrom_identifier_type_display)
          COALESCE(db.to_char_immutable(medstat_derivedfrom_identifier_type_text), '#NULL#') || '|||' || -- hash from: derivedFrom/identifier/type/text (medstat_derivedfrom_identifier_type_text)
          COALESCE(db.to_char_immutable(medstat_derivedfrom_identifier_system), '#NULL#') || '|||' || -- hash from: derivedFrom/identifier/system (medstat_derivedfrom_identifier_system)
          COALESCE(db.to_char_immutable(medstat_derivedfrom_identifier_value), '#NULL#') || '|||' || -- hash from: derivedFrom/identifier/value (medstat_derivedfrom_identifier_value)
          COALESCE(db.to_char_immutable(medstat_derivedfrom_display), '#NULL#') || '|||' || -- hash from: derivedFrom/display (medstat_derivedfrom_display)
          COALESCE(db.to_char_immutable(medstat_reasoncode_system), '#NULL#') || '|||' || -- hash from: reasonCode/coding/system (medstat_reasoncode_system)
          COALESCE(db.to_char_immutable(medstat_reasoncode_version), '#NULL#') || '|||' || -- hash from: reasonCode/coding/version (medstat_reasoncode_version)
          COALESCE(db.to_char_immutable(medstat_reasoncode_code), '#NULL#') || '|||' || -- hash from: reasonCode/coding/code (medstat_reasoncode_code)
          COALESCE(db.to_char_immutable(medstat_reasoncode_display), '#NULL#') || '|||' || -- hash from: reasonCode/coding/display (medstat_reasoncode_display)
          COALESCE(db.to_char_immutable(medstat_reasoncode_text), '#NULL#') || '|||' || -- hash from: reasonCode/text (medstat_reasoncode_text)
          COALESCE(db.to_char_immutable(medstat_reasonreference_ref), '#NULL#') || '|||' || -- hash from: reasonReference/reference (medstat_reasonreference_ref)
          COALESCE(db.to_char_immutable(medstat_reasonreference_type), '#NULL#') || '|||' || -- hash from: reasonReference/type (medstat_reasonreference_type)
          COALESCE(db.to_char_immutable(medstat_reasonreference_identifier_use), '#NULL#') || '|||' || -- hash from: reasonReference/identifier/use (medstat_reasonreference_identifier_use)
          COALESCE(db.to_char_immutable(medstat_reasonreference_identifier_type_system), '#NULL#') || '|||' || -- hash from: reasonReference/identifier/type/coding/system (medstat_reasonreference_identifier_type_system)
          COALESCE(db.to_char_immutable(medstat_reasonreference_identifier_type_version), '#NULL#') || '|||' || -- hash from: reasonReference/identifier/type/coding/version (medstat_reasonreference_identifier_type_version)
          COALESCE(db.to_char_immutable(medstat_reasonreference_identifier_type_code), '#NULL#') || '|||' || -- hash from: reasonReference/identifier/type/coding/code (medstat_reasonreference_identifier_type_code)
          COALESCE(db.to_char_immutable(medstat_reasonreference_identifier_type_display), '#NULL#') || '|||' || -- hash from: reasonReference/identifier/type/coding/display (medstat_reasonreference_identifier_type_display)
          COALESCE(db.to_char_immutable(medstat_reasonreference_identifier_type_text), '#NULL#') || '|||' || -- hash from: reasonReference/identifier/type/text (medstat_reasonreference_identifier_type_text)
          COALESCE(db.to_char_immutable(medstat_reasonreference_identifier_system), '#NULL#') || '|||' || -- hash from: reasonReference/identifier/system (medstat_reasonreference_identifier_system)
          COALESCE(db.to_char_immutable(medstat_reasonreference_identifier_value), '#NULL#') || '|||' || -- hash from: reasonReference/identifier/value (medstat_reasonreference_identifier_value)
          COALESCE(db.to_char_immutable(medstat_reasonreference_display), '#NULL#') || '|||' || -- hash from: reasonReference/display (medstat_reasonreference_display)
          COALESCE(db.to_char_immutable(medstat_note_authorstring), '#NULL#') || '|||' || -- hash from: note/authorString (medstat_note_authorstring)
          COALESCE(db.to_char_immutable(medstat_note_authorreference_ref), '#NULL#') || '|||' || -- hash from: note/authorReference/reference (medstat_note_authorreference_ref)
          COALESCE(db.to_char_immutable(medstat_note_authorreference_type), '#NULL#') || '|||' || -- hash from: note/authorReference/type (medstat_note_authorreference_type)
          COALESCE(db.to_char_immutable(medstat_note_authorreference_identifier_use), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/use (medstat_note_authorreference_identifier_use)
          COALESCE(db.to_char_immutable(medstat_note_authorreference_identifier_type_system), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/type/coding/system (medstat_note_authorreference_identifier_type_system)
          COALESCE(db.to_char_immutable(medstat_note_authorreference_identifier_type_version), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/type/coding/version (medstat_note_authorreference_identifier_type_version)
          COALESCE(db.to_char_immutable(medstat_note_authorreference_identifier_type_code), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/type/coding/code (medstat_note_authorreference_identifier_type_code)
          COALESCE(db.to_char_immutable(medstat_note_authorreference_identifier_type_display), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/type/coding/display (medstat_note_authorreference_identifier_type_display)
          COALESCE(db.to_char_immutable(medstat_note_authorreference_identifier_type_text), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/type/text (medstat_note_authorreference_identifier_type_text)
          COALESCE(db.to_char_immutable(medstat_note_authorreference_identifier_system), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/system (medstat_note_authorreference_identifier_system)
          COALESCE(db.to_char_immutable(medstat_note_authorreference_identifier_value), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/value (medstat_note_authorreference_identifier_value)
          COALESCE(db.to_char_immutable(medstat_note_authorreference_display), '#NULL#') || '|||' || -- hash from: note/authorReference/display (medstat_note_authorreference_display)
          COALESCE(db.to_char_immutable(medstat_note_time), '#NULL#') || '|||' || -- hash from: note/time (medstat_note_time)
          COALESCE(db.to_char_immutable(medstat_note_text), '#NULL#') || '|||' || -- hash from: note/text (medstat_note_text)
          COALESCE(db.to_char_immutable(medstat_dosage_sequence), '#NULL#') || '|||' || -- hash from: dosage/sequence (medstat_dosage_sequence)
          COALESCE(db.to_char_immutable(medstat_dosage_text), '#NULL#') || '|||' || -- hash from: dosage/text (medstat_dosage_text)
          COALESCE(db.to_char_immutable(medstat_dosage_additionalinstruction_system), '#NULL#') || '|||' || -- hash from: dosage/additionalInstruction/coding/system (medstat_dosage_additionalinstruction_system)
          COALESCE(db.to_char_immutable(medstat_dosage_additionalinstruction_version), '#NULL#') || '|||' || -- hash from: dosage/additionalInstruction/coding/version (medstat_dosage_additionalinstruction_version)
          COALESCE(db.to_char_immutable(medstat_dosage_additionalinstruction_code), '#NULL#') || '|||' || -- hash from: dosage/additionalInstruction/coding/code (medstat_dosage_additionalinstruction_code)
          COALESCE(db.to_char_immutable(medstat_dosage_additionalinstruction_display), '#NULL#') || '|||' || -- hash from: dosage/additionalInstruction/coding/display (medstat_dosage_additionalinstruction_display)
          COALESCE(db.to_char_immutable(medstat_dosage_additionalinstruction_text), '#NULL#') || '|||' || -- hash from: dosage/additionalInstruction/text (medstat_dosage_additionalinstruction_text)
          COALESCE(db.to_char_immutable(medstat_dosage_patientinstruction), '#NULL#') || '|||' || -- hash from: dosage/patientInstruction (medstat_dosage_patientinstruction)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_event), '#NULL#') || '|||' || -- hash from: dosage/timing/event (medstat_dosage_timing_event)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_boundsduration_value), '#NULL#') || '|||' || -- hash from: dosage/timing/repeat/boundsDuration/value (medstat_dosage_timing_repeat_boundsduration_value)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_boundsduration_comparator), '#NULL#') || '|||' || -- hash from: dosage/timing/repeat/boundsDuration/comparator (medstat_dosage_timing_repeat_boundsduration_comparator)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_boundsduration_unit), '#NULL#') || '|||' || -- hash from: dosage/timing/repeat/boundsDuration/unit (medstat_dosage_timing_repeat_boundsduration_unit)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_boundsduration_system), '#NULL#') || '|||' || -- hash from: dosage/timing/repeat/boundsDuration/system (medstat_dosage_timing_repeat_boundsduration_system)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_boundsduration_code), '#NULL#') || '|||' || -- hash from: dosage/timing/repeat/boundsDuration/code (medstat_dosage_timing_repeat_boundsduration_code)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_boundsrange_low_value), '#NULL#') || '|||' || -- hash from: dosage/timing/repeat/boundsRange/low/value (medstat_dosage_timing_repeat_boundsrange_low_value)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_boundsrange_low_unit), '#NULL#') || '|||' || -- hash from: dosage/timing/repeat/boundsRange/low/unit (medstat_dosage_timing_repeat_boundsrange_low_unit)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_boundsrange_low_system), '#NULL#') || '|||' || -- hash from: dosage/timing/repeat/boundsRange/low/system (medstat_dosage_timing_repeat_boundsrange_low_system)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_boundsrange_low_code), '#NULL#') || '|||' || -- hash from: dosage/timing/repeat/boundsRange/low/code (medstat_dosage_timing_repeat_boundsrange_low_code)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_boundsrange_high_value), '#NULL#') || '|||' || -- hash from: dosage/timing/repeat/boundsRange/high/value (medstat_dosage_timing_repeat_boundsrange_high_value)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_boundsrange_high_unit), '#NULL#') || '|||' || -- hash from: dosage/timing/repeat/boundsRange/high/unit (medstat_dosage_timing_repeat_boundsrange_high_unit)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_boundsrange_high_system), '#NULL#') || '|||' || -- hash from: dosage/timing/repeat/boundsRange/high/system (medstat_dosage_timing_repeat_boundsrange_high_system)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_boundsrange_high_code), '#NULL#') || '|||' || -- hash from: dosage/timing/repeat/boundsRange/high/code (medstat_dosage_timing_repeat_boundsrange_high_code)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_boundsperiod_start), '#NULL#') || '|||' || -- hash from: dosage/timing/repeat/boundsPeriod/start (medstat_dosage_timing_repeat_boundsperiod_start)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_boundsperiod_end), '#NULL#') || '|||' || -- hash from: dosage/timing/repeat/boundsPeriod/end (medstat_dosage_timing_repeat_boundsperiod_end)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_count), '#NULL#') || '|||' || -- hash from: dosage/timing/repeat/count (medstat_dosage_timing_repeat_count)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_countmax), '#NULL#') || '|||' || -- hash from: dosage/timing/repeat/countMax (medstat_dosage_timing_repeat_countmax)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_duration), '#NULL#') || '|||' || -- hash from: dosage/timing/repeat/duration (medstat_dosage_timing_repeat_duration)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_durationmax), '#NULL#') || '|||' || -- hash from: dosage/timing/repeat/durationMax (medstat_dosage_timing_repeat_durationmax)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_durationunit), '#NULL#') || '|||' || -- hash from: dosage/timing/repeat/durationUnit (medstat_dosage_timing_repeat_durationunit)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_frequency), '#NULL#') || '|||' || -- hash from: dosage/timing/repeat/frequency (medstat_dosage_timing_repeat_frequency)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_frequencymax), '#NULL#') || '|||' || -- hash from: dosage/timing/repeat/frequencyMax (medstat_dosage_timing_repeat_frequencymax)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_period), '#NULL#') || '|||' || -- hash from: dosage/timing/repeat/period (medstat_dosage_timing_repeat_period)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_periodmax), '#NULL#') || '|||' || -- hash from: dosage/timing/repeat/periodMax (medstat_dosage_timing_repeat_periodmax)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_periodunit), '#NULL#') || '|||' || -- hash from: dosage/timing/repeat/periodUnit (medstat_dosage_timing_repeat_periodunit)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_dayofweek), '#NULL#') || '|||' || -- hash from: dosage/timing/repeat/dayOfWeek (medstat_dosage_timing_repeat_dayofweek)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_timeofday), '#NULL#') || '|||' || -- hash from: dosage/timing/repeat/timeOfDay (medstat_dosage_timing_repeat_timeofday)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_when), '#NULL#') || '|||' || -- hash from: dosage/timing/repeat/when (medstat_dosage_timing_repeat_when)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_offset), '#NULL#') || '|||' || -- hash from: dosage/timing/repeat/offset (medstat_dosage_timing_repeat_offset)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_code_system), '#NULL#') || '|||' || -- hash from: dosage/timing/code/coding/system (medstat_dosage_timing_code_system)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_code_version), '#NULL#') || '|||' || -- hash from: dosage/timing/code/coding/version (medstat_dosage_timing_code_version)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_code_code), '#NULL#') || '|||' || -- hash from: dosage/timing/code/coding/code (medstat_dosage_timing_code_code)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_code_display), '#NULL#') || '|||' || -- hash from: dosage/timing/code/coding/display (medstat_dosage_timing_code_display)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_code_text), '#NULL#') || '|||' || -- hash from: dosage/timing/code/text (medstat_dosage_timing_code_text)
          COALESCE(db.to_char_immutable(medstat_dosage_asneededboolean), '#NULL#') || '|||' || -- hash from: dosage/asNeededBoolean (medstat_dosage_asneededboolean)
          COALESCE(db.to_char_immutable(medstat_dosage_asneededcodeableconcept_system), '#NULL#') || '|||' || -- hash from: dosage/asNeededCodeableConcept/coding/system (medstat_dosage_asneededcodeableconcept_system)
          COALESCE(db.to_char_immutable(medstat_dosage_asneededcodeableconcept_version), '#NULL#') || '|||' || -- hash from: dosage/asNeededCodeableConcept/coding/version (medstat_dosage_asneededcodeableconcept_version)
          COALESCE(db.to_char_immutable(medstat_dosage_asneededcodeableconcept_code), '#NULL#') || '|||' || -- hash from: dosage/asNeededCodeableConcept/coding/code (medstat_dosage_asneededcodeableconcept_code)
          COALESCE(db.to_char_immutable(medstat_dosage_asneededcodeableconcept_display), '#NULL#') || '|||' || -- hash from: dosage/asNeededCodeableConcept/coding/display (medstat_dosage_asneededcodeableconcept_display)
          COALESCE(db.to_char_immutable(medstat_dosage_asneededcodeableconcept_text), '#NULL#') || '|||' || -- hash from: dosage/asNeededCodeableConcept/text (medstat_dosage_asneededcodeableconcept_text)
          COALESCE(db.to_char_immutable(medstat_dosage_site_system), '#NULL#') || '|||' || -- hash from: dosage/site/coding/system (medstat_dosage_site_system)
          COALESCE(db.to_char_immutable(medstat_dosage_site_version), '#NULL#') || '|||' || -- hash from: dosage/site/coding/version (medstat_dosage_site_version)
          COALESCE(db.to_char_immutable(medstat_dosage_site_code), '#NULL#') || '|||' || -- hash from: dosage/site/coding/code (medstat_dosage_site_code)
          COALESCE(db.to_char_immutable(medstat_dosage_site_display), '#NULL#') || '|||' || -- hash from: dosage/site/coding/display (medstat_dosage_site_display)
          COALESCE(db.to_char_immutable(medstat_dosage_site_text), '#NULL#') || '|||' || -- hash from: dosage/site/text (medstat_dosage_site_text)
          COALESCE(db.to_char_immutable(medstat_dosage_route_system), '#NULL#') || '|||' || -- hash from: dosage/route/coding/system (medstat_dosage_route_system)
          COALESCE(db.to_char_immutable(medstat_dosage_route_version), '#NULL#') || '|||' || -- hash from: dosage/route/coding/version (medstat_dosage_route_version)
          COALESCE(db.to_char_immutable(medstat_dosage_route_code), '#NULL#') || '|||' || -- hash from: dosage/route/coding/code (medstat_dosage_route_code)
          COALESCE(db.to_char_immutable(medstat_dosage_route_display), '#NULL#') || '|||' || -- hash from: dosage/route/coding/display (medstat_dosage_route_display)
          COALESCE(db.to_char_immutable(medstat_dosage_route_text), '#NULL#') || '|||' || -- hash from: dosage/route/text (medstat_dosage_route_text)
          COALESCE(db.to_char_immutable(medstat_dosage_method_system), '#NULL#') || '|||' || -- hash from: dosage/method/coding/system (medstat_dosage_method_system)
          COALESCE(db.to_char_immutable(medstat_dosage_method_version), '#NULL#') || '|||' || -- hash from: dosage/method/coding/version (medstat_dosage_method_version)
          COALESCE(db.to_char_immutable(medstat_dosage_method_code), '#NULL#') || '|||' || -- hash from: dosage/method/coding/code (medstat_dosage_method_code)
          COALESCE(db.to_char_immutable(medstat_dosage_method_display), '#NULL#') || '|||' || -- hash from: dosage/method/coding/display (medstat_dosage_method_display)
          COALESCE(db.to_char_immutable(medstat_dosage_method_text), '#NULL#') || '|||' || -- hash from: dosage/method/text (medstat_dosage_method_text)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_type_system), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/type/coding/system (medstat_dosage_doseandrate_type_system)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_type_version), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/type/coding/version (medstat_dosage_doseandrate_type_version)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_type_code), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/type/coding/code (medstat_dosage_doseandrate_type_code)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_type_display), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/type/coding/display (medstat_dosage_doseandrate_type_display)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_type_text), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/type/text (medstat_dosage_doseandrate_type_text)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_doserange_low_value), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/doseRange/low/value (medstat_dosage_doseandrate_doserange_low_value)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_doserange_low_unit), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/doseRange/low/unit (medstat_dosage_doseandrate_doserange_low_unit)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_doserange_low_system), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/doseRange/low/system (medstat_dosage_doseandrate_doserange_low_system)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_doserange_low_code), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/doseRange/low/code (medstat_dosage_doseandrate_doserange_low_code)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_doserange_high_value), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/doseRange/high/value (medstat_dosage_doseandrate_doserange_high_value)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_doserange_high_unit), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/doseRange/high/unit (medstat_dosage_doseandrate_doserange_high_unit)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_doserange_high_system), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/doseRange/high/system (medstat_dosage_doseandrate_doserange_high_system)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_doserange_high_code), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/doseRange/high/code (medstat_dosage_doseandrate_doserange_high_code)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_dosequantity_value), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/doseQuantity/value (medstat_dosage_doseandrate_dosequantity_value)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_dosequantity_comparator), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/doseQuantity/comparator (medstat_dosage_doseandrate_dosequantity_comparator)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_dosequantity_unit), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/doseQuantity/unit (medstat_dosage_doseandrate_dosequantity_unit)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_dosequantity_system), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/doseQuantity/system (medstat_dosage_doseandrate_dosequantity_system)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_dosequantity_code), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/doseQuantity/code (medstat_dosage_doseandrate_dosequantity_code)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_rateratio_numerator_value), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/rateRatio/numerator/value (medstat_dosage_doseandrate_rateratio_numerator_value)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_rateratio_numerator_comparator), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/rateRatio/numerator/comparator (medstat_dosage_doseandrate_rateratio_numerator_comparator)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_rateratio_numerator_unit), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/rateRatio/numerator/unit (medstat_dosage_doseandrate_rateratio_numerator_unit)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_rateratio_numerator_system), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/rateRatio/numerator/system (medstat_dosage_doseandrate_rateratio_numerator_system)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_rateratio_numerator_code), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/rateRatio/numerator/code (medstat_dosage_doseandrate_rateratio_numerator_code)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_rateratio_denominator_value), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/rateRatio/denominator/value (medstat_dosage_doseandrate_rateratio_denominator_value)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_rateratio_denominator_comparator), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/rateRatio/denominator/comparator (medstat_dosage_doseandrate_rateratio_denominator_comparator)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_rateratio_denominator_unit), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/rateRatio/denominator/unit (medstat_dosage_doseandrate_rateratio_denominator_unit)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_rateratio_denominator_system), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/rateRatio/denominator/system (medstat_dosage_doseandrate_rateratio_denominator_system)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_rateratio_denominator_code), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/rateRatio/denominator/code (medstat_dosage_doseandrate_rateratio_denominator_code)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_raterange_low_value), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/rateRange/low/value (medstat_dosage_doseandrate_raterange_low_value)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_raterange_low_unit), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/rateRange/low/unit (medstat_dosage_doseandrate_raterange_low_unit)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_raterange_low_system), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/rateRange/low/system (medstat_dosage_doseandrate_raterange_low_system)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_raterange_low_code), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/rateRange/low/code (medstat_dosage_doseandrate_raterange_low_code)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_raterange_high_value), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/rateRange/high/value (medstat_dosage_doseandrate_raterange_high_value)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_raterange_high_unit), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/rateRange/high/unit (medstat_dosage_doseandrate_raterange_high_unit)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_raterange_high_system), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/rateRange/high/system (medstat_dosage_doseandrate_raterange_high_system)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_raterange_high_code), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/rateRange/high/code (medstat_dosage_doseandrate_raterange_high_code)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_ratequantity_value), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/rateQuantity/value (medstat_dosage_doseandrate_ratequantity_value)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_ratequantity_unit), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/rateQuantity/unit (medstat_dosage_doseandrate_ratequantity_unit)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_ratequantity_system), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/rateQuantity/system (medstat_dosage_doseandrate_ratequantity_system)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_ratequantity_code), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/rateQuantity/code (medstat_dosage_doseandrate_ratequantity_code)
          COALESCE(db.to_char_immutable(medstat_dosage_maxdoseperperiod_numerator_value), '#NULL#') || '|||' || -- hash from: dosage/maxDosePerPeriod/numerator/value (medstat_dosage_maxdoseperperiod_numerator_value)
          COALESCE(db.to_char_immutable(medstat_dosage_maxdoseperperiod_numerator_comparator), '#NULL#') || '|||' || -- hash from: dosage/maxDosePerPeriod/numerator/comparator (medstat_dosage_maxdoseperperiod_numerator_comparator)
          COALESCE(db.to_char_immutable(medstat_dosage_maxdoseperperiod_numerator_unit), '#NULL#') || '|||' || -- hash from: dosage/maxDosePerPeriod/numerator/unit (medstat_dosage_maxdoseperperiod_numerator_unit)
          COALESCE(db.to_char_immutable(medstat_dosage_maxdoseperperiod_numerator_system), '#NULL#') || '|||' || -- hash from: dosage/maxDosePerPeriod/numerator/system (medstat_dosage_maxdoseperperiod_numerator_system)
          COALESCE(db.to_char_immutable(medstat_dosage_maxdoseperperiod_numerator_code), '#NULL#') || '|||' || -- hash from: dosage/maxDosePerPeriod/numerator/code (medstat_dosage_maxdoseperperiod_numerator_code)
          COALESCE(db.to_char_immutable(medstat_dosage_maxdoseperperiod_denominator_value), '#NULL#') || '|||' || -- hash from: dosage/maxDosePerPeriod/denominator/value (medstat_dosage_maxdoseperperiod_denominator_value)
          COALESCE(db.to_char_immutable(medstat_dosage_maxdoseperperiod_denominator_comparator), '#NULL#') || '|||' || -- hash from: dosage/maxDosePerPeriod/denominator/comparator (medstat_dosage_maxdoseperperiod_denominator_comparator)
          COALESCE(db.to_char_immutable(medstat_dosage_maxdoseperperiod_denominator_unit), '#NULL#') || '|||' || -- hash from: dosage/maxDosePerPeriod/denominator/unit (medstat_dosage_maxdoseperperiod_denominator_unit)
          COALESCE(db.to_char_immutable(medstat_dosage_maxdoseperperiod_denominator_system), '#NULL#') || '|||' || -- hash from: dosage/maxDosePerPeriod/denominator/system (medstat_dosage_maxdoseperperiod_denominator_system)
          COALESCE(db.to_char_immutable(medstat_dosage_maxdoseperperiod_denominator_code), '#NULL#') || '|||' || -- hash from: dosage/maxDosePerPeriod/denominator/code (medstat_dosage_maxdoseperperiod_denominator_code)
          COALESCE(db.to_char_immutable(medstat_dosage_maxdoseperadministration_value), '#NULL#') || '|||' || -- hash from: dosage/maxDosePerAdministration/value (medstat_dosage_maxdoseperadministration_value)
          COALESCE(db.to_char_immutable(medstat_dosage_maxdoseperadministration_unit), '#NULL#') || '|||' || -- hash from: dosage/maxDosePerAdministration/unit (medstat_dosage_maxdoseperadministration_unit)
          COALESCE(db.to_char_immutable(medstat_dosage_maxdoseperadministration_system), '#NULL#') || '|||' || -- hash from: dosage/maxDosePerAdministration/system (medstat_dosage_maxdoseperadministration_system)
          COALESCE(db.to_char_immutable(medstat_dosage_maxdoseperadministration_code), '#NULL#') || '|||' || -- hash from: dosage/maxDosePerAdministration/code (medstat_dosage_maxdoseperadministration_code)
          COALESCE(db.to_char_immutable(medstat_dosage_maxdoseperlifetime_value), '#NULL#') || '|||' || -- hash from: dosage/maxDosePerLifetime/value (medstat_dosage_maxdoseperlifetime_value)
          COALESCE(db.to_char_immutable(medstat_dosage_maxdoseperlifetime_unit), '#NULL#') || '|||' || -- hash from: dosage/maxDosePerLifetime/unit (medstat_dosage_maxdoseperlifetime_unit)
          COALESCE(db.to_char_immutable(medstat_dosage_maxdoseperlifetime_system), '#NULL#') || '|||' || -- hash from: dosage/maxDosePerLifetime/system (medstat_dosage_maxdoseperlifetime_system)
          COALESCE(db.to_char_immutable(medstat_dosage_maxdoseperlifetime_code), '#NULL#') || '|||' || -- hash from: dosage/maxDosePerLifetime/code (medstat_dosage_maxdoseperlifetime_code)
                 '#'
               )
            ) STORED; -- Column for hash value for comparing FHIR data - collion check in second step hash_index_col
            END IF; -- currend hash definition
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'medicationstatement'
            AND column_name = 'hash_index_col'
        ) THEN
            -- Creating the hash column
            ALTER TABLE cds2db_in.medicationstatement ADD
            hash_index_col TEXT GENERATED ALWAYS AS (
            md5(
	         COALESCE(db.to_char_immutable(medstat_id), '#NULL#') || '|||' || -- hash from: id (medstat_id)
          COALESCE(db.to_char_immutable(medstat_identifier_use), '#NULL#') || '|||' || -- hash from: identifier/use (medstat_identifier_use)
          COALESCE(db.to_char_immutable(medstat_identifier_type_system), '#NULL#') || '|||' || -- hash from: identifier/type/coding/system (medstat_identifier_type_system)
          COALESCE(db.to_char_immutable(medstat_identifier_type_version), '#NULL#') || '|||' || -- hash from: identifier/type/coding/version (medstat_identifier_type_version)
          COALESCE(db.to_char_immutable(medstat_identifier_type_code), '#NULL#') || '|||' || -- hash from: identifier/type/coding/code (medstat_identifier_type_code)
          COALESCE(db.to_char_immutable(medstat_identifier_type_display), '#NULL#') || '|||' || -- hash from: identifier/type/coding/display (medstat_identifier_type_display)
          COALESCE(db.to_char_immutable(medstat_identifier_type_text), '#NULL#') || '|||' || -- hash from: identifier/type/text (medstat_identifier_type_text)
          COALESCE(db.to_char_immutable(medstat_identifier_system), '#NULL#') || '|||' || -- hash from: identifier/system (medstat_identifier_system)
          COALESCE(db.to_char_immutable(medstat_identifier_value), '#NULL#') || '|||' || -- hash from: identifier/value (medstat_identifier_value)
          COALESCE(db.to_char_immutable(medstat_identifier_start), '#NULL#') || '|||' || -- hash from: identifier/start (medstat_identifier_start)
          COALESCE(db.to_char_immutable(medstat_identifier_end), '#NULL#') || '|||' || -- hash from: identifier/end (medstat_identifier_end)
          COALESCE(db.to_char_immutable(medstat_encounter_ref), '#NULL#') || '|||' || -- hash from: context/reference (medstat_encounter_ref)
          COALESCE(db.to_char_immutable(medstat_patient_ref), '#NULL#') || '|||' || -- hash from: subject/reference (medstat_patient_ref)
          COALESCE(db.to_char_immutable(medstat_partof_ref), '#NULL#') || '|||' || -- hash from: partOf/reference (medstat_partof_ref)
          COALESCE(db.to_char_immutable(medstat_basedon_ref), '#NULL#') || '|||' || -- hash from: basedOn/reference (medstat_basedon_ref)
          COALESCE(db.to_char_immutable(medstat_basedon_type), '#NULL#') || '|||' || -- hash from: basedOn/type (medstat_basedon_type)
          COALESCE(db.to_char_immutable(medstat_basedon_identifier_use), '#NULL#') || '|||' || -- hash from: basedOn/identifier/use (medstat_basedon_identifier_use)
          COALESCE(db.to_char_immutable(medstat_basedon_identifier_type_system), '#NULL#') || '|||' || -- hash from: basedOn/identifier/type/coding/system (medstat_basedon_identifier_type_system)
          COALESCE(db.to_char_immutable(medstat_basedon_identifier_type_version), '#NULL#') || '|||' || -- hash from: basedOn/identifier/type/coding/version (medstat_basedon_identifier_type_version)
          COALESCE(db.to_char_immutable(medstat_basedon_identifier_type_code), '#NULL#') || '|||' || -- hash from: basedOn/identifier/type/coding/code (medstat_basedon_identifier_type_code)
          COALESCE(db.to_char_immutable(medstat_basedon_identifier_type_display), '#NULL#') || '|||' || -- hash from: basedOn/identifier/type/coding/display (medstat_basedon_identifier_type_display)
          COALESCE(db.to_char_immutable(medstat_basedon_identifier_type_text), '#NULL#') || '|||' || -- hash from: basedOn/identifier/type/text (medstat_basedon_identifier_type_text)
          COALESCE(db.to_char_immutable(medstat_basedon_identifier_system), '#NULL#') || '|||' || -- hash from: basedOn/identifier/system (medstat_basedon_identifier_system)
          COALESCE(db.to_char_immutable(medstat_basedon_identifier_value), '#NULL#') || '|||' || -- hash from: basedOn/identifier/value (medstat_basedon_identifier_value)
          COALESCE(db.to_char_immutable(medstat_basedon_display), '#NULL#') || '|||' || -- hash from: basedOn/display (medstat_basedon_display)
          COALESCE(db.to_char_immutable(medstat_status), '#NULL#') || '|||' || -- hash from: status (medstat_status)
          COALESCE(db.to_char_immutable(medstat_statusreason_system), '#NULL#') || '|||' || -- hash from: statusReason/coding/system (medstat_statusreason_system)
          COALESCE(db.to_char_immutable(medstat_statusreason_version), '#NULL#') || '|||' || -- hash from: statusReason/coding/version (medstat_statusreason_version)
          COALESCE(db.to_char_immutable(medstat_statusreason_code), '#NULL#') || '|||' || -- hash from: statusReason/coding/code (medstat_statusreason_code)
          COALESCE(db.to_char_immutable(medstat_statusreason_display), '#NULL#') || '|||' || -- hash from: statusReason/coding/display (medstat_statusreason_display)
          COALESCE(db.to_char_immutable(medstat_statusreason_text), '#NULL#') || '|||' || -- hash from: statusReason/text (medstat_statusreason_text)
          COALESCE(db.to_char_immutable(medstat_category_system), '#NULL#') || '|||' || -- hash from: category/coding/system (medstat_category_system)
          COALESCE(db.to_char_immutable(medstat_category_version), '#NULL#') || '|||' || -- hash from: category/coding/version (medstat_category_version)
          COALESCE(db.to_char_immutable(medstat_category_code), '#NULL#') || '|||' || -- hash from: category/coding/code (medstat_category_code)
          COALESCE(db.to_char_immutable(medstat_category_display), '#NULL#') || '|||' || -- hash from: category/coding/display (medstat_category_display)
          COALESCE(db.to_char_immutable(medstat_category_text), '#NULL#') || '|||' || -- hash from: category/text (medstat_category_text)
          COALESCE(db.to_char_immutable(medstat_medicationreference_ref), '#NULL#') || '|||' || -- hash from: medicationReference/reference (medstat_medicationreference_ref)
          COALESCE(db.to_char_immutable(medstat_medicationcodeableconcept_system), '#NULL#') || '|||' || -- hash from: medicationCodeableConcept/coding/system (medstat_medicationcodeableconcept_system)
          COALESCE(db.to_char_immutable(medstat_medicationcodeableconcept_version), '#NULL#') || '|||' || -- hash from: medicationCodeableConcept/coding/version (medstat_medicationcodeableconcept_version)
          COALESCE(db.to_char_immutable(medstat_medicationcodeableconcept_code), '#NULL#') || '|||' || -- hash from: medicationCodeableConcept/coding/code (medstat_medicationcodeableconcept_code)
          COALESCE(db.to_char_immutable(medstat_medicationcodeableconcept_display), '#NULL#') || '|||' || -- hash from: medicationCodeableConcept/coding/display (medstat_medicationcodeableconcept_display)
          COALESCE(db.to_char_immutable(medstat_medicationcodeableconcept_text), '#NULL#') || '|||' || -- hash from: medicationCodeableConcept/text (medstat_medicationcodeableconcept_text)
          COALESCE(db.to_char_immutable(medstat_effectivedatetime), '#NULL#') || '|||' || -- hash from: effectiveDateTime (medstat_effectivedatetime)
          COALESCE(db.to_char_immutable(medstat_effectiveperiod_start), '#NULL#') || '|||' || -- hash from: effectivePeriod/start (medstat_effectiveperiod_start)
          COALESCE(db.to_char_immutable(medstat_effectiveperiod_end), '#NULL#') || '|||' || -- hash from: effectivePeriod/end (medstat_effectiveperiod_end)
          COALESCE(db.to_char_immutable(medstat_dateasserted), '#NULL#') || '|||' || -- hash from: dateAsserted (medstat_dateasserted)
          COALESCE(db.to_char_immutable(medstat_informationsource_ref), '#NULL#') || '|||' || -- hash from: informationSource/reference (medstat_informationsource_ref)
          COALESCE(db.to_char_immutable(medstat_informationsource_type), '#NULL#') || '|||' || -- hash from: informationSource/type (medstat_informationsource_type)
          COALESCE(db.to_char_immutable(medstat_informationsource_identifier_use), '#NULL#') || '|||' || -- hash from: informationSource/identifier/use (medstat_informationsource_identifier_use)
          COALESCE(db.to_char_immutable(medstat_informationsource_identifier_type_system), '#NULL#') || '|||' || -- hash from: informationSource/identifier/type/coding/system (medstat_informationsource_identifier_type_system)
          COALESCE(db.to_char_immutable(medstat_informationsource_identifier_type_version), '#NULL#') || '|||' || -- hash from: informationSource/identifier/type/coding/version (medstat_informationsource_identifier_type_version)
          COALESCE(db.to_char_immutable(medstat_informationsource_identifier_type_code), '#NULL#') || '|||' || -- hash from: informationSource/identifier/type/coding/code (medstat_informationsource_identifier_type_code)
          COALESCE(db.to_char_immutable(medstat_informationsource_identifier_type_display), '#NULL#') || '|||' || -- hash from: informationSource/identifier/type/coding/display (medstat_informationsource_identifier_type_display)
          COALESCE(db.to_char_immutable(medstat_informationsource_identifier_type_text), '#NULL#') || '|||' || -- hash from: informationSource/identifier/type/text (medstat_informationsource_identifier_type_text)
          COALESCE(db.to_char_immutable(medstat_informationsource_identifier_system), '#NULL#') || '|||' || -- hash from: informationSource/identifier/system (medstat_informationsource_identifier_system)
          COALESCE(db.to_char_immutable(medstat_informationsource_identifier_value), '#NULL#') || '|||' || -- hash from: informationSource/identifier/value (medstat_informationsource_identifier_value)
          COALESCE(db.to_char_immutable(medstat_informationsource_display), '#NULL#') || '|||' || -- hash from: informationSource/display (medstat_informationsource_display)
          COALESCE(db.to_char_immutable(medstat_derivedfrom_ref), '#NULL#') || '|||' || -- hash from: derivedFrom/reference (medstat_derivedfrom_ref)
          COALESCE(db.to_char_immutable(medstat_derivedfrom_type), '#NULL#') || '|||' || -- hash from: derivedFrom/type (medstat_derivedfrom_type)
          COALESCE(db.to_char_immutable(medstat_derivedfrom_identifier_use), '#NULL#') || '|||' || -- hash from: derivedFrom/identifier/use (medstat_derivedfrom_identifier_use)
          COALESCE(db.to_char_immutable(medstat_derivedfrom_identifier_type_system), '#NULL#') || '|||' || -- hash from: derivedFrom/identifier/type/coding/system (medstat_derivedfrom_identifier_type_system)
          COALESCE(db.to_char_immutable(medstat_derivedfrom_identifier_type_version), '#NULL#') || '|||' || -- hash from: derivedFrom/identifier/type/coding/version (medstat_derivedfrom_identifier_type_version)
          COALESCE(db.to_char_immutable(medstat_derivedfrom_identifier_type_code), '#NULL#') || '|||' || -- hash from: derivedFrom/identifier/type/coding/code (medstat_derivedfrom_identifier_type_code)
          COALESCE(db.to_char_immutable(medstat_derivedfrom_identifier_type_display), '#NULL#') || '|||' || -- hash from: derivedFrom/identifier/type/coding/display (medstat_derivedfrom_identifier_type_display)
          COALESCE(db.to_char_immutable(medstat_derivedfrom_identifier_type_text), '#NULL#') || '|||' || -- hash from: derivedFrom/identifier/type/text (medstat_derivedfrom_identifier_type_text)
          COALESCE(db.to_char_immutable(medstat_derivedfrom_identifier_system), '#NULL#') || '|||' || -- hash from: derivedFrom/identifier/system (medstat_derivedfrom_identifier_system)
          COALESCE(db.to_char_immutable(medstat_derivedfrom_identifier_value), '#NULL#') || '|||' || -- hash from: derivedFrom/identifier/value (medstat_derivedfrom_identifier_value)
          COALESCE(db.to_char_immutable(medstat_derivedfrom_display), '#NULL#') || '|||' || -- hash from: derivedFrom/display (medstat_derivedfrom_display)
          COALESCE(db.to_char_immutable(medstat_reasoncode_system), '#NULL#') || '|||' || -- hash from: reasonCode/coding/system (medstat_reasoncode_system)
          COALESCE(db.to_char_immutable(medstat_reasoncode_version), '#NULL#') || '|||' || -- hash from: reasonCode/coding/version (medstat_reasoncode_version)
          COALESCE(db.to_char_immutable(medstat_reasoncode_code), '#NULL#') || '|||' || -- hash from: reasonCode/coding/code (medstat_reasoncode_code)
          COALESCE(db.to_char_immutable(medstat_reasoncode_display), '#NULL#') || '|||' || -- hash from: reasonCode/coding/display (medstat_reasoncode_display)
          COALESCE(db.to_char_immutable(medstat_reasoncode_text), '#NULL#') || '|||' || -- hash from: reasonCode/text (medstat_reasoncode_text)
          COALESCE(db.to_char_immutable(medstat_reasonreference_ref), '#NULL#') || '|||' || -- hash from: reasonReference/reference (medstat_reasonreference_ref)
          COALESCE(db.to_char_immutable(medstat_reasonreference_type), '#NULL#') || '|||' || -- hash from: reasonReference/type (medstat_reasonreference_type)
          COALESCE(db.to_char_immutable(medstat_reasonreference_identifier_use), '#NULL#') || '|||' || -- hash from: reasonReference/identifier/use (medstat_reasonreference_identifier_use)
          COALESCE(db.to_char_immutable(medstat_reasonreference_identifier_type_system), '#NULL#') || '|||' || -- hash from: reasonReference/identifier/type/coding/system (medstat_reasonreference_identifier_type_system)
          COALESCE(db.to_char_immutable(medstat_reasonreference_identifier_type_version), '#NULL#') || '|||' || -- hash from: reasonReference/identifier/type/coding/version (medstat_reasonreference_identifier_type_version)
          COALESCE(db.to_char_immutable(medstat_reasonreference_identifier_type_code), '#NULL#') || '|||' || -- hash from: reasonReference/identifier/type/coding/code (medstat_reasonreference_identifier_type_code)
          COALESCE(db.to_char_immutable(medstat_reasonreference_identifier_type_display), '#NULL#') || '|||' || -- hash from: reasonReference/identifier/type/coding/display (medstat_reasonreference_identifier_type_display)
          COALESCE(db.to_char_immutable(medstat_reasonreference_identifier_type_text), '#NULL#') || '|||' || -- hash from: reasonReference/identifier/type/text (medstat_reasonreference_identifier_type_text)
          COALESCE(db.to_char_immutable(medstat_reasonreference_identifier_system), '#NULL#') || '|||' || -- hash from: reasonReference/identifier/system (medstat_reasonreference_identifier_system)
          COALESCE(db.to_char_immutable(medstat_reasonreference_identifier_value), '#NULL#') || '|||' || -- hash from: reasonReference/identifier/value (medstat_reasonreference_identifier_value)
          COALESCE(db.to_char_immutable(medstat_reasonreference_display), '#NULL#') || '|||' || -- hash from: reasonReference/display (medstat_reasonreference_display)
          COALESCE(db.to_char_immutable(medstat_note_authorstring), '#NULL#') || '|||' || -- hash from: note/authorString (medstat_note_authorstring)
          COALESCE(db.to_char_immutable(medstat_note_authorreference_ref), '#NULL#') || '|||' || -- hash from: note/authorReference/reference (medstat_note_authorreference_ref)
          COALESCE(db.to_char_immutable(medstat_note_authorreference_type), '#NULL#') || '|||' || -- hash from: note/authorReference/type (medstat_note_authorreference_type)
          COALESCE(db.to_char_immutable(medstat_note_authorreference_identifier_use), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/use (medstat_note_authorreference_identifier_use)
          COALESCE(db.to_char_immutable(medstat_note_authorreference_identifier_type_system), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/type/coding/system (medstat_note_authorreference_identifier_type_system)
          COALESCE(db.to_char_immutable(medstat_note_authorreference_identifier_type_version), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/type/coding/version (medstat_note_authorreference_identifier_type_version)
          COALESCE(db.to_char_immutable(medstat_note_authorreference_identifier_type_code), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/type/coding/code (medstat_note_authorreference_identifier_type_code)
          COALESCE(db.to_char_immutable(medstat_note_authorreference_identifier_type_display), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/type/coding/display (medstat_note_authorreference_identifier_type_display)
          COALESCE(db.to_char_immutable(medstat_note_authorreference_identifier_type_text), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/type/text (medstat_note_authorreference_identifier_type_text)
          COALESCE(db.to_char_immutable(medstat_note_authorreference_identifier_system), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/system (medstat_note_authorreference_identifier_system)
          COALESCE(db.to_char_immutable(medstat_note_authorreference_identifier_value), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/value (medstat_note_authorreference_identifier_value)
          COALESCE(db.to_char_immutable(medstat_note_authorreference_display), '#NULL#') || '|||' || -- hash from: note/authorReference/display (medstat_note_authorreference_display)
          COALESCE(db.to_char_immutable(medstat_note_time), '#NULL#') || '|||' || -- hash from: note/time (medstat_note_time)
          COALESCE(db.to_char_immutable(medstat_note_text), '#NULL#') || '|||' || -- hash from: note/text (medstat_note_text)
          COALESCE(db.to_char_immutable(medstat_dosage_sequence), '#NULL#') || '|||' || -- hash from: dosage/sequence (medstat_dosage_sequence)
          COALESCE(db.to_char_immutable(medstat_dosage_text), '#NULL#') || '|||' || -- hash from: dosage/text (medstat_dosage_text)
          COALESCE(db.to_char_immutable(medstat_dosage_additionalinstruction_system), '#NULL#') || '|||' || -- hash from: dosage/additionalInstruction/coding/system (medstat_dosage_additionalinstruction_system)
          COALESCE(db.to_char_immutable(medstat_dosage_additionalinstruction_version), '#NULL#') || '|||' || -- hash from: dosage/additionalInstruction/coding/version (medstat_dosage_additionalinstruction_version)
          COALESCE(db.to_char_immutable(medstat_dosage_additionalinstruction_code), '#NULL#') || '|||' || -- hash from: dosage/additionalInstruction/coding/code (medstat_dosage_additionalinstruction_code)
          COALESCE(db.to_char_immutable(medstat_dosage_additionalinstruction_display), '#NULL#') || '|||' || -- hash from: dosage/additionalInstruction/coding/display (medstat_dosage_additionalinstruction_display)
          COALESCE(db.to_char_immutable(medstat_dosage_additionalinstruction_text), '#NULL#') || '|||' || -- hash from: dosage/additionalInstruction/text (medstat_dosage_additionalinstruction_text)
          COALESCE(db.to_char_immutable(medstat_dosage_patientinstruction), '#NULL#') || '|||' || -- hash from: dosage/patientInstruction (medstat_dosage_patientinstruction)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_event), '#NULL#') || '|||' || -- hash from: dosage/timing/event (medstat_dosage_timing_event)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_boundsduration_value), '#NULL#') || '|||' || -- hash from: dosage/timing/repeat/boundsDuration/value (medstat_dosage_timing_repeat_boundsduration_value)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_boundsduration_comparator), '#NULL#') || '|||' || -- hash from: dosage/timing/repeat/boundsDuration/comparator (medstat_dosage_timing_repeat_boundsduration_comparator)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_boundsduration_unit), '#NULL#') || '|||' || -- hash from: dosage/timing/repeat/boundsDuration/unit (medstat_dosage_timing_repeat_boundsduration_unit)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_boundsduration_system), '#NULL#') || '|||' || -- hash from: dosage/timing/repeat/boundsDuration/system (medstat_dosage_timing_repeat_boundsduration_system)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_boundsduration_code), '#NULL#') || '|||' || -- hash from: dosage/timing/repeat/boundsDuration/code (medstat_dosage_timing_repeat_boundsduration_code)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_boundsrange_low_value), '#NULL#') || '|||' || -- hash from: dosage/timing/repeat/boundsRange/low/value (medstat_dosage_timing_repeat_boundsrange_low_value)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_boundsrange_low_unit), '#NULL#') || '|||' || -- hash from: dosage/timing/repeat/boundsRange/low/unit (medstat_dosage_timing_repeat_boundsrange_low_unit)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_boundsrange_low_system), '#NULL#') || '|||' || -- hash from: dosage/timing/repeat/boundsRange/low/system (medstat_dosage_timing_repeat_boundsrange_low_system)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_boundsrange_low_code), '#NULL#') || '|||' || -- hash from: dosage/timing/repeat/boundsRange/low/code (medstat_dosage_timing_repeat_boundsrange_low_code)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_boundsrange_high_value), '#NULL#') || '|||' || -- hash from: dosage/timing/repeat/boundsRange/high/value (medstat_dosage_timing_repeat_boundsrange_high_value)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_boundsrange_high_unit), '#NULL#') || '|||' || -- hash from: dosage/timing/repeat/boundsRange/high/unit (medstat_dosage_timing_repeat_boundsrange_high_unit)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_boundsrange_high_system), '#NULL#') || '|||' || -- hash from: dosage/timing/repeat/boundsRange/high/system (medstat_dosage_timing_repeat_boundsrange_high_system)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_boundsrange_high_code), '#NULL#') || '|||' || -- hash from: dosage/timing/repeat/boundsRange/high/code (medstat_dosage_timing_repeat_boundsrange_high_code)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_boundsperiod_start), '#NULL#') || '|||' || -- hash from: dosage/timing/repeat/boundsPeriod/start (medstat_dosage_timing_repeat_boundsperiod_start)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_boundsperiod_end), '#NULL#') || '|||' || -- hash from: dosage/timing/repeat/boundsPeriod/end (medstat_dosage_timing_repeat_boundsperiod_end)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_count), '#NULL#') || '|||' || -- hash from: dosage/timing/repeat/count (medstat_dosage_timing_repeat_count)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_countmax), '#NULL#') || '|||' || -- hash from: dosage/timing/repeat/countMax (medstat_dosage_timing_repeat_countmax)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_duration), '#NULL#') || '|||' || -- hash from: dosage/timing/repeat/duration (medstat_dosage_timing_repeat_duration)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_durationmax), '#NULL#') || '|||' || -- hash from: dosage/timing/repeat/durationMax (medstat_dosage_timing_repeat_durationmax)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_durationunit), '#NULL#') || '|||' || -- hash from: dosage/timing/repeat/durationUnit (medstat_dosage_timing_repeat_durationunit)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_frequency), '#NULL#') || '|||' || -- hash from: dosage/timing/repeat/frequency (medstat_dosage_timing_repeat_frequency)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_frequencymax), '#NULL#') || '|||' || -- hash from: dosage/timing/repeat/frequencyMax (medstat_dosage_timing_repeat_frequencymax)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_period), '#NULL#') || '|||' || -- hash from: dosage/timing/repeat/period (medstat_dosage_timing_repeat_period)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_periodmax), '#NULL#') || '|||' || -- hash from: dosage/timing/repeat/periodMax (medstat_dosage_timing_repeat_periodmax)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_periodunit), '#NULL#') || '|||' || -- hash from: dosage/timing/repeat/periodUnit (medstat_dosage_timing_repeat_periodunit)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_dayofweek), '#NULL#') || '|||' || -- hash from: dosage/timing/repeat/dayOfWeek (medstat_dosage_timing_repeat_dayofweek)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_timeofday), '#NULL#') || '|||' || -- hash from: dosage/timing/repeat/timeOfDay (medstat_dosage_timing_repeat_timeofday)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_when), '#NULL#') || '|||' || -- hash from: dosage/timing/repeat/when (medstat_dosage_timing_repeat_when)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_repeat_offset), '#NULL#') || '|||' || -- hash from: dosage/timing/repeat/offset (medstat_dosage_timing_repeat_offset)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_code_system), '#NULL#') || '|||' || -- hash from: dosage/timing/code/coding/system (medstat_dosage_timing_code_system)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_code_version), '#NULL#') || '|||' || -- hash from: dosage/timing/code/coding/version (medstat_dosage_timing_code_version)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_code_code), '#NULL#') || '|||' || -- hash from: dosage/timing/code/coding/code (medstat_dosage_timing_code_code)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_code_display), '#NULL#') || '|||' || -- hash from: dosage/timing/code/coding/display (medstat_dosage_timing_code_display)
          COALESCE(db.to_char_immutable(medstat_dosage_timing_code_text), '#NULL#') || '|||' || -- hash from: dosage/timing/code/text (medstat_dosage_timing_code_text)
          COALESCE(db.to_char_immutable(medstat_dosage_asneededboolean), '#NULL#') || '|||' || -- hash from: dosage/asNeededBoolean (medstat_dosage_asneededboolean)
          COALESCE(db.to_char_immutable(medstat_dosage_asneededcodeableconcept_system), '#NULL#') || '|||' || -- hash from: dosage/asNeededCodeableConcept/coding/system (medstat_dosage_asneededcodeableconcept_system)
          COALESCE(db.to_char_immutable(medstat_dosage_asneededcodeableconcept_version), '#NULL#') || '|||' || -- hash from: dosage/asNeededCodeableConcept/coding/version (medstat_dosage_asneededcodeableconcept_version)
          COALESCE(db.to_char_immutable(medstat_dosage_asneededcodeableconcept_code), '#NULL#') || '|||' || -- hash from: dosage/asNeededCodeableConcept/coding/code (medstat_dosage_asneededcodeableconcept_code)
          COALESCE(db.to_char_immutable(medstat_dosage_asneededcodeableconcept_display), '#NULL#') || '|||' || -- hash from: dosage/asNeededCodeableConcept/coding/display (medstat_dosage_asneededcodeableconcept_display)
          COALESCE(db.to_char_immutable(medstat_dosage_asneededcodeableconcept_text), '#NULL#') || '|||' || -- hash from: dosage/asNeededCodeableConcept/text (medstat_dosage_asneededcodeableconcept_text)
          COALESCE(db.to_char_immutable(medstat_dosage_site_system), '#NULL#') || '|||' || -- hash from: dosage/site/coding/system (medstat_dosage_site_system)
          COALESCE(db.to_char_immutable(medstat_dosage_site_version), '#NULL#') || '|||' || -- hash from: dosage/site/coding/version (medstat_dosage_site_version)
          COALESCE(db.to_char_immutable(medstat_dosage_site_code), '#NULL#') || '|||' || -- hash from: dosage/site/coding/code (medstat_dosage_site_code)
          COALESCE(db.to_char_immutable(medstat_dosage_site_display), '#NULL#') || '|||' || -- hash from: dosage/site/coding/display (medstat_dosage_site_display)
          COALESCE(db.to_char_immutable(medstat_dosage_site_text), '#NULL#') || '|||' || -- hash from: dosage/site/text (medstat_dosage_site_text)
          COALESCE(db.to_char_immutable(medstat_dosage_route_system), '#NULL#') || '|||' || -- hash from: dosage/route/coding/system (medstat_dosage_route_system)
          COALESCE(db.to_char_immutable(medstat_dosage_route_version), '#NULL#') || '|||' || -- hash from: dosage/route/coding/version (medstat_dosage_route_version)
          COALESCE(db.to_char_immutable(medstat_dosage_route_code), '#NULL#') || '|||' || -- hash from: dosage/route/coding/code (medstat_dosage_route_code)
          COALESCE(db.to_char_immutable(medstat_dosage_route_display), '#NULL#') || '|||' || -- hash from: dosage/route/coding/display (medstat_dosage_route_display)
          COALESCE(db.to_char_immutable(medstat_dosage_route_text), '#NULL#') || '|||' || -- hash from: dosage/route/text (medstat_dosage_route_text)
          COALESCE(db.to_char_immutable(medstat_dosage_method_system), '#NULL#') || '|||' || -- hash from: dosage/method/coding/system (medstat_dosage_method_system)
          COALESCE(db.to_char_immutable(medstat_dosage_method_version), '#NULL#') || '|||' || -- hash from: dosage/method/coding/version (medstat_dosage_method_version)
          COALESCE(db.to_char_immutable(medstat_dosage_method_code), '#NULL#') || '|||' || -- hash from: dosage/method/coding/code (medstat_dosage_method_code)
          COALESCE(db.to_char_immutable(medstat_dosage_method_display), '#NULL#') || '|||' || -- hash from: dosage/method/coding/display (medstat_dosage_method_display)
          COALESCE(db.to_char_immutable(medstat_dosage_method_text), '#NULL#') || '|||' || -- hash from: dosage/method/text (medstat_dosage_method_text)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_type_system), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/type/coding/system (medstat_dosage_doseandrate_type_system)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_type_version), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/type/coding/version (medstat_dosage_doseandrate_type_version)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_type_code), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/type/coding/code (medstat_dosage_doseandrate_type_code)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_type_display), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/type/coding/display (medstat_dosage_doseandrate_type_display)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_type_text), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/type/text (medstat_dosage_doseandrate_type_text)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_doserange_low_value), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/doseRange/low/value (medstat_dosage_doseandrate_doserange_low_value)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_doserange_low_unit), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/doseRange/low/unit (medstat_dosage_doseandrate_doserange_low_unit)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_doserange_low_system), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/doseRange/low/system (medstat_dosage_doseandrate_doserange_low_system)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_doserange_low_code), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/doseRange/low/code (medstat_dosage_doseandrate_doserange_low_code)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_doserange_high_value), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/doseRange/high/value (medstat_dosage_doseandrate_doserange_high_value)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_doserange_high_unit), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/doseRange/high/unit (medstat_dosage_doseandrate_doserange_high_unit)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_doserange_high_system), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/doseRange/high/system (medstat_dosage_doseandrate_doserange_high_system)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_doserange_high_code), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/doseRange/high/code (medstat_dosage_doseandrate_doserange_high_code)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_dosequantity_value), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/doseQuantity/value (medstat_dosage_doseandrate_dosequantity_value)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_dosequantity_comparator), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/doseQuantity/comparator (medstat_dosage_doseandrate_dosequantity_comparator)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_dosequantity_unit), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/doseQuantity/unit (medstat_dosage_doseandrate_dosequantity_unit)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_dosequantity_system), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/doseQuantity/system (medstat_dosage_doseandrate_dosequantity_system)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_dosequantity_code), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/doseQuantity/code (medstat_dosage_doseandrate_dosequantity_code)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_rateratio_numerator_value), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/rateRatio/numerator/value (medstat_dosage_doseandrate_rateratio_numerator_value)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_rateratio_numerator_comparator), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/rateRatio/numerator/comparator (medstat_dosage_doseandrate_rateratio_numerator_comparator)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_rateratio_numerator_unit), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/rateRatio/numerator/unit (medstat_dosage_doseandrate_rateratio_numerator_unit)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_rateratio_numerator_system), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/rateRatio/numerator/system (medstat_dosage_doseandrate_rateratio_numerator_system)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_rateratio_numerator_code), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/rateRatio/numerator/code (medstat_dosage_doseandrate_rateratio_numerator_code)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_rateratio_denominator_value), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/rateRatio/denominator/value (medstat_dosage_doseandrate_rateratio_denominator_value)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_rateratio_denominator_comparator), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/rateRatio/denominator/comparator (medstat_dosage_doseandrate_rateratio_denominator_comparator)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_rateratio_denominator_unit), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/rateRatio/denominator/unit (medstat_dosage_doseandrate_rateratio_denominator_unit)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_rateratio_denominator_system), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/rateRatio/denominator/system (medstat_dosage_doseandrate_rateratio_denominator_system)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_rateratio_denominator_code), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/rateRatio/denominator/code (medstat_dosage_doseandrate_rateratio_denominator_code)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_raterange_low_value), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/rateRange/low/value (medstat_dosage_doseandrate_raterange_low_value)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_raterange_low_unit), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/rateRange/low/unit (medstat_dosage_doseandrate_raterange_low_unit)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_raterange_low_system), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/rateRange/low/system (medstat_dosage_doseandrate_raterange_low_system)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_raterange_low_code), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/rateRange/low/code (medstat_dosage_doseandrate_raterange_low_code)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_raterange_high_value), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/rateRange/high/value (medstat_dosage_doseandrate_raterange_high_value)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_raterange_high_unit), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/rateRange/high/unit (medstat_dosage_doseandrate_raterange_high_unit)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_raterange_high_system), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/rateRange/high/system (medstat_dosage_doseandrate_raterange_high_system)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_raterange_high_code), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/rateRange/high/code (medstat_dosage_doseandrate_raterange_high_code)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_ratequantity_value), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/rateQuantity/value (medstat_dosage_doseandrate_ratequantity_value)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_ratequantity_unit), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/rateQuantity/unit (medstat_dosage_doseandrate_ratequantity_unit)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_ratequantity_system), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/rateQuantity/system (medstat_dosage_doseandrate_ratequantity_system)
          COALESCE(db.to_char_immutable(medstat_dosage_doseandrate_ratequantity_code), '#NULL#') || '|||' || -- hash from: dosage/doseAndRate/rateQuantity/code (medstat_dosage_doseandrate_ratequantity_code)
          COALESCE(db.to_char_immutable(medstat_dosage_maxdoseperperiod_numerator_value), '#NULL#') || '|||' || -- hash from: dosage/maxDosePerPeriod/numerator/value (medstat_dosage_maxdoseperperiod_numerator_value)
          COALESCE(db.to_char_immutable(medstat_dosage_maxdoseperperiod_numerator_comparator), '#NULL#') || '|||' || -- hash from: dosage/maxDosePerPeriod/numerator/comparator (medstat_dosage_maxdoseperperiod_numerator_comparator)
          COALESCE(db.to_char_immutable(medstat_dosage_maxdoseperperiod_numerator_unit), '#NULL#') || '|||' || -- hash from: dosage/maxDosePerPeriod/numerator/unit (medstat_dosage_maxdoseperperiod_numerator_unit)
          COALESCE(db.to_char_immutable(medstat_dosage_maxdoseperperiod_numerator_system), '#NULL#') || '|||' || -- hash from: dosage/maxDosePerPeriod/numerator/system (medstat_dosage_maxdoseperperiod_numerator_system)
          COALESCE(db.to_char_immutable(medstat_dosage_maxdoseperperiod_numerator_code), '#NULL#') || '|||' || -- hash from: dosage/maxDosePerPeriod/numerator/code (medstat_dosage_maxdoseperperiod_numerator_code)
          COALESCE(db.to_char_immutable(medstat_dosage_maxdoseperperiod_denominator_value), '#NULL#') || '|||' || -- hash from: dosage/maxDosePerPeriod/denominator/value (medstat_dosage_maxdoseperperiod_denominator_value)
          COALESCE(db.to_char_immutable(medstat_dosage_maxdoseperperiod_denominator_comparator), '#NULL#') || '|||' || -- hash from: dosage/maxDosePerPeriod/denominator/comparator (medstat_dosage_maxdoseperperiod_denominator_comparator)
          COALESCE(db.to_char_immutable(medstat_dosage_maxdoseperperiod_denominator_unit), '#NULL#') || '|||' || -- hash from: dosage/maxDosePerPeriod/denominator/unit (medstat_dosage_maxdoseperperiod_denominator_unit)
          COALESCE(db.to_char_immutable(medstat_dosage_maxdoseperperiod_denominator_system), '#NULL#') || '|||' || -- hash from: dosage/maxDosePerPeriod/denominator/system (medstat_dosage_maxdoseperperiod_denominator_system)
          COALESCE(db.to_char_immutable(medstat_dosage_maxdoseperperiod_denominator_code), '#NULL#') || '|||' || -- hash from: dosage/maxDosePerPeriod/denominator/code (medstat_dosage_maxdoseperperiod_denominator_code)
          COALESCE(db.to_char_immutable(medstat_dosage_maxdoseperadministration_value), '#NULL#') || '|||' || -- hash from: dosage/maxDosePerAdministration/value (medstat_dosage_maxdoseperadministration_value)
          COALESCE(db.to_char_immutable(medstat_dosage_maxdoseperadministration_unit), '#NULL#') || '|||' || -- hash from: dosage/maxDosePerAdministration/unit (medstat_dosage_maxdoseperadministration_unit)
          COALESCE(db.to_char_immutable(medstat_dosage_maxdoseperadministration_system), '#NULL#') || '|||' || -- hash from: dosage/maxDosePerAdministration/system (medstat_dosage_maxdoseperadministration_system)
          COALESCE(db.to_char_immutable(medstat_dosage_maxdoseperadministration_code), '#NULL#') || '|||' || -- hash from: dosage/maxDosePerAdministration/code (medstat_dosage_maxdoseperadministration_code)
          COALESCE(db.to_char_immutable(medstat_dosage_maxdoseperlifetime_value), '#NULL#') || '|||' || -- hash from: dosage/maxDosePerLifetime/value (medstat_dosage_maxdoseperlifetime_value)
          COALESCE(db.to_char_immutable(medstat_dosage_maxdoseperlifetime_unit), '#NULL#') || '|||' || -- hash from: dosage/maxDosePerLifetime/unit (medstat_dosage_maxdoseperlifetime_unit)
          COALESCE(db.to_char_immutable(medstat_dosage_maxdoseperlifetime_system), '#NULL#') || '|||' || -- hash from: dosage/maxDosePerLifetime/system (medstat_dosage_maxdoseperlifetime_system)
          COALESCE(db.to_char_immutable(medstat_dosage_maxdoseperlifetime_code), '#NULL#') || '|||' || -- hash from: dosage/maxDosePerLifetime/code (medstat_dosage_maxdoseperlifetime_code)
                 '#'
               )
            ) STORED; -- Column for hash value for comparing FHIR data - collion check in second step hash_index_col
        END IF; -- column
    END IF; -- Table
END
$$;
-- Table "observation" in schema "cds2db_in"
-------------------------------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS cds2db_in.observation (
  observation_id int PRIMARY KEY DEFAULT nextval('db.db_seq') -- Primary key of the entity
);

DO
$$
DECLARE
    IF EXISTS ( -- Table exists
        SELECT 1 FROM information_schema.columns 
        WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
    ) THEN
        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'input_datetime'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD observation_raw_id int NOT NULL; -- Primary key of the corresponding raw table
            NULL;
        END IF; -- column

-- Organizational items - fixed for each database table -----------------------------------------
        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'input_datetime'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD input_datetime TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP; -- Time at which data record was created
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'last_check_datetime'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD last_check_datetime TIMESTAMP DEFAULT NULL; -- Time at which data record was last checked
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'current_dataset_status'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD current_dataset_status VARCHAR DEFAULT 'input'; -- Processing status of the data record
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'input_processing_nr'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD input_processing_nr INT; -- (First) Processing number of the data record
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'last_processing_nr'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD last_processing_nr INT; -- Last processing number of the data record
        END IF; -- column

-- Data-leading columns -------------------------------------------------------------------------
        IF NOT EXISTS ( -- column not exists (obs_id)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_id'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_id varchar;   -- id (varchar)
        END IF; -- column (obs_id)
        IF NOT EXISTS ( -- column not exists (obs_meta_versionid)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_meta_versionid'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_meta_versionid varchar;   -- meta/versionId (varchar)
        END IF; -- column (obs_meta_versionid)
        IF NOT EXISTS ( -- column not exists (obs_meta_lastupdated)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_meta_lastupdated'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_meta_lastupdated timestamp;   -- meta/lastUpdated (timestamp)
        END IF; -- column (obs_meta_lastupdated)
        IF NOT EXISTS ( -- column not exists (obs_meta_profile)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_meta_profile'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_meta_profile varchar;   -- meta/profile (varchar)
        END IF; -- column (obs_meta_profile)
        IF NOT EXISTS ( -- column not exists (obs_identifier_use)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_identifier_use'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_identifier_use varchar;   -- identifier/use (varchar)
        END IF; -- column (obs_identifier_use)
        IF NOT EXISTS ( -- column not exists (obs_identifier_type_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_identifier_type_system'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_identifier_type_system varchar;   -- identifier/type/coding/system (varchar)
        END IF; -- column (obs_identifier_type_system)
        IF NOT EXISTS ( -- column not exists (obs_identifier_type_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_identifier_type_version'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_identifier_type_version varchar;   -- identifier/type/coding/version (varchar)
        END IF; -- column (obs_identifier_type_version)
        IF NOT EXISTS ( -- column not exists (obs_identifier_type_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_identifier_type_code'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_identifier_type_code varchar;   -- identifier/type/coding/code (varchar)
        END IF; -- column (obs_identifier_type_code)
        IF NOT EXISTS ( -- column not exists (obs_identifier_type_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_identifier_type_display'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_identifier_type_display varchar;   -- identifier/type/coding/display (varchar)
        END IF; -- column (obs_identifier_type_display)
        IF NOT EXISTS ( -- column not exists (obs_identifier_type_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_identifier_type_text'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_identifier_type_text varchar;   -- identifier/type/text (varchar)
        END IF; -- column (obs_identifier_type_text)
        IF NOT EXISTS ( -- column not exists (obs_identifier_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_identifier_system'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_identifier_system varchar;   -- identifier/system (varchar)
        END IF; -- column (obs_identifier_system)
        IF NOT EXISTS ( -- column not exists (obs_identifier_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_identifier_value'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_identifier_value varchar;   -- identifier/value (varchar)
        END IF; -- column (obs_identifier_value)
        IF NOT EXISTS ( -- column not exists (obs_identifier_start)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_identifier_start'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_identifier_start timestamp;   -- identifier/start (timestamp)
        END IF; -- column (obs_identifier_start)
        IF NOT EXISTS ( -- column not exists (obs_identifier_end)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_identifier_end'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_identifier_end timestamp;   -- identifier/end (timestamp)
        END IF; -- column (obs_identifier_end)
        IF NOT EXISTS ( -- column not exists (obs_encounter_ref)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_encounter_ref'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_encounter_ref varchar;   -- encounter/reference (varchar)
        END IF; -- column (obs_encounter_ref)
        IF NOT EXISTS ( -- column not exists (obs_patient_ref)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_patient_ref'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_patient_ref varchar;   -- subject/reference (varchar)
        END IF; -- column (obs_patient_ref)
        IF NOT EXISTS ( -- column not exists (obs_partof_ref)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_partof_ref'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_partof_ref varchar;   -- partOf/reference (varchar)
        END IF; -- column (obs_partof_ref)
        IF NOT EXISTS ( -- column not exists (obs_basedon_ref)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_basedon_ref'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_basedon_ref varchar;   -- basedOn/reference (varchar)
        END IF; -- column (obs_basedon_ref)
        IF NOT EXISTS ( -- column not exists (obs_basedon_type)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_basedon_type'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_basedon_type varchar;   -- basedOn/type (varchar)
        END IF; -- column (obs_basedon_type)
        IF NOT EXISTS ( -- column not exists (obs_basedon_identifier_use)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_basedon_identifier_use'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_basedon_identifier_use varchar;   -- basedOn/identifier/use (varchar)
        END IF; -- column (obs_basedon_identifier_use)
        IF NOT EXISTS ( -- column not exists (obs_basedon_identifier_type_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_basedon_identifier_type_system'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_basedon_identifier_type_system varchar;   -- basedOn/identifier/type/coding/system (varchar)
        END IF; -- column (obs_basedon_identifier_type_system)
        IF NOT EXISTS ( -- column not exists (obs_basedon_identifier_type_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_basedon_identifier_type_version'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_basedon_identifier_type_version varchar;   -- basedOn/identifier/type/coding/version (varchar)
        END IF; -- column (obs_basedon_identifier_type_version)
        IF NOT EXISTS ( -- column not exists (obs_basedon_identifier_type_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_basedon_identifier_type_code'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_basedon_identifier_type_code varchar;   -- basedOn/identifier/type/coding/code (varchar)
        END IF; -- column (obs_basedon_identifier_type_code)
        IF NOT EXISTS ( -- column not exists (obs_basedon_identifier_type_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_basedon_identifier_type_display'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_basedon_identifier_type_display varchar;   -- basedOn/identifier/type/coding/display (varchar)
        END IF; -- column (obs_basedon_identifier_type_display)
        IF NOT EXISTS ( -- column not exists (obs_basedon_identifier_type_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_basedon_identifier_type_text'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_basedon_identifier_type_text varchar;   -- basedOn/identifier/type/text (varchar)
        END IF; -- column (obs_basedon_identifier_type_text)
        IF NOT EXISTS ( -- column not exists (obs_basedon_identifier_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_basedon_identifier_system'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_basedon_identifier_system varchar;   -- basedOn/identifier/system (varchar)
        END IF; -- column (obs_basedon_identifier_system)
        IF NOT EXISTS ( -- column not exists (obs_basedon_identifier_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_basedon_identifier_value'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_basedon_identifier_value varchar;   -- basedOn/identifier/value (varchar)
        END IF; -- column (obs_basedon_identifier_value)
        IF NOT EXISTS ( -- column not exists (obs_basedon_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_basedon_display'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_basedon_display varchar;   -- basedOn/display (varchar)
        END IF; -- column (obs_basedon_display)
        IF NOT EXISTS ( -- column not exists (obs_status)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_status'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_status varchar;   -- status (varchar)
        END IF; -- column (obs_status)
        IF NOT EXISTS ( -- column not exists (obs_category_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_category_system'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_category_system varchar;   -- category/coding/system (varchar)
        END IF; -- column (obs_category_system)
        IF NOT EXISTS ( -- column not exists (obs_category_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_category_version'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_category_version varchar;   -- category/coding/version (varchar)
        END IF; -- column (obs_category_version)
        IF NOT EXISTS ( -- column not exists (obs_category_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_category_code'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_category_code varchar;   -- category/coding/code (varchar)
        END IF; -- column (obs_category_code)
        IF NOT EXISTS ( -- column not exists (obs_category_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_category_display'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_category_display varchar;   -- category/coding/display (varchar)
        END IF; -- column (obs_category_display)
        IF NOT EXISTS ( -- column not exists (obs_category_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_category_text'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_category_text varchar;   -- category/text (varchar)
        END IF; -- column (obs_category_text)
        IF NOT EXISTS ( -- column not exists (obs_code_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_code_system'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_code_system varchar;   -- code/coding/system (varchar)
        END IF; -- column (obs_code_system)
        IF NOT EXISTS ( -- column not exists (obs_code_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_code_version'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_code_version varchar;   -- code/coding/version (varchar)
        END IF; -- column (obs_code_version)
        IF NOT EXISTS ( -- column not exists (obs_code_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_code_code'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_code_code varchar;   -- code/coding/code (varchar)
        END IF; -- column (obs_code_code)
        IF NOT EXISTS ( -- column not exists (obs_code_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_code_display'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_code_display varchar;   -- code/coding/display (varchar)
        END IF; -- column (obs_code_display)
        IF NOT EXISTS ( -- column not exists (obs_code_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_code_text'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_code_text varchar;   -- code/text (varchar)
        END IF; -- column (obs_code_text)
        IF NOT EXISTS ( -- column not exists (obs_effectivedatetime)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_effectivedatetime'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_effectivedatetime timestamp;   -- effectiveDateTime (timestamp)
        END IF; -- column (obs_effectivedatetime)
        IF NOT EXISTS ( -- column not exists (obs_issued)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_issued'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_issued timestamp;   -- issued (timestamp)
        END IF; -- column (obs_issued)
        IF NOT EXISTS ( -- column not exists (obs_valuerange_low_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_valuerange_low_value'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_valuerange_low_value double precision;   -- valueRange/low/value (double precision)
        END IF; -- column (obs_valuerange_low_value)
        IF NOT EXISTS ( -- column not exists (obs_valuerange_low_unit)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_valuerange_low_unit'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_valuerange_low_unit varchar;   -- valueRange/low/unit (varchar)
        END IF; -- column (obs_valuerange_low_unit)
        IF NOT EXISTS ( -- column not exists (obs_valuerange_low_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_valuerange_low_system'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_valuerange_low_system varchar;   -- valueRange/low/system (varchar)
        END IF; -- column (obs_valuerange_low_system)
        IF NOT EXISTS ( -- column not exists (obs_valuerange_low_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_valuerange_low_code'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_valuerange_low_code varchar;   -- valueRange/low/code (varchar)
        END IF; -- column (obs_valuerange_low_code)
        IF NOT EXISTS ( -- column not exists (obs_valuerange_high_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_valuerange_high_value'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_valuerange_high_value double precision;   -- valueRange/high/value (double precision)
        END IF; -- column (obs_valuerange_high_value)
        IF NOT EXISTS ( -- column not exists (obs_valuerange_high_unit)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_valuerange_high_unit'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_valuerange_high_unit varchar;   -- valueRange/high/unit (varchar)
        END IF; -- column (obs_valuerange_high_unit)
        IF NOT EXISTS ( -- column not exists (obs_valuerange_high_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_valuerange_high_system'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_valuerange_high_system varchar;   -- valueRange/high/system (varchar)
        END IF; -- column (obs_valuerange_high_system)
        IF NOT EXISTS ( -- column not exists (obs_valuerange_high_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_valuerange_high_code'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_valuerange_high_code varchar;   -- valueRange/high/code (varchar)
        END IF; -- column (obs_valuerange_high_code)
        IF NOT EXISTS ( -- column not exists (obs_valueratio_numerator_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_valueratio_numerator_value'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_valueratio_numerator_value double precision;   -- valueRatio/numerator/value (double precision)
        END IF; -- column (obs_valueratio_numerator_value)
        IF NOT EXISTS ( -- column not exists (obs_valueratio_numerator_comparator)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_valueratio_numerator_comparator'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_valueratio_numerator_comparator varchar;   -- valueRatio/numerator/comparator (varchar)
        END IF; -- column (obs_valueratio_numerator_comparator)
        IF NOT EXISTS ( -- column not exists (obs_valueratio_numerator_unit)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_valueratio_numerator_unit'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_valueratio_numerator_unit varchar;   -- valueRatio/numerator/unit (varchar)
        END IF; -- column (obs_valueratio_numerator_unit)
        IF NOT EXISTS ( -- column not exists (obs_valueratio_numerator_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_valueratio_numerator_system'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_valueratio_numerator_system varchar;   -- valueRatio/numerator/system (varchar)
        END IF; -- column (obs_valueratio_numerator_system)
        IF NOT EXISTS ( -- column not exists (obs_valueratio_numerator_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_valueratio_numerator_code'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_valueratio_numerator_code varchar;   -- valueRatio/numerator/code (varchar)
        END IF; -- column (obs_valueratio_numerator_code)
        IF NOT EXISTS ( -- column not exists (obs_valueratio_denominator_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_valueratio_denominator_value'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_valueratio_denominator_value double precision;   -- valueRatio/denominator/value (double precision)
        END IF; -- column (obs_valueratio_denominator_value)
        IF NOT EXISTS ( -- column not exists (obs_valueratio_denominator_comparator)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_valueratio_denominator_comparator'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_valueratio_denominator_comparator varchar;   -- valueRatio/denominator/comparator (varchar)
        END IF; -- column (obs_valueratio_denominator_comparator)
        IF NOT EXISTS ( -- column not exists (obs_valueratio_denominator_unit)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_valueratio_denominator_unit'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_valueratio_denominator_unit varchar;   -- valueRatio/denominator/unit (varchar)
        END IF; -- column (obs_valueratio_denominator_unit)
        IF NOT EXISTS ( -- column not exists (obs_valueratio_denominator_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_valueratio_denominator_system'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_valueratio_denominator_system varchar;   -- valueRatio/denominator/system (varchar)
        END IF; -- column (obs_valueratio_denominator_system)
        IF NOT EXISTS ( -- column not exists (obs_valueratio_denominator_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_valueratio_denominator_code'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_valueratio_denominator_code varchar;   -- valueRatio/denominator/code (varchar)
        END IF; -- column (obs_valueratio_denominator_code)
        IF NOT EXISTS ( -- column not exists (obs_valuequantity_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_valuequantity_value'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_valuequantity_value double precision;   -- valueQuantity/value (double precision)
        END IF; -- column (obs_valuequantity_value)
        IF NOT EXISTS ( -- column not exists (obs_valuequantity_comparator)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_valuequantity_comparator'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_valuequantity_comparator varchar;   -- valueQuantity/comparator (varchar)
        END IF; -- column (obs_valuequantity_comparator)
        IF NOT EXISTS ( -- column not exists (obs_valuequantity_unit)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_valuequantity_unit'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_valuequantity_unit varchar;   -- valueQuantity/unit (varchar)
        END IF; -- column (obs_valuequantity_unit)
        IF NOT EXISTS ( -- column not exists (obs_valuequantity_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_valuequantity_system'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_valuequantity_system varchar;   -- valueQuantity/system (varchar)
        END IF; -- column (obs_valuequantity_system)
        IF NOT EXISTS ( -- column not exists (obs_valuequantity_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_valuequantity_code'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_valuequantity_code varchar;   -- valueQuantity/code (varchar)
        END IF; -- column (obs_valuequantity_code)
        IF NOT EXISTS ( -- column not exists (obs_valuecodeableconcept_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_valuecodeableconcept_system'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_valuecodeableconcept_system varchar;   -- valueCodeableConcept/coding/system (varchar)
        END IF; -- column (obs_valuecodeableconcept_system)
        IF NOT EXISTS ( -- column not exists (obs_valuecodeableconcept_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_valuecodeableconcept_version'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_valuecodeableconcept_version varchar;   -- valueCodeableConcept/coding/version (varchar)
        END IF; -- column (obs_valuecodeableconcept_version)
        IF NOT EXISTS ( -- column not exists (obs_valuecodeableconcept_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_valuecodeableconcept_code'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_valuecodeableconcept_code varchar;   -- valueCodeableConcept/coding/code (varchar)
        END IF; -- column (obs_valuecodeableconcept_code)
        IF NOT EXISTS ( -- column not exists (obs_valuecodeableconcept_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_valuecodeableconcept_display'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_valuecodeableconcept_display varchar;   -- valueCodeableConcept/coding/display (varchar)
        END IF; -- column (obs_valuecodeableconcept_display)
        IF NOT EXISTS ( -- column not exists (obs_valuecodeableconcept_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_valuecodeableconcept_text'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_valuecodeableconcept_text varchar;   -- valueCodeableConcept/text (varchar)
        END IF; -- column (obs_valuecodeableconcept_text)
        IF NOT EXISTS ( -- column not exists (obs_dataabsentreason_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_dataabsentreason_system'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_dataabsentreason_system varchar;   -- dataAbsentReason/coding/system (varchar)
        END IF; -- column (obs_dataabsentreason_system)
        IF NOT EXISTS ( -- column not exists (obs_dataabsentreason_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_dataabsentreason_version'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_dataabsentreason_version varchar;   -- dataAbsentReason/coding/version (varchar)
        END IF; -- column (obs_dataabsentreason_version)
        IF NOT EXISTS ( -- column not exists (obs_dataabsentreason_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_dataabsentreason_code'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_dataabsentreason_code varchar;   -- dataAbsentReason/coding/code (varchar)
        END IF; -- column (obs_dataabsentreason_code)
        IF NOT EXISTS ( -- column not exists (obs_dataabsentreason_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_dataabsentreason_display'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_dataabsentreason_display varchar;   -- dataAbsentReason/coding/display (varchar)
        END IF; -- column (obs_dataabsentreason_display)
        IF NOT EXISTS ( -- column not exists (obs_dataabsentreason_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_dataabsentreason_text'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_dataabsentreason_text varchar;   -- dataAbsentReason/text (varchar)
        END IF; -- column (obs_dataabsentreason_text)
        IF NOT EXISTS ( -- column not exists (obs_note_authorstring)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_note_authorstring'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_note_authorstring varchar;   -- note/authorString (varchar)
        END IF; -- column (obs_note_authorstring)
        IF NOT EXISTS ( -- column not exists (obs_note_authorreference_ref)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_note_authorreference_ref'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_note_authorreference_ref varchar;   -- note/authorReference/reference (varchar)
        END IF; -- column (obs_note_authorreference_ref)
        IF NOT EXISTS ( -- column not exists (obs_note_authorreference_type)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_note_authorreference_type'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_note_authorreference_type varchar;   -- note/authorReference/type (varchar)
        END IF; -- column (obs_note_authorreference_type)
        IF NOT EXISTS ( -- column not exists (obs_note_authorreference_identifier_use)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_note_authorreference_identifier_use'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_note_authorreference_identifier_use varchar;   -- note/authorReference/identifier/use (varchar)
        END IF; -- column (obs_note_authorreference_identifier_use)
        IF NOT EXISTS ( -- column not exists (obs_note_authorreference_identifier_type_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_note_authorreference_identifier_type_system'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_note_authorreference_identifier_type_system varchar;   -- note/authorReference/identifier/type/coding/system (varchar)
        END IF; -- column (obs_note_authorreference_identifier_type_system)
        IF NOT EXISTS ( -- column not exists (obs_note_authorreference_identifier_type_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_note_authorreference_identifier_type_version'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_note_authorreference_identifier_type_version varchar;   -- note/authorReference/identifier/type/coding/version (varchar)
        END IF; -- column (obs_note_authorreference_identifier_type_version)
        IF NOT EXISTS ( -- column not exists (obs_note_authorreference_identifier_type_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_note_authorreference_identifier_type_code'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_note_authorreference_identifier_type_code varchar;   -- note/authorReference/identifier/type/coding/code (varchar)
        END IF; -- column (obs_note_authorreference_identifier_type_code)
        IF NOT EXISTS ( -- column not exists (obs_note_authorreference_identifier_type_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_note_authorreference_identifier_type_display'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_note_authorreference_identifier_type_display varchar;   -- note/authorReference/identifier/type/coding/display (varchar)
        END IF; -- column (obs_note_authorreference_identifier_type_display)
        IF NOT EXISTS ( -- column not exists (obs_note_authorreference_identifier_type_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_note_authorreference_identifier_type_text'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_note_authorreference_identifier_type_text varchar;   -- note/authorReference/identifier/type/text (varchar)
        END IF; -- column (obs_note_authorreference_identifier_type_text)
        IF NOT EXISTS ( -- column not exists (obs_note_authorreference_identifier_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_note_authorreference_identifier_system'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_note_authorreference_identifier_system varchar;   -- note/authorReference/identifier/system (varchar)
        END IF; -- column (obs_note_authorreference_identifier_system)
        IF NOT EXISTS ( -- column not exists (obs_note_authorreference_identifier_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_note_authorreference_identifier_value'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_note_authorreference_identifier_value varchar;   -- note/authorReference/identifier/value (varchar)
        END IF; -- column (obs_note_authorreference_identifier_value)
        IF NOT EXISTS ( -- column not exists (obs_note_authorreference_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_note_authorreference_display'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_note_authorreference_display varchar;   -- note/authorReference/display (varchar)
        END IF; -- column (obs_note_authorreference_display)
        IF NOT EXISTS ( -- column not exists (obs_note_time)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_note_time'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_note_time timestamp;   -- note/time (timestamp)
        END IF; -- column (obs_note_time)
        IF NOT EXISTS ( -- column not exists (obs_note_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_note_text'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_note_text varchar;   -- note/text (varchar)
        END IF; -- column (obs_note_text)
        IF NOT EXISTS ( -- column not exists (obs_method_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_method_system'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_method_system varchar;   -- method/coding/system (varchar)
        END IF; -- column (obs_method_system)
        IF NOT EXISTS ( -- column not exists (obs_method_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_method_version'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_method_version varchar;   -- method/coding/version (varchar)
        END IF; -- column (obs_method_version)
        IF NOT EXISTS ( -- column not exists (obs_method_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_method_code'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_method_code varchar;   -- method/coding/code (varchar)
        END IF; -- column (obs_method_code)
        IF NOT EXISTS ( -- column not exists (obs_method_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_method_display'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_method_display varchar;   -- method/coding/display (varchar)
        END IF; -- column (obs_method_display)
        IF NOT EXISTS ( -- column not exists (obs_method_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_method_text'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_method_text varchar;   -- method/text (varchar)
        END IF; -- column (obs_method_text)
        IF NOT EXISTS ( -- column not exists (obs_performer_ref)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_performer_ref'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_performer_ref varchar;   -- performer/reference (varchar)
        END IF; -- column (obs_performer_ref)
        IF NOT EXISTS ( -- column not exists (obs_performer_type)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_performer_type'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_performer_type varchar;   -- performer/type (varchar)
        END IF; -- column (obs_performer_type)
        IF NOT EXISTS ( -- column not exists (obs_performer_identifier_use)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_performer_identifier_use'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_performer_identifier_use varchar;   -- performer/identifier/use (varchar)
        END IF; -- column (obs_performer_identifier_use)
        IF NOT EXISTS ( -- column not exists (obs_performer_identifier_type_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_performer_identifier_type_system'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_performer_identifier_type_system varchar;   -- performer/identifier/type/coding/system (varchar)
        END IF; -- column (obs_performer_identifier_type_system)
        IF NOT EXISTS ( -- column not exists (obs_performer_identifier_type_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_performer_identifier_type_version'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_performer_identifier_type_version varchar;   -- performer/identifier/type/coding/version (varchar)
        END IF; -- column (obs_performer_identifier_type_version)
        IF NOT EXISTS ( -- column not exists (obs_performer_identifier_type_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_performer_identifier_type_code'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_performer_identifier_type_code varchar;   -- performer/identifier/type/coding/code (varchar)
        END IF; -- column (obs_performer_identifier_type_code)
        IF NOT EXISTS ( -- column not exists (obs_performer_identifier_type_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_performer_identifier_type_display'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_performer_identifier_type_display varchar;   -- performer/identifier/type/coding/display (varchar)
        END IF; -- column (obs_performer_identifier_type_display)
        IF NOT EXISTS ( -- column not exists (obs_performer_identifier_type_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_performer_identifier_type_text'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_performer_identifier_type_text varchar;   -- performer/identifier/type/text (varchar)
        END IF; -- column (obs_performer_identifier_type_text)
        IF NOT EXISTS ( -- column not exists (obs_performer_identifier_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_performer_identifier_system'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_performer_identifier_system varchar;   -- performer/identifier/system (varchar)
        END IF; -- column (obs_performer_identifier_system)
        IF NOT EXISTS ( -- column not exists (obs_performer_identifier_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_performer_identifier_value'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_performer_identifier_value varchar;   -- performer/identifier/value (varchar)
        END IF; -- column (obs_performer_identifier_value)
        IF NOT EXISTS ( -- column not exists (obs_performer_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_performer_display'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_performer_display varchar;   -- performer/display (varchar)
        END IF; -- column (obs_performer_display)
        IF NOT EXISTS ( -- column not exists (obs_referencerange_low_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_referencerange_low_value'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_referencerange_low_value double precision;   -- referenceRange/low/value (double precision)
        END IF; -- column (obs_referencerange_low_value)
        IF NOT EXISTS ( -- column not exists (obs_referencerange_low_unit)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_referencerange_low_unit'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_referencerange_low_unit varchar;   -- referenceRange/low/unit (varchar)
        END IF; -- column (obs_referencerange_low_unit)
        IF NOT EXISTS ( -- column not exists (obs_referencerange_low_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_referencerange_low_system'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_referencerange_low_system varchar;   -- referenceRange/low/system (varchar)
        END IF; -- column (obs_referencerange_low_system)
        IF NOT EXISTS ( -- column not exists (obs_referencerange_low_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_referencerange_low_code'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_referencerange_low_code varchar;   -- referenceRange/low/code (varchar)
        END IF; -- column (obs_referencerange_low_code)
        IF NOT EXISTS ( -- column not exists (obs_referencerange_high_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_referencerange_high_value'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_referencerange_high_value double precision;   -- referenceRange/high/value (double precision)
        END IF; -- column (obs_referencerange_high_value)
        IF NOT EXISTS ( -- column not exists (obs_referencerange_high_unit)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_referencerange_high_unit'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_referencerange_high_unit varchar;   -- referenceRange/high/unit (varchar)
        END IF; -- column (obs_referencerange_high_unit)
        IF NOT EXISTS ( -- column not exists (obs_referencerange_high_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_referencerange_high_system'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_referencerange_high_system varchar;   -- referenceRange/high/system (varchar)
        END IF; -- column (obs_referencerange_high_system)
        IF NOT EXISTS ( -- column not exists (obs_referencerange_high_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_referencerange_high_code'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_referencerange_high_code varchar;   -- referenceRange/high/code (varchar)
        END IF; -- column (obs_referencerange_high_code)
        IF NOT EXISTS ( -- column not exists (obs_referencerange_type_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_referencerange_type_system'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_referencerange_type_system varchar;   -- referenceRange/type/coding/system (varchar)
        END IF; -- column (obs_referencerange_type_system)
        IF NOT EXISTS ( -- column not exists (obs_referencerange_type_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_referencerange_type_version'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_referencerange_type_version varchar;   -- referenceRange/type/coding/version (varchar)
        END IF; -- column (obs_referencerange_type_version)
        IF NOT EXISTS ( -- column not exists (obs_referencerange_type_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_referencerange_type_code'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_referencerange_type_code varchar;   -- referenceRange/type/coding/code (varchar)
        END IF; -- column (obs_referencerange_type_code)
        IF NOT EXISTS ( -- column not exists (obs_referencerange_type_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_referencerange_type_display'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_referencerange_type_display varchar;   -- referenceRange/type/coding/display (varchar)
        END IF; -- column (obs_referencerange_type_display)
        IF NOT EXISTS ( -- column not exists (obs_referencerange_type_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_referencerange_type_text'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_referencerange_type_text varchar;   -- referenceRange/type/text (varchar)
        END IF; -- column (obs_referencerange_type_text)
        IF NOT EXISTS ( -- column not exists (obs_referencerange_appliesto_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_referencerange_appliesto_system'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_referencerange_appliesto_system varchar;   -- referenceRange/appliesTo/coding/system (varchar)
        END IF; -- column (obs_referencerange_appliesto_system)
        IF NOT EXISTS ( -- column not exists (obs_referencerange_appliesto_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_referencerange_appliesto_version'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_referencerange_appliesto_version varchar;   -- referenceRange/appliesTo/coding/version (varchar)
        END IF; -- column (obs_referencerange_appliesto_version)
        IF NOT EXISTS ( -- column not exists (obs_referencerange_appliesto_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_referencerange_appliesto_code'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_referencerange_appliesto_code varchar;   -- referenceRange/appliesTo/coding/code (varchar)
        END IF; -- column (obs_referencerange_appliesto_code)
        IF NOT EXISTS ( -- column not exists (obs_referencerange_appliesto_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_referencerange_appliesto_display'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_referencerange_appliesto_display varchar;   -- referenceRange/appliesTo/coding/display (varchar)
        END IF; -- column (obs_referencerange_appliesto_display)
        IF NOT EXISTS ( -- column not exists (obs_referencerange_appliesto_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_referencerange_appliesto_text'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_referencerange_appliesto_text varchar;   -- referenceRange/appliesTo/text (varchar)
        END IF; -- column (obs_referencerange_appliesto_text)
        IF NOT EXISTS ( -- column not exists (obs_referencerange_age_low_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_referencerange_age_low_value'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_referencerange_age_low_value double precision;   -- referenceRange/age/low/value (double precision)
        END IF; -- column (obs_referencerange_age_low_value)
        IF NOT EXISTS ( -- column not exists (obs_referencerange_age_low_unit)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_referencerange_age_low_unit'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_referencerange_age_low_unit varchar;   -- referenceRange/age/low/unit (varchar)
        END IF; -- column (obs_referencerange_age_low_unit)
        IF NOT EXISTS ( -- column not exists (obs_referencerange_age_low_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_referencerange_age_low_system'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_referencerange_age_low_system varchar;   -- referenceRange/age/low/system (varchar)
        END IF; -- column (obs_referencerange_age_low_system)
        IF NOT EXISTS ( -- column not exists (obs_referencerange_age_low_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_referencerange_age_low_code'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_referencerange_age_low_code varchar;   -- referenceRange/age/low/code (varchar)
        END IF; -- column (obs_referencerange_age_low_code)
        IF NOT EXISTS ( -- column not exists (obs_referencerange_age_high_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_referencerange_age_high_value'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_referencerange_age_high_value double precision;   -- referenceRange/age/high/value (double precision)
        END IF; -- column (obs_referencerange_age_high_value)
        IF NOT EXISTS ( -- column not exists (obs_referencerange_age_high_unit)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_referencerange_age_high_unit'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_referencerange_age_high_unit varchar;   -- referenceRange/age/high/unit (varchar)
        END IF; -- column (obs_referencerange_age_high_unit)
        IF NOT EXISTS ( -- column not exists (obs_referencerange_age_high_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_referencerange_age_high_system'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_referencerange_age_high_system varchar;   -- referenceRange/age/high/system (varchar)
        END IF; -- column (obs_referencerange_age_high_system)
        IF NOT EXISTS ( -- column not exists (obs_referencerange_age_high_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_referencerange_age_high_code'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_referencerange_age_high_code varchar;   -- referenceRange/age/high/code (varchar)
        END IF; -- column (obs_referencerange_age_high_code)
        IF NOT EXISTS ( -- column not exists (obs_referencerange_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_referencerange_text'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_referencerange_text varchar;   -- referenceRange/text (varchar)
        END IF; -- column (obs_referencerange_text)
        IF NOT EXISTS ( -- column not exists (obs_hasmember_ref)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_hasmember_ref'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_hasmember_ref varchar;   -- hasMember/reference (varchar)
        END IF; -- column (obs_hasmember_ref)
        IF NOT EXISTS ( -- column not exists (obs_hasmember_type)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_hasmember_type'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_hasmember_type varchar;   -- hasMember/type (varchar)
        END IF; -- column (obs_hasmember_type)
        IF NOT EXISTS ( -- column not exists (obs_hasmember_identifier_use)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_hasmember_identifier_use'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_hasmember_identifier_use varchar;   -- hasMember/identifier/use (varchar)
        END IF; -- column (obs_hasmember_identifier_use)
        IF NOT EXISTS ( -- column not exists (obs_hasmember_identifier_type_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_hasmember_identifier_type_system'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_hasmember_identifier_type_system varchar;   -- hasMember/identifier/type/coding/system (varchar)
        END IF; -- column (obs_hasmember_identifier_type_system)
        IF NOT EXISTS ( -- column not exists (obs_hasmember_identifier_type_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_hasmember_identifier_type_version'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_hasmember_identifier_type_version varchar;   -- hasMember/identifier/type/coding/version (varchar)
        END IF; -- column (obs_hasmember_identifier_type_version)
        IF NOT EXISTS ( -- column not exists (obs_hasmember_identifier_type_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_hasmember_identifier_type_code'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_hasmember_identifier_type_code varchar;   -- hasMember/identifier/type/coding/code (varchar)
        END IF; -- column (obs_hasmember_identifier_type_code)
        IF NOT EXISTS ( -- column not exists (obs_hasmember_identifier_type_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_hasmember_identifier_type_display'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_hasmember_identifier_type_display varchar;   -- hasMember/identifier/type/coding/display (varchar)
        END IF; -- column (obs_hasmember_identifier_type_display)
        IF NOT EXISTS ( -- column not exists (obs_hasmember_identifier_type_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_hasmember_identifier_type_text'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_hasmember_identifier_type_text varchar;   -- hasMember/identifier/type/text (varchar)
        END IF; -- column (obs_hasmember_identifier_type_text)
        IF NOT EXISTS ( -- column not exists (obs_hasmember_identifier_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_hasmember_identifier_system'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_hasmember_identifier_system varchar;   -- hasMember/identifier/system (varchar)
        END IF; -- column (obs_hasmember_identifier_system)
        IF NOT EXISTS ( -- column not exists (obs_hasmember_identifier_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_hasmember_identifier_value'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_hasmember_identifier_value varchar;   -- hasMember/identifier/value (varchar)
        END IF; -- column (obs_hasmember_identifier_value)
        IF NOT EXISTS ( -- column not exists (obs_hasmember_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'obs_hasmember_display'
        ) THEN
            ALTER TABLE cds2db_in.observation ADD obs_hasmember_display varchar;   -- hasMember/display (varchar)
        END IF; -- column (obs_hasmember_display)

-- Hash column for comparison on data-bearing columns -------------------------------------------
        IF EXISTS ( -- column exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation' AND column_name = 'hash_index_col'
        ) THEN
            IF NOT EXISTS ( -- column exists
                SELECT 1 FROM information_schema.columns WHERE table_schema = 'cds2db_in' AND table_name = 'observation' AND column_name = 'hash_index_col'
                AND trim(replace(replace(generation_expression::TEXT,'(',''),')','')) != trim(replace(replace('
	         COALESCE(db.to_char_immutable(obs_id), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_identifier_use), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_identifier_type_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_identifier_type_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_identifier_type_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_identifier_type_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_identifier_type_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_identifier_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_identifier_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_identifier_start), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_identifier_end), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_encounter_ref), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_patient_ref), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_partof_ref), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_basedon_ref), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_basedon_type), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_basedon_identifier_use), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_basedon_identifier_type_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_basedon_identifier_type_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_basedon_identifier_type_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_basedon_identifier_type_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_basedon_identifier_type_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_basedon_identifier_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_basedon_identifier_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_basedon_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_status), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_category_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_category_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_category_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_category_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_category_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_code_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_code_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_code_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_code_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_code_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_effectivedatetime), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_issued), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_valuerange_low_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_valuerange_low_unit), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_valuerange_low_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_valuerange_low_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_valuerange_high_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_valuerange_high_unit), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_valuerange_high_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_valuerange_high_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_valueratio_numerator_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_valueratio_numerator_comparator), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_valueratio_numerator_unit), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_valueratio_numerator_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_valueratio_numerator_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_valueratio_denominator_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_valueratio_denominator_comparator), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_valueratio_denominator_unit), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_valueratio_denominator_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_valueratio_denominator_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_valuequantity_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_valuequantity_comparator), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_valuequantity_unit), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_valuequantity_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_valuequantity_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_valuecodeableconcept_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_valuecodeableconcept_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_valuecodeableconcept_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_valuecodeableconcept_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_valuecodeableconcept_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_dataabsentreason_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_dataabsentreason_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_dataabsentreason_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_dataabsentreason_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_dataabsentreason_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_note_authorstring), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_note_authorreference_ref), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_note_authorreference_type), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_note_authorreference_identifier_use), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_note_authorreference_identifier_type_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_note_authorreference_identifier_type_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_note_authorreference_identifier_type_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_note_authorreference_identifier_type_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_note_authorreference_identifier_type_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_note_authorreference_identifier_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_note_authorreference_identifier_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_note_authorreference_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_note_time), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_note_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_method_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_method_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_method_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_method_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_method_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_performer_ref), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_performer_type), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_performer_identifier_use), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_performer_identifier_type_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_performer_identifier_type_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_performer_identifier_type_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_performer_identifier_type_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_performer_identifier_type_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_performer_identifier_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_performer_identifier_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_performer_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_referencerange_low_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_referencerange_low_unit), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_referencerange_low_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_referencerange_low_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_referencerange_high_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_referencerange_high_unit), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_referencerange_high_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_referencerange_high_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_referencerange_type_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_referencerange_type_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_referencerange_type_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_referencerange_type_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_referencerange_type_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_referencerange_appliesto_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_referencerange_appliesto_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_referencerange_appliesto_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_referencerange_appliesto_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_referencerange_appliesto_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_referencerange_age_low_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_referencerange_age_low_unit), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_referencerange_age_low_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_referencerange_age_low_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_referencerange_age_high_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_referencerange_age_high_unit), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_referencerange_age_high_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_referencerange_age_high_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_referencerange_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_hasmember_ref), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_hasmember_type), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_hasmember_identifier_use), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_hasmember_identifier_type_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_hasmember_identifier_type_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_hasmember_identifier_type_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_hasmember_identifier_type_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_hasmember_identifier_type_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_hasmember_identifier_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_hasmember_identifier_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(obs_hasmember_display), ''#NULL#'') || ''|||'' ||''#''
                ','(',''),')',''))
            ) THEN
            -- Delete the old hash column so that a new one can be created
            ALTER TABLE cds2db_in.observation DROP COLUMN hash_index_col;

            -- Creating the hash column
            ALTER TABLE cds2db_in.observation ADD
            hash_index_col TEXT GENERATED ALWAYS AS (
            md5(
	         COALESCE(db.to_char_immutable(obs_id), '#NULL#') || '|||' || -- hash from: id (obs_id)
          COALESCE(db.to_char_immutable(obs_identifier_use), '#NULL#') || '|||' || -- hash from: identifier/use (obs_identifier_use)
          COALESCE(db.to_char_immutable(obs_identifier_type_system), '#NULL#') || '|||' || -- hash from: identifier/type/coding/system (obs_identifier_type_system)
          COALESCE(db.to_char_immutable(obs_identifier_type_version), '#NULL#') || '|||' || -- hash from: identifier/type/coding/version (obs_identifier_type_version)
          COALESCE(db.to_char_immutable(obs_identifier_type_code), '#NULL#') || '|||' || -- hash from: identifier/type/coding/code (obs_identifier_type_code)
          COALESCE(db.to_char_immutable(obs_identifier_type_display), '#NULL#') || '|||' || -- hash from: identifier/type/coding/display (obs_identifier_type_display)
          COALESCE(db.to_char_immutable(obs_identifier_type_text), '#NULL#') || '|||' || -- hash from: identifier/type/text (obs_identifier_type_text)
          COALESCE(db.to_char_immutable(obs_identifier_system), '#NULL#') || '|||' || -- hash from: identifier/system (obs_identifier_system)
          COALESCE(db.to_char_immutable(obs_identifier_value), '#NULL#') || '|||' || -- hash from: identifier/value (obs_identifier_value)
          COALESCE(db.to_char_immutable(obs_identifier_start), '#NULL#') || '|||' || -- hash from: identifier/start (obs_identifier_start)
          COALESCE(db.to_char_immutable(obs_identifier_end), '#NULL#') || '|||' || -- hash from: identifier/end (obs_identifier_end)
          COALESCE(db.to_char_immutable(obs_encounter_ref), '#NULL#') || '|||' || -- hash from: encounter/reference (obs_encounter_ref)
          COALESCE(db.to_char_immutable(obs_patient_ref), '#NULL#') || '|||' || -- hash from: subject/reference (obs_patient_ref)
          COALESCE(db.to_char_immutable(obs_partof_ref), '#NULL#') || '|||' || -- hash from: partOf/reference (obs_partof_ref)
          COALESCE(db.to_char_immutable(obs_basedon_ref), '#NULL#') || '|||' || -- hash from: basedOn/reference (obs_basedon_ref)
          COALESCE(db.to_char_immutable(obs_basedon_type), '#NULL#') || '|||' || -- hash from: basedOn/type (obs_basedon_type)
          COALESCE(db.to_char_immutable(obs_basedon_identifier_use), '#NULL#') || '|||' || -- hash from: basedOn/identifier/use (obs_basedon_identifier_use)
          COALESCE(db.to_char_immutable(obs_basedon_identifier_type_system), '#NULL#') || '|||' || -- hash from: basedOn/identifier/type/coding/system (obs_basedon_identifier_type_system)
          COALESCE(db.to_char_immutable(obs_basedon_identifier_type_version), '#NULL#') || '|||' || -- hash from: basedOn/identifier/type/coding/version (obs_basedon_identifier_type_version)
          COALESCE(db.to_char_immutable(obs_basedon_identifier_type_code), '#NULL#') || '|||' || -- hash from: basedOn/identifier/type/coding/code (obs_basedon_identifier_type_code)
          COALESCE(db.to_char_immutable(obs_basedon_identifier_type_display), '#NULL#') || '|||' || -- hash from: basedOn/identifier/type/coding/display (obs_basedon_identifier_type_display)
          COALESCE(db.to_char_immutable(obs_basedon_identifier_type_text), '#NULL#') || '|||' || -- hash from: basedOn/identifier/type/text (obs_basedon_identifier_type_text)
          COALESCE(db.to_char_immutable(obs_basedon_identifier_system), '#NULL#') || '|||' || -- hash from: basedOn/identifier/system (obs_basedon_identifier_system)
          COALESCE(db.to_char_immutable(obs_basedon_identifier_value), '#NULL#') || '|||' || -- hash from: basedOn/identifier/value (obs_basedon_identifier_value)
          COALESCE(db.to_char_immutable(obs_basedon_display), '#NULL#') || '|||' || -- hash from: basedOn/display (obs_basedon_display)
          COALESCE(db.to_char_immutable(obs_status), '#NULL#') || '|||' || -- hash from: status (obs_status)
          COALESCE(db.to_char_immutable(obs_category_system), '#NULL#') || '|||' || -- hash from: category/coding/system (obs_category_system)
          COALESCE(db.to_char_immutable(obs_category_version), '#NULL#') || '|||' || -- hash from: category/coding/version (obs_category_version)
          COALESCE(db.to_char_immutable(obs_category_code), '#NULL#') || '|||' || -- hash from: category/coding/code (obs_category_code)
          COALESCE(db.to_char_immutable(obs_category_display), '#NULL#') || '|||' || -- hash from: category/coding/display (obs_category_display)
          COALESCE(db.to_char_immutable(obs_category_text), '#NULL#') || '|||' || -- hash from: category/text (obs_category_text)
          COALESCE(db.to_char_immutable(obs_code_system), '#NULL#') || '|||' || -- hash from: code/coding/system (obs_code_system)
          COALESCE(db.to_char_immutable(obs_code_version), '#NULL#') || '|||' || -- hash from: code/coding/version (obs_code_version)
          COALESCE(db.to_char_immutable(obs_code_code), '#NULL#') || '|||' || -- hash from: code/coding/code (obs_code_code)
          COALESCE(db.to_char_immutable(obs_code_display), '#NULL#') || '|||' || -- hash from: code/coding/display (obs_code_display)
          COALESCE(db.to_char_immutable(obs_code_text), '#NULL#') || '|||' || -- hash from: code/text (obs_code_text)
          COALESCE(db.to_char_immutable(obs_effectivedatetime), '#NULL#') || '|||' || -- hash from: effectiveDateTime (obs_effectivedatetime)
          COALESCE(db.to_char_immutable(obs_issued), '#NULL#') || '|||' || -- hash from: issued (obs_issued)
          COALESCE(db.to_char_immutable(obs_valuerange_low_value), '#NULL#') || '|||' || -- hash from: valueRange/low/value (obs_valuerange_low_value)
          COALESCE(db.to_char_immutable(obs_valuerange_low_unit), '#NULL#') || '|||' || -- hash from: valueRange/low/unit (obs_valuerange_low_unit)
          COALESCE(db.to_char_immutable(obs_valuerange_low_system), '#NULL#') || '|||' || -- hash from: valueRange/low/system (obs_valuerange_low_system)
          COALESCE(db.to_char_immutable(obs_valuerange_low_code), '#NULL#') || '|||' || -- hash from: valueRange/low/code (obs_valuerange_low_code)
          COALESCE(db.to_char_immutable(obs_valuerange_high_value), '#NULL#') || '|||' || -- hash from: valueRange/high/value (obs_valuerange_high_value)
          COALESCE(db.to_char_immutable(obs_valuerange_high_unit), '#NULL#') || '|||' || -- hash from: valueRange/high/unit (obs_valuerange_high_unit)
          COALESCE(db.to_char_immutable(obs_valuerange_high_system), '#NULL#') || '|||' || -- hash from: valueRange/high/system (obs_valuerange_high_system)
          COALESCE(db.to_char_immutable(obs_valuerange_high_code), '#NULL#') || '|||' || -- hash from: valueRange/high/code (obs_valuerange_high_code)
          COALESCE(db.to_char_immutable(obs_valueratio_numerator_value), '#NULL#') || '|||' || -- hash from: valueRatio/numerator/value (obs_valueratio_numerator_value)
          COALESCE(db.to_char_immutable(obs_valueratio_numerator_comparator), '#NULL#') || '|||' || -- hash from: valueRatio/numerator/comparator (obs_valueratio_numerator_comparator)
          COALESCE(db.to_char_immutable(obs_valueratio_numerator_unit), '#NULL#') || '|||' || -- hash from: valueRatio/numerator/unit (obs_valueratio_numerator_unit)
          COALESCE(db.to_char_immutable(obs_valueratio_numerator_system), '#NULL#') || '|||' || -- hash from: valueRatio/numerator/system (obs_valueratio_numerator_system)
          COALESCE(db.to_char_immutable(obs_valueratio_numerator_code), '#NULL#') || '|||' || -- hash from: valueRatio/numerator/code (obs_valueratio_numerator_code)
          COALESCE(db.to_char_immutable(obs_valueratio_denominator_value), '#NULL#') || '|||' || -- hash from: valueRatio/denominator/value (obs_valueratio_denominator_value)
          COALESCE(db.to_char_immutable(obs_valueratio_denominator_comparator), '#NULL#') || '|||' || -- hash from: valueRatio/denominator/comparator (obs_valueratio_denominator_comparator)
          COALESCE(db.to_char_immutable(obs_valueratio_denominator_unit), '#NULL#') || '|||' || -- hash from: valueRatio/denominator/unit (obs_valueratio_denominator_unit)
          COALESCE(db.to_char_immutable(obs_valueratio_denominator_system), '#NULL#') || '|||' || -- hash from: valueRatio/denominator/system (obs_valueratio_denominator_system)
          COALESCE(db.to_char_immutable(obs_valueratio_denominator_code), '#NULL#') || '|||' || -- hash from: valueRatio/denominator/code (obs_valueratio_denominator_code)
          COALESCE(db.to_char_immutable(obs_valuequantity_value), '#NULL#') || '|||' || -- hash from: valueQuantity/value (obs_valuequantity_value)
          COALESCE(db.to_char_immutable(obs_valuequantity_comparator), '#NULL#') || '|||' || -- hash from: valueQuantity/comparator (obs_valuequantity_comparator)
          COALESCE(db.to_char_immutable(obs_valuequantity_unit), '#NULL#') || '|||' || -- hash from: valueQuantity/unit (obs_valuequantity_unit)
          COALESCE(db.to_char_immutable(obs_valuequantity_system), '#NULL#') || '|||' || -- hash from: valueQuantity/system (obs_valuequantity_system)
          COALESCE(db.to_char_immutable(obs_valuequantity_code), '#NULL#') || '|||' || -- hash from: valueQuantity/code (obs_valuequantity_code)
          COALESCE(db.to_char_immutable(obs_valuecodeableconcept_system), '#NULL#') || '|||' || -- hash from: valueCodeableConcept/coding/system (obs_valuecodeableconcept_system)
          COALESCE(db.to_char_immutable(obs_valuecodeableconcept_version), '#NULL#') || '|||' || -- hash from: valueCodeableConcept/coding/version (obs_valuecodeableconcept_version)
          COALESCE(db.to_char_immutable(obs_valuecodeableconcept_code), '#NULL#') || '|||' || -- hash from: valueCodeableConcept/coding/code (obs_valuecodeableconcept_code)
          COALESCE(db.to_char_immutable(obs_valuecodeableconcept_display), '#NULL#') || '|||' || -- hash from: valueCodeableConcept/coding/display (obs_valuecodeableconcept_display)
          COALESCE(db.to_char_immutable(obs_valuecodeableconcept_text), '#NULL#') || '|||' || -- hash from: valueCodeableConcept/text (obs_valuecodeableconcept_text)
          COALESCE(db.to_char_immutable(obs_dataabsentreason_system), '#NULL#') || '|||' || -- hash from: dataAbsentReason/coding/system (obs_dataabsentreason_system)
          COALESCE(db.to_char_immutable(obs_dataabsentreason_version), '#NULL#') || '|||' || -- hash from: dataAbsentReason/coding/version (obs_dataabsentreason_version)
          COALESCE(db.to_char_immutable(obs_dataabsentreason_code), '#NULL#') || '|||' || -- hash from: dataAbsentReason/coding/code (obs_dataabsentreason_code)
          COALESCE(db.to_char_immutable(obs_dataabsentreason_display), '#NULL#') || '|||' || -- hash from: dataAbsentReason/coding/display (obs_dataabsentreason_display)
          COALESCE(db.to_char_immutable(obs_dataabsentreason_text), '#NULL#') || '|||' || -- hash from: dataAbsentReason/text (obs_dataabsentreason_text)
          COALESCE(db.to_char_immutable(obs_note_authorstring), '#NULL#') || '|||' || -- hash from: note/authorString (obs_note_authorstring)
          COALESCE(db.to_char_immutable(obs_note_authorreference_ref), '#NULL#') || '|||' || -- hash from: note/authorReference/reference (obs_note_authorreference_ref)
          COALESCE(db.to_char_immutable(obs_note_authorreference_type), '#NULL#') || '|||' || -- hash from: note/authorReference/type (obs_note_authorreference_type)
          COALESCE(db.to_char_immutable(obs_note_authorreference_identifier_use), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/use (obs_note_authorreference_identifier_use)
          COALESCE(db.to_char_immutable(obs_note_authorreference_identifier_type_system), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/type/coding/system (obs_note_authorreference_identifier_type_system)
          COALESCE(db.to_char_immutable(obs_note_authorreference_identifier_type_version), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/type/coding/version (obs_note_authorreference_identifier_type_version)
          COALESCE(db.to_char_immutable(obs_note_authorreference_identifier_type_code), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/type/coding/code (obs_note_authorreference_identifier_type_code)
          COALESCE(db.to_char_immutable(obs_note_authorreference_identifier_type_display), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/type/coding/display (obs_note_authorreference_identifier_type_display)
          COALESCE(db.to_char_immutable(obs_note_authorreference_identifier_type_text), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/type/text (obs_note_authorreference_identifier_type_text)
          COALESCE(db.to_char_immutable(obs_note_authorreference_identifier_system), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/system (obs_note_authorreference_identifier_system)
          COALESCE(db.to_char_immutable(obs_note_authorreference_identifier_value), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/value (obs_note_authorreference_identifier_value)
          COALESCE(db.to_char_immutable(obs_note_authorreference_display), '#NULL#') || '|||' || -- hash from: note/authorReference/display (obs_note_authorreference_display)
          COALESCE(db.to_char_immutable(obs_note_time), '#NULL#') || '|||' || -- hash from: note/time (obs_note_time)
          COALESCE(db.to_char_immutable(obs_note_text), '#NULL#') || '|||' || -- hash from: note/text (obs_note_text)
          COALESCE(db.to_char_immutable(obs_method_system), '#NULL#') || '|||' || -- hash from: method/coding/system (obs_method_system)
          COALESCE(db.to_char_immutable(obs_method_version), '#NULL#') || '|||' || -- hash from: method/coding/version (obs_method_version)
          COALESCE(db.to_char_immutable(obs_method_code), '#NULL#') || '|||' || -- hash from: method/coding/code (obs_method_code)
          COALESCE(db.to_char_immutable(obs_method_display), '#NULL#') || '|||' || -- hash from: method/coding/display (obs_method_display)
          COALESCE(db.to_char_immutable(obs_method_text), '#NULL#') || '|||' || -- hash from: method/text (obs_method_text)
          COALESCE(db.to_char_immutable(obs_performer_ref), '#NULL#') || '|||' || -- hash from: performer/reference (obs_performer_ref)
          COALESCE(db.to_char_immutable(obs_performer_type), '#NULL#') || '|||' || -- hash from: performer/type (obs_performer_type)
          COALESCE(db.to_char_immutable(obs_performer_identifier_use), '#NULL#') || '|||' || -- hash from: performer/identifier/use (obs_performer_identifier_use)
          COALESCE(db.to_char_immutable(obs_performer_identifier_type_system), '#NULL#') || '|||' || -- hash from: performer/identifier/type/coding/system (obs_performer_identifier_type_system)
          COALESCE(db.to_char_immutable(obs_performer_identifier_type_version), '#NULL#') || '|||' || -- hash from: performer/identifier/type/coding/version (obs_performer_identifier_type_version)
          COALESCE(db.to_char_immutable(obs_performer_identifier_type_code), '#NULL#') || '|||' || -- hash from: performer/identifier/type/coding/code (obs_performer_identifier_type_code)
          COALESCE(db.to_char_immutable(obs_performer_identifier_type_display), '#NULL#') || '|||' || -- hash from: performer/identifier/type/coding/display (obs_performer_identifier_type_display)
          COALESCE(db.to_char_immutable(obs_performer_identifier_type_text), '#NULL#') || '|||' || -- hash from: performer/identifier/type/text (obs_performer_identifier_type_text)
          COALESCE(db.to_char_immutable(obs_performer_identifier_system), '#NULL#') || '|||' || -- hash from: performer/identifier/system (obs_performer_identifier_system)
          COALESCE(db.to_char_immutable(obs_performer_identifier_value), '#NULL#') || '|||' || -- hash from: performer/identifier/value (obs_performer_identifier_value)
          COALESCE(db.to_char_immutable(obs_performer_display), '#NULL#') || '|||' || -- hash from: performer/display (obs_performer_display)
          COALESCE(db.to_char_immutable(obs_referencerange_low_value), '#NULL#') || '|||' || -- hash from: referenceRange/low/value (obs_referencerange_low_value)
          COALESCE(db.to_char_immutable(obs_referencerange_low_unit), '#NULL#') || '|||' || -- hash from: referenceRange/low/unit (obs_referencerange_low_unit)
          COALESCE(db.to_char_immutable(obs_referencerange_low_system), '#NULL#') || '|||' || -- hash from: referenceRange/low/system (obs_referencerange_low_system)
          COALESCE(db.to_char_immutable(obs_referencerange_low_code), '#NULL#') || '|||' || -- hash from: referenceRange/low/code (obs_referencerange_low_code)
          COALESCE(db.to_char_immutable(obs_referencerange_high_value), '#NULL#') || '|||' || -- hash from: referenceRange/high/value (obs_referencerange_high_value)
          COALESCE(db.to_char_immutable(obs_referencerange_high_unit), '#NULL#') || '|||' || -- hash from: referenceRange/high/unit (obs_referencerange_high_unit)
          COALESCE(db.to_char_immutable(obs_referencerange_high_system), '#NULL#') || '|||' || -- hash from: referenceRange/high/system (obs_referencerange_high_system)
          COALESCE(db.to_char_immutable(obs_referencerange_high_code), '#NULL#') || '|||' || -- hash from: referenceRange/high/code (obs_referencerange_high_code)
          COALESCE(db.to_char_immutable(obs_referencerange_type_system), '#NULL#') || '|||' || -- hash from: referenceRange/type/coding/system (obs_referencerange_type_system)
          COALESCE(db.to_char_immutable(obs_referencerange_type_version), '#NULL#') || '|||' || -- hash from: referenceRange/type/coding/version (obs_referencerange_type_version)
          COALESCE(db.to_char_immutable(obs_referencerange_type_code), '#NULL#') || '|||' || -- hash from: referenceRange/type/coding/code (obs_referencerange_type_code)
          COALESCE(db.to_char_immutable(obs_referencerange_type_display), '#NULL#') || '|||' || -- hash from: referenceRange/type/coding/display (obs_referencerange_type_display)
          COALESCE(db.to_char_immutable(obs_referencerange_type_text), '#NULL#') || '|||' || -- hash from: referenceRange/type/text (obs_referencerange_type_text)
          COALESCE(db.to_char_immutable(obs_referencerange_appliesto_system), '#NULL#') || '|||' || -- hash from: referenceRange/appliesTo/coding/system (obs_referencerange_appliesto_system)
          COALESCE(db.to_char_immutable(obs_referencerange_appliesto_version), '#NULL#') || '|||' || -- hash from: referenceRange/appliesTo/coding/version (obs_referencerange_appliesto_version)
          COALESCE(db.to_char_immutable(obs_referencerange_appliesto_code), '#NULL#') || '|||' || -- hash from: referenceRange/appliesTo/coding/code (obs_referencerange_appliesto_code)
          COALESCE(db.to_char_immutable(obs_referencerange_appliesto_display), '#NULL#') || '|||' || -- hash from: referenceRange/appliesTo/coding/display (obs_referencerange_appliesto_display)
          COALESCE(db.to_char_immutable(obs_referencerange_appliesto_text), '#NULL#') || '|||' || -- hash from: referenceRange/appliesTo/text (obs_referencerange_appliesto_text)
          COALESCE(db.to_char_immutable(obs_referencerange_age_low_value), '#NULL#') || '|||' || -- hash from: referenceRange/age/low/value (obs_referencerange_age_low_value)
          COALESCE(db.to_char_immutable(obs_referencerange_age_low_unit), '#NULL#') || '|||' || -- hash from: referenceRange/age/low/unit (obs_referencerange_age_low_unit)
          COALESCE(db.to_char_immutable(obs_referencerange_age_low_system), '#NULL#') || '|||' || -- hash from: referenceRange/age/low/system (obs_referencerange_age_low_system)
          COALESCE(db.to_char_immutable(obs_referencerange_age_low_code), '#NULL#') || '|||' || -- hash from: referenceRange/age/low/code (obs_referencerange_age_low_code)
          COALESCE(db.to_char_immutable(obs_referencerange_age_high_value), '#NULL#') || '|||' || -- hash from: referenceRange/age/high/value (obs_referencerange_age_high_value)
          COALESCE(db.to_char_immutable(obs_referencerange_age_high_unit), '#NULL#') || '|||' || -- hash from: referenceRange/age/high/unit (obs_referencerange_age_high_unit)
          COALESCE(db.to_char_immutable(obs_referencerange_age_high_system), '#NULL#') || '|||' || -- hash from: referenceRange/age/high/system (obs_referencerange_age_high_system)
          COALESCE(db.to_char_immutable(obs_referencerange_age_high_code), '#NULL#') || '|||' || -- hash from: referenceRange/age/high/code (obs_referencerange_age_high_code)
          COALESCE(db.to_char_immutable(obs_referencerange_text), '#NULL#') || '|||' || -- hash from: referenceRange/text (obs_referencerange_text)
          COALESCE(db.to_char_immutable(obs_hasmember_ref), '#NULL#') || '|||' || -- hash from: hasMember/reference (obs_hasmember_ref)
          COALESCE(db.to_char_immutable(obs_hasmember_type), '#NULL#') || '|||' || -- hash from: hasMember/type (obs_hasmember_type)
          COALESCE(db.to_char_immutable(obs_hasmember_identifier_use), '#NULL#') || '|||' || -- hash from: hasMember/identifier/use (obs_hasmember_identifier_use)
          COALESCE(db.to_char_immutable(obs_hasmember_identifier_type_system), '#NULL#') || '|||' || -- hash from: hasMember/identifier/type/coding/system (obs_hasmember_identifier_type_system)
          COALESCE(db.to_char_immutable(obs_hasmember_identifier_type_version), '#NULL#') || '|||' || -- hash from: hasMember/identifier/type/coding/version (obs_hasmember_identifier_type_version)
          COALESCE(db.to_char_immutable(obs_hasmember_identifier_type_code), '#NULL#') || '|||' || -- hash from: hasMember/identifier/type/coding/code (obs_hasmember_identifier_type_code)
          COALESCE(db.to_char_immutable(obs_hasmember_identifier_type_display), '#NULL#') || '|||' || -- hash from: hasMember/identifier/type/coding/display (obs_hasmember_identifier_type_display)
          COALESCE(db.to_char_immutable(obs_hasmember_identifier_type_text), '#NULL#') || '|||' || -- hash from: hasMember/identifier/type/text (obs_hasmember_identifier_type_text)
          COALESCE(db.to_char_immutable(obs_hasmember_identifier_system), '#NULL#') || '|||' || -- hash from: hasMember/identifier/system (obs_hasmember_identifier_system)
          COALESCE(db.to_char_immutable(obs_hasmember_identifier_value), '#NULL#') || '|||' || -- hash from: hasMember/identifier/value (obs_hasmember_identifier_value)
          COALESCE(db.to_char_immutable(obs_hasmember_display), '#NULL#') || '|||' || -- hash from: hasMember/display (obs_hasmember_display)
                 '#'
               )
            ) STORED; -- Column for hash value for comparing FHIR data - collion check in second step hash_index_col
            END IF; -- currend hash definition
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'observation'
            AND column_name = 'hash_index_col'
        ) THEN
            -- Creating the hash column
            ALTER TABLE cds2db_in.observation ADD
            hash_index_col TEXT GENERATED ALWAYS AS (
            md5(
	         COALESCE(db.to_char_immutable(obs_id), '#NULL#') || '|||' || -- hash from: id (obs_id)
          COALESCE(db.to_char_immutable(obs_identifier_use), '#NULL#') || '|||' || -- hash from: identifier/use (obs_identifier_use)
          COALESCE(db.to_char_immutable(obs_identifier_type_system), '#NULL#') || '|||' || -- hash from: identifier/type/coding/system (obs_identifier_type_system)
          COALESCE(db.to_char_immutable(obs_identifier_type_version), '#NULL#') || '|||' || -- hash from: identifier/type/coding/version (obs_identifier_type_version)
          COALESCE(db.to_char_immutable(obs_identifier_type_code), '#NULL#') || '|||' || -- hash from: identifier/type/coding/code (obs_identifier_type_code)
          COALESCE(db.to_char_immutable(obs_identifier_type_display), '#NULL#') || '|||' || -- hash from: identifier/type/coding/display (obs_identifier_type_display)
          COALESCE(db.to_char_immutable(obs_identifier_type_text), '#NULL#') || '|||' || -- hash from: identifier/type/text (obs_identifier_type_text)
          COALESCE(db.to_char_immutable(obs_identifier_system), '#NULL#') || '|||' || -- hash from: identifier/system (obs_identifier_system)
          COALESCE(db.to_char_immutable(obs_identifier_value), '#NULL#') || '|||' || -- hash from: identifier/value (obs_identifier_value)
          COALESCE(db.to_char_immutable(obs_identifier_start), '#NULL#') || '|||' || -- hash from: identifier/start (obs_identifier_start)
          COALESCE(db.to_char_immutable(obs_identifier_end), '#NULL#') || '|||' || -- hash from: identifier/end (obs_identifier_end)
          COALESCE(db.to_char_immutable(obs_encounter_ref), '#NULL#') || '|||' || -- hash from: encounter/reference (obs_encounter_ref)
          COALESCE(db.to_char_immutable(obs_patient_ref), '#NULL#') || '|||' || -- hash from: subject/reference (obs_patient_ref)
          COALESCE(db.to_char_immutable(obs_partof_ref), '#NULL#') || '|||' || -- hash from: partOf/reference (obs_partof_ref)
          COALESCE(db.to_char_immutable(obs_basedon_ref), '#NULL#') || '|||' || -- hash from: basedOn/reference (obs_basedon_ref)
          COALESCE(db.to_char_immutable(obs_basedon_type), '#NULL#') || '|||' || -- hash from: basedOn/type (obs_basedon_type)
          COALESCE(db.to_char_immutable(obs_basedon_identifier_use), '#NULL#') || '|||' || -- hash from: basedOn/identifier/use (obs_basedon_identifier_use)
          COALESCE(db.to_char_immutable(obs_basedon_identifier_type_system), '#NULL#') || '|||' || -- hash from: basedOn/identifier/type/coding/system (obs_basedon_identifier_type_system)
          COALESCE(db.to_char_immutable(obs_basedon_identifier_type_version), '#NULL#') || '|||' || -- hash from: basedOn/identifier/type/coding/version (obs_basedon_identifier_type_version)
          COALESCE(db.to_char_immutable(obs_basedon_identifier_type_code), '#NULL#') || '|||' || -- hash from: basedOn/identifier/type/coding/code (obs_basedon_identifier_type_code)
          COALESCE(db.to_char_immutable(obs_basedon_identifier_type_display), '#NULL#') || '|||' || -- hash from: basedOn/identifier/type/coding/display (obs_basedon_identifier_type_display)
          COALESCE(db.to_char_immutable(obs_basedon_identifier_type_text), '#NULL#') || '|||' || -- hash from: basedOn/identifier/type/text (obs_basedon_identifier_type_text)
          COALESCE(db.to_char_immutable(obs_basedon_identifier_system), '#NULL#') || '|||' || -- hash from: basedOn/identifier/system (obs_basedon_identifier_system)
          COALESCE(db.to_char_immutable(obs_basedon_identifier_value), '#NULL#') || '|||' || -- hash from: basedOn/identifier/value (obs_basedon_identifier_value)
          COALESCE(db.to_char_immutable(obs_basedon_display), '#NULL#') || '|||' || -- hash from: basedOn/display (obs_basedon_display)
          COALESCE(db.to_char_immutable(obs_status), '#NULL#') || '|||' || -- hash from: status (obs_status)
          COALESCE(db.to_char_immutable(obs_category_system), '#NULL#') || '|||' || -- hash from: category/coding/system (obs_category_system)
          COALESCE(db.to_char_immutable(obs_category_version), '#NULL#') || '|||' || -- hash from: category/coding/version (obs_category_version)
          COALESCE(db.to_char_immutable(obs_category_code), '#NULL#') || '|||' || -- hash from: category/coding/code (obs_category_code)
          COALESCE(db.to_char_immutable(obs_category_display), '#NULL#') || '|||' || -- hash from: category/coding/display (obs_category_display)
          COALESCE(db.to_char_immutable(obs_category_text), '#NULL#') || '|||' || -- hash from: category/text (obs_category_text)
          COALESCE(db.to_char_immutable(obs_code_system), '#NULL#') || '|||' || -- hash from: code/coding/system (obs_code_system)
          COALESCE(db.to_char_immutable(obs_code_version), '#NULL#') || '|||' || -- hash from: code/coding/version (obs_code_version)
          COALESCE(db.to_char_immutable(obs_code_code), '#NULL#') || '|||' || -- hash from: code/coding/code (obs_code_code)
          COALESCE(db.to_char_immutable(obs_code_display), '#NULL#') || '|||' || -- hash from: code/coding/display (obs_code_display)
          COALESCE(db.to_char_immutable(obs_code_text), '#NULL#') || '|||' || -- hash from: code/text (obs_code_text)
          COALESCE(db.to_char_immutable(obs_effectivedatetime), '#NULL#') || '|||' || -- hash from: effectiveDateTime (obs_effectivedatetime)
          COALESCE(db.to_char_immutable(obs_issued), '#NULL#') || '|||' || -- hash from: issued (obs_issued)
          COALESCE(db.to_char_immutable(obs_valuerange_low_value), '#NULL#') || '|||' || -- hash from: valueRange/low/value (obs_valuerange_low_value)
          COALESCE(db.to_char_immutable(obs_valuerange_low_unit), '#NULL#') || '|||' || -- hash from: valueRange/low/unit (obs_valuerange_low_unit)
          COALESCE(db.to_char_immutable(obs_valuerange_low_system), '#NULL#') || '|||' || -- hash from: valueRange/low/system (obs_valuerange_low_system)
          COALESCE(db.to_char_immutable(obs_valuerange_low_code), '#NULL#') || '|||' || -- hash from: valueRange/low/code (obs_valuerange_low_code)
          COALESCE(db.to_char_immutable(obs_valuerange_high_value), '#NULL#') || '|||' || -- hash from: valueRange/high/value (obs_valuerange_high_value)
          COALESCE(db.to_char_immutable(obs_valuerange_high_unit), '#NULL#') || '|||' || -- hash from: valueRange/high/unit (obs_valuerange_high_unit)
          COALESCE(db.to_char_immutable(obs_valuerange_high_system), '#NULL#') || '|||' || -- hash from: valueRange/high/system (obs_valuerange_high_system)
          COALESCE(db.to_char_immutable(obs_valuerange_high_code), '#NULL#') || '|||' || -- hash from: valueRange/high/code (obs_valuerange_high_code)
          COALESCE(db.to_char_immutable(obs_valueratio_numerator_value), '#NULL#') || '|||' || -- hash from: valueRatio/numerator/value (obs_valueratio_numerator_value)
          COALESCE(db.to_char_immutable(obs_valueratio_numerator_comparator), '#NULL#') || '|||' || -- hash from: valueRatio/numerator/comparator (obs_valueratio_numerator_comparator)
          COALESCE(db.to_char_immutable(obs_valueratio_numerator_unit), '#NULL#') || '|||' || -- hash from: valueRatio/numerator/unit (obs_valueratio_numerator_unit)
          COALESCE(db.to_char_immutable(obs_valueratio_numerator_system), '#NULL#') || '|||' || -- hash from: valueRatio/numerator/system (obs_valueratio_numerator_system)
          COALESCE(db.to_char_immutable(obs_valueratio_numerator_code), '#NULL#') || '|||' || -- hash from: valueRatio/numerator/code (obs_valueratio_numerator_code)
          COALESCE(db.to_char_immutable(obs_valueratio_denominator_value), '#NULL#') || '|||' || -- hash from: valueRatio/denominator/value (obs_valueratio_denominator_value)
          COALESCE(db.to_char_immutable(obs_valueratio_denominator_comparator), '#NULL#') || '|||' || -- hash from: valueRatio/denominator/comparator (obs_valueratio_denominator_comparator)
          COALESCE(db.to_char_immutable(obs_valueratio_denominator_unit), '#NULL#') || '|||' || -- hash from: valueRatio/denominator/unit (obs_valueratio_denominator_unit)
          COALESCE(db.to_char_immutable(obs_valueratio_denominator_system), '#NULL#') || '|||' || -- hash from: valueRatio/denominator/system (obs_valueratio_denominator_system)
          COALESCE(db.to_char_immutable(obs_valueratio_denominator_code), '#NULL#') || '|||' || -- hash from: valueRatio/denominator/code (obs_valueratio_denominator_code)
          COALESCE(db.to_char_immutable(obs_valuequantity_value), '#NULL#') || '|||' || -- hash from: valueQuantity/value (obs_valuequantity_value)
          COALESCE(db.to_char_immutable(obs_valuequantity_comparator), '#NULL#') || '|||' || -- hash from: valueQuantity/comparator (obs_valuequantity_comparator)
          COALESCE(db.to_char_immutable(obs_valuequantity_unit), '#NULL#') || '|||' || -- hash from: valueQuantity/unit (obs_valuequantity_unit)
          COALESCE(db.to_char_immutable(obs_valuequantity_system), '#NULL#') || '|||' || -- hash from: valueQuantity/system (obs_valuequantity_system)
          COALESCE(db.to_char_immutable(obs_valuequantity_code), '#NULL#') || '|||' || -- hash from: valueQuantity/code (obs_valuequantity_code)
          COALESCE(db.to_char_immutable(obs_valuecodeableconcept_system), '#NULL#') || '|||' || -- hash from: valueCodeableConcept/coding/system (obs_valuecodeableconcept_system)
          COALESCE(db.to_char_immutable(obs_valuecodeableconcept_version), '#NULL#') || '|||' || -- hash from: valueCodeableConcept/coding/version (obs_valuecodeableconcept_version)
          COALESCE(db.to_char_immutable(obs_valuecodeableconcept_code), '#NULL#') || '|||' || -- hash from: valueCodeableConcept/coding/code (obs_valuecodeableconcept_code)
          COALESCE(db.to_char_immutable(obs_valuecodeableconcept_display), '#NULL#') || '|||' || -- hash from: valueCodeableConcept/coding/display (obs_valuecodeableconcept_display)
          COALESCE(db.to_char_immutable(obs_valuecodeableconcept_text), '#NULL#') || '|||' || -- hash from: valueCodeableConcept/text (obs_valuecodeableconcept_text)
          COALESCE(db.to_char_immutable(obs_dataabsentreason_system), '#NULL#') || '|||' || -- hash from: dataAbsentReason/coding/system (obs_dataabsentreason_system)
          COALESCE(db.to_char_immutable(obs_dataabsentreason_version), '#NULL#') || '|||' || -- hash from: dataAbsentReason/coding/version (obs_dataabsentreason_version)
          COALESCE(db.to_char_immutable(obs_dataabsentreason_code), '#NULL#') || '|||' || -- hash from: dataAbsentReason/coding/code (obs_dataabsentreason_code)
          COALESCE(db.to_char_immutable(obs_dataabsentreason_display), '#NULL#') || '|||' || -- hash from: dataAbsentReason/coding/display (obs_dataabsentreason_display)
          COALESCE(db.to_char_immutable(obs_dataabsentreason_text), '#NULL#') || '|||' || -- hash from: dataAbsentReason/text (obs_dataabsentreason_text)
          COALESCE(db.to_char_immutable(obs_note_authorstring), '#NULL#') || '|||' || -- hash from: note/authorString (obs_note_authorstring)
          COALESCE(db.to_char_immutable(obs_note_authorreference_ref), '#NULL#') || '|||' || -- hash from: note/authorReference/reference (obs_note_authorreference_ref)
          COALESCE(db.to_char_immutable(obs_note_authorreference_type), '#NULL#') || '|||' || -- hash from: note/authorReference/type (obs_note_authorreference_type)
          COALESCE(db.to_char_immutable(obs_note_authorreference_identifier_use), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/use (obs_note_authorreference_identifier_use)
          COALESCE(db.to_char_immutable(obs_note_authorreference_identifier_type_system), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/type/coding/system (obs_note_authorreference_identifier_type_system)
          COALESCE(db.to_char_immutable(obs_note_authorreference_identifier_type_version), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/type/coding/version (obs_note_authorreference_identifier_type_version)
          COALESCE(db.to_char_immutable(obs_note_authorreference_identifier_type_code), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/type/coding/code (obs_note_authorreference_identifier_type_code)
          COALESCE(db.to_char_immutable(obs_note_authorreference_identifier_type_display), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/type/coding/display (obs_note_authorreference_identifier_type_display)
          COALESCE(db.to_char_immutable(obs_note_authorreference_identifier_type_text), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/type/text (obs_note_authorreference_identifier_type_text)
          COALESCE(db.to_char_immutable(obs_note_authorreference_identifier_system), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/system (obs_note_authorreference_identifier_system)
          COALESCE(db.to_char_immutable(obs_note_authorreference_identifier_value), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/value (obs_note_authorreference_identifier_value)
          COALESCE(db.to_char_immutable(obs_note_authorreference_display), '#NULL#') || '|||' || -- hash from: note/authorReference/display (obs_note_authorreference_display)
          COALESCE(db.to_char_immutable(obs_note_time), '#NULL#') || '|||' || -- hash from: note/time (obs_note_time)
          COALESCE(db.to_char_immutable(obs_note_text), '#NULL#') || '|||' || -- hash from: note/text (obs_note_text)
          COALESCE(db.to_char_immutable(obs_method_system), '#NULL#') || '|||' || -- hash from: method/coding/system (obs_method_system)
          COALESCE(db.to_char_immutable(obs_method_version), '#NULL#') || '|||' || -- hash from: method/coding/version (obs_method_version)
          COALESCE(db.to_char_immutable(obs_method_code), '#NULL#') || '|||' || -- hash from: method/coding/code (obs_method_code)
          COALESCE(db.to_char_immutable(obs_method_display), '#NULL#') || '|||' || -- hash from: method/coding/display (obs_method_display)
          COALESCE(db.to_char_immutable(obs_method_text), '#NULL#') || '|||' || -- hash from: method/text (obs_method_text)
          COALESCE(db.to_char_immutable(obs_performer_ref), '#NULL#') || '|||' || -- hash from: performer/reference (obs_performer_ref)
          COALESCE(db.to_char_immutable(obs_performer_type), '#NULL#') || '|||' || -- hash from: performer/type (obs_performer_type)
          COALESCE(db.to_char_immutable(obs_performer_identifier_use), '#NULL#') || '|||' || -- hash from: performer/identifier/use (obs_performer_identifier_use)
          COALESCE(db.to_char_immutable(obs_performer_identifier_type_system), '#NULL#') || '|||' || -- hash from: performer/identifier/type/coding/system (obs_performer_identifier_type_system)
          COALESCE(db.to_char_immutable(obs_performer_identifier_type_version), '#NULL#') || '|||' || -- hash from: performer/identifier/type/coding/version (obs_performer_identifier_type_version)
          COALESCE(db.to_char_immutable(obs_performer_identifier_type_code), '#NULL#') || '|||' || -- hash from: performer/identifier/type/coding/code (obs_performer_identifier_type_code)
          COALESCE(db.to_char_immutable(obs_performer_identifier_type_display), '#NULL#') || '|||' || -- hash from: performer/identifier/type/coding/display (obs_performer_identifier_type_display)
          COALESCE(db.to_char_immutable(obs_performer_identifier_type_text), '#NULL#') || '|||' || -- hash from: performer/identifier/type/text (obs_performer_identifier_type_text)
          COALESCE(db.to_char_immutable(obs_performer_identifier_system), '#NULL#') || '|||' || -- hash from: performer/identifier/system (obs_performer_identifier_system)
          COALESCE(db.to_char_immutable(obs_performer_identifier_value), '#NULL#') || '|||' || -- hash from: performer/identifier/value (obs_performer_identifier_value)
          COALESCE(db.to_char_immutable(obs_performer_display), '#NULL#') || '|||' || -- hash from: performer/display (obs_performer_display)
          COALESCE(db.to_char_immutable(obs_referencerange_low_value), '#NULL#') || '|||' || -- hash from: referenceRange/low/value (obs_referencerange_low_value)
          COALESCE(db.to_char_immutable(obs_referencerange_low_unit), '#NULL#') || '|||' || -- hash from: referenceRange/low/unit (obs_referencerange_low_unit)
          COALESCE(db.to_char_immutable(obs_referencerange_low_system), '#NULL#') || '|||' || -- hash from: referenceRange/low/system (obs_referencerange_low_system)
          COALESCE(db.to_char_immutable(obs_referencerange_low_code), '#NULL#') || '|||' || -- hash from: referenceRange/low/code (obs_referencerange_low_code)
          COALESCE(db.to_char_immutable(obs_referencerange_high_value), '#NULL#') || '|||' || -- hash from: referenceRange/high/value (obs_referencerange_high_value)
          COALESCE(db.to_char_immutable(obs_referencerange_high_unit), '#NULL#') || '|||' || -- hash from: referenceRange/high/unit (obs_referencerange_high_unit)
          COALESCE(db.to_char_immutable(obs_referencerange_high_system), '#NULL#') || '|||' || -- hash from: referenceRange/high/system (obs_referencerange_high_system)
          COALESCE(db.to_char_immutable(obs_referencerange_high_code), '#NULL#') || '|||' || -- hash from: referenceRange/high/code (obs_referencerange_high_code)
          COALESCE(db.to_char_immutable(obs_referencerange_type_system), '#NULL#') || '|||' || -- hash from: referenceRange/type/coding/system (obs_referencerange_type_system)
          COALESCE(db.to_char_immutable(obs_referencerange_type_version), '#NULL#') || '|||' || -- hash from: referenceRange/type/coding/version (obs_referencerange_type_version)
          COALESCE(db.to_char_immutable(obs_referencerange_type_code), '#NULL#') || '|||' || -- hash from: referenceRange/type/coding/code (obs_referencerange_type_code)
          COALESCE(db.to_char_immutable(obs_referencerange_type_display), '#NULL#') || '|||' || -- hash from: referenceRange/type/coding/display (obs_referencerange_type_display)
          COALESCE(db.to_char_immutable(obs_referencerange_type_text), '#NULL#') || '|||' || -- hash from: referenceRange/type/text (obs_referencerange_type_text)
          COALESCE(db.to_char_immutable(obs_referencerange_appliesto_system), '#NULL#') || '|||' || -- hash from: referenceRange/appliesTo/coding/system (obs_referencerange_appliesto_system)
          COALESCE(db.to_char_immutable(obs_referencerange_appliesto_version), '#NULL#') || '|||' || -- hash from: referenceRange/appliesTo/coding/version (obs_referencerange_appliesto_version)
          COALESCE(db.to_char_immutable(obs_referencerange_appliesto_code), '#NULL#') || '|||' || -- hash from: referenceRange/appliesTo/coding/code (obs_referencerange_appliesto_code)
          COALESCE(db.to_char_immutable(obs_referencerange_appliesto_display), '#NULL#') || '|||' || -- hash from: referenceRange/appliesTo/coding/display (obs_referencerange_appliesto_display)
          COALESCE(db.to_char_immutable(obs_referencerange_appliesto_text), '#NULL#') || '|||' || -- hash from: referenceRange/appliesTo/text (obs_referencerange_appliesto_text)
          COALESCE(db.to_char_immutable(obs_referencerange_age_low_value), '#NULL#') || '|||' || -- hash from: referenceRange/age/low/value (obs_referencerange_age_low_value)
          COALESCE(db.to_char_immutable(obs_referencerange_age_low_unit), '#NULL#') || '|||' || -- hash from: referenceRange/age/low/unit (obs_referencerange_age_low_unit)
          COALESCE(db.to_char_immutable(obs_referencerange_age_low_system), '#NULL#') || '|||' || -- hash from: referenceRange/age/low/system (obs_referencerange_age_low_system)
          COALESCE(db.to_char_immutable(obs_referencerange_age_low_code), '#NULL#') || '|||' || -- hash from: referenceRange/age/low/code (obs_referencerange_age_low_code)
          COALESCE(db.to_char_immutable(obs_referencerange_age_high_value), '#NULL#') || '|||' || -- hash from: referenceRange/age/high/value (obs_referencerange_age_high_value)
          COALESCE(db.to_char_immutable(obs_referencerange_age_high_unit), '#NULL#') || '|||' || -- hash from: referenceRange/age/high/unit (obs_referencerange_age_high_unit)
          COALESCE(db.to_char_immutable(obs_referencerange_age_high_system), '#NULL#') || '|||' || -- hash from: referenceRange/age/high/system (obs_referencerange_age_high_system)
          COALESCE(db.to_char_immutable(obs_referencerange_age_high_code), '#NULL#') || '|||' || -- hash from: referenceRange/age/high/code (obs_referencerange_age_high_code)
          COALESCE(db.to_char_immutable(obs_referencerange_text), '#NULL#') || '|||' || -- hash from: referenceRange/text (obs_referencerange_text)
          COALESCE(db.to_char_immutable(obs_hasmember_ref), '#NULL#') || '|||' || -- hash from: hasMember/reference (obs_hasmember_ref)
          COALESCE(db.to_char_immutable(obs_hasmember_type), '#NULL#') || '|||' || -- hash from: hasMember/type (obs_hasmember_type)
          COALESCE(db.to_char_immutable(obs_hasmember_identifier_use), '#NULL#') || '|||' || -- hash from: hasMember/identifier/use (obs_hasmember_identifier_use)
          COALESCE(db.to_char_immutable(obs_hasmember_identifier_type_system), '#NULL#') || '|||' || -- hash from: hasMember/identifier/type/coding/system (obs_hasmember_identifier_type_system)
          COALESCE(db.to_char_immutable(obs_hasmember_identifier_type_version), '#NULL#') || '|||' || -- hash from: hasMember/identifier/type/coding/version (obs_hasmember_identifier_type_version)
          COALESCE(db.to_char_immutable(obs_hasmember_identifier_type_code), '#NULL#') || '|||' || -- hash from: hasMember/identifier/type/coding/code (obs_hasmember_identifier_type_code)
          COALESCE(db.to_char_immutable(obs_hasmember_identifier_type_display), '#NULL#') || '|||' || -- hash from: hasMember/identifier/type/coding/display (obs_hasmember_identifier_type_display)
          COALESCE(db.to_char_immutable(obs_hasmember_identifier_type_text), '#NULL#') || '|||' || -- hash from: hasMember/identifier/type/text (obs_hasmember_identifier_type_text)
          COALESCE(db.to_char_immutable(obs_hasmember_identifier_system), '#NULL#') || '|||' || -- hash from: hasMember/identifier/system (obs_hasmember_identifier_system)
          COALESCE(db.to_char_immutable(obs_hasmember_identifier_value), '#NULL#') || '|||' || -- hash from: hasMember/identifier/value (obs_hasmember_identifier_value)
          COALESCE(db.to_char_immutable(obs_hasmember_display), '#NULL#') || '|||' || -- hash from: hasMember/display (obs_hasmember_display)
                 '#'
               )
            ) STORED; -- Column for hash value for comparing FHIR data - collion check in second step hash_index_col
        END IF; -- column
    END IF; -- Table
END
$$;
-- Table "diagnosticreport" in schema "cds2db_in"
-------------------------------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS cds2db_in.diagnosticreport (
  diagnosticreport_id int PRIMARY KEY DEFAULT nextval('db.db_seq') -- Primary key of the entity
);

DO
$$
DECLARE
    IF EXISTS ( -- Table exists
        SELECT 1 FROM information_schema.columns 
        WHERE table_schema = 'cds2db_in' AND table_name = 'diagnosticreport'
    ) THEN
        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'diagnosticreport'
            AND column_name = 'input_datetime'
        ) THEN
            ALTER TABLE cds2db_in.diagnosticreport ADD diagnosticreport_raw_id int NOT NULL; -- Primary key of the corresponding raw table
            NULL;
        END IF; -- column

-- Organizational items - fixed for each database table -----------------------------------------
        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'diagnosticreport'
            AND column_name = 'input_datetime'
        ) THEN
            ALTER TABLE cds2db_in.diagnosticreport ADD input_datetime TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP; -- Time at which data record was created
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'diagnosticreport'
            AND column_name = 'last_check_datetime'
        ) THEN
            ALTER TABLE cds2db_in.diagnosticreport ADD last_check_datetime TIMESTAMP DEFAULT NULL; -- Time at which data record was last checked
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'diagnosticreport'
            AND column_name = 'current_dataset_status'
        ) THEN
            ALTER TABLE cds2db_in.diagnosticreport ADD current_dataset_status VARCHAR DEFAULT 'input'; -- Processing status of the data record
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'diagnosticreport'
            AND column_name = 'input_processing_nr'
        ) THEN
            ALTER TABLE cds2db_in.diagnosticreport ADD input_processing_nr INT; -- (First) Processing number of the data record
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'diagnosticreport'
            AND column_name = 'last_processing_nr'
        ) THEN
            ALTER TABLE cds2db_in.diagnosticreport ADD last_processing_nr INT; -- Last processing number of the data record
        END IF; -- column

-- Data-leading columns -------------------------------------------------------------------------
        IF NOT EXISTS ( -- column not exists (diagrep_id)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'diagnosticreport'
            AND column_name = 'diagrep_id'
        ) THEN
            ALTER TABLE cds2db_in.diagnosticreport ADD diagrep_id varchar;   -- id (varchar)
        END IF; -- column (diagrep_id)
        IF NOT EXISTS ( -- column not exists (diagrep_meta_versionid)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'diagnosticreport'
            AND column_name = 'diagrep_meta_versionid'
        ) THEN
            ALTER TABLE cds2db_in.diagnosticreport ADD diagrep_meta_versionid varchar;   -- meta/versionId (varchar)
        END IF; -- column (diagrep_meta_versionid)
        IF NOT EXISTS ( -- column not exists (diagrep_meta_lastupdated)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'diagnosticreport'
            AND column_name = 'diagrep_meta_lastupdated'
        ) THEN
            ALTER TABLE cds2db_in.diagnosticreport ADD diagrep_meta_lastupdated timestamp;   -- meta/lastUpdated (timestamp)
        END IF; -- column (diagrep_meta_lastupdated)
        IF NOT EXISTS ( -- column not exists (diagrep_meta_profile)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'diagnosticreport'
            AND column_name = 'diagrep_meta_profile'
        ) THEN
            ALTER TABLE cds2db_in.diagnosticreport ADD diagrep_meta_profile varchar;   -- meta/profile (varchar)
        END IF; -- column (diagrep_meta_profile)
        IF NOT EXISTS ( -- column not exists (diagrep_identifier_use)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'diagnosticreport'
            AND column_name = 'diagrep_identifier_use'
        ) THEN
            ALTER TABLE cds2db_in.diagnosticreport ADD diagrep_identifier_use varchar;   -- identifier/use (varchar)
        END IF; -- column (diagrep_identifier_use)
        IF NOT EXISTS ( -- column not exists (diagrep_identifier_type_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'diagnosticreport'
            AND column_name = 'diagrep_identifier_type_system'
        ) THEN
            ALTER TABLE cds2db_in.diagnosticreport ADD diagrep_identifier_type_system varchar;   -- identifier/type/coding/system (varchar)
        END IF; -- column (diagrep_identifier_type_system)
        IF NOT EXISTS ( -- column not exists (diagrep_identifier_type_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'diagnosticreport'
            AND column_name = 'diagrep_identifier_type_version'
        ) THEN
            ALTER TABLE cds2db_in.diagnosticreport ADD diagrep_identifier_type_version varchar;   -- identifier/type/coding/version (varchar)
        END IF; -- column (diagrep_identifier_type_version)
        IF NOT EXISTS ( -- column not exists (diagrep_identifier_type_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'diagnosticreport'
            AND column_name = 'diagrep_identifier_type_code'
        ) THEN
            ALTER TABLE cds2db_in.diagnosticreport ADD diagrep_identifier_type_code varchar;   -- identifier/type/coding/code (varchar)
        END IF; -- column (diagrep_identifier_type_code)
        IF NOT EXISTS ( -- column not exists (diagrep_identifier_type_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'diagnosticreport'
            AND column_name = 'diagrep_identifier_type_display'
        ) THEN
            ALTER TABLE cds2db_in.diagnosticreport ADD diagrep_identifier_type_display varchar;   -- identifier/type/coding/display (varchar)
        END IF; -- column (diagrep_identifier_type_display)
        IF NOT EXISTS ( -- column not exists (diagrep_identifier_type_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'diagnosticreport'
            AND column_name = 'diagrep_identifier_type_text'
        ) THEN
            ALTER TABLE cds2db_in.diagnosticreport ADD diagrep_identifier_type_text varchar;   -- identifier/type/text (varchar)
        END IF; -- column (diagrep_identifier_type_text)
        IF NOT EXISTS ( -- column not exists (diagrep_identifier_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'diagnosticreport'
            AND column_name = 'diagrep_identifier_system'
        ) THEN
            ALTER TABLE cds2db_in.diagnosticreport ADD diagrep_identifier_system varchar;   -- identifier/system (varchar)
        END IF; -- column (diagrep_identifier_system)
        IF NOT EXISTS ( -- column not exists (diagrep_identifier_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'diagnosticreport'
            AND column_name = 'diagrep_identifier_value'
        ) THEN
            ALTER TABLE cds2db_in.diagnosticreport ADD diagrep_identifier_value varchar;   -- identifier/value (varchar)
        END IF; -- column (diagrep_identifier_value)
        IF NOT EXISTS ( -- column not exists (diagrep_identifier_start)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'diagnosticreport'
            AND column_name = 'diagrep_identifier_start'
        ) THEN
            ALTER TABLE cds2db_in.diagnosticreport ADD diagrep_identifier_start timestamp;   -- identifier/start (timestamp)
        END IF; -- column (diagrep_identifier_start)
        IF NOT EXISTS ( -- column not exists (diagrep_identifier_end)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'diagnosticreport'
            AND column_name = 'diagrep_identifier_end'
        ) THEN
            ALTER TABLE cds2db_in.diagnosticreport ADD diagrep_identifier_end timestamp;   -- identifier/end (timestamp)
        END IF; -- column (diagrep_identifier_end)
        IF NOT EXISTS ( -- column not exists (diagrep_encounter_ref)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'diagnosticreport'
            AND column_name = 'diagrep_encounter_ref'
        ) THEN
            ALTER TABLE cds2db_in.diagnosticreport ADD diagrep_encounter_ref varchar;   -- encounter/reference (varchar)
        END IF; -- column (diagrep_encounter_ref)
        IF NOT EXISTS ( -- column not exists (diagrep_patient_ref)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'diagnosticreport'
            AND column_name = 'diagrep_patient_ref'
        ) THEN
            ALTER TABLE cds2db_in.diagnosticreport ADD diagrep_patient_ref varchar;   -- subject/reference (varchar)
        END IF; -- column (diagrep_patient_ref)
        IF NOT EXISTS ( -- column not exists (diagrep_partof_ref)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'diagnosticreport'
            AND column_name = 'diagrep_partof_ref'
        ) THEN
            ALTER TABLE cds2db_in.diagnosticreport ADD diagrep_partof_ref varchar;   -- partOf/reference (varchar)
        END IF; -- column (diagrep_partof_ref)
        IF NOT EXISTS ( -- column not exists (diagrep_result_ref)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'diagnosticreport'
            AND column_name = 'diagrep_result_ref'
        ) THEN
            ALTER TABLE cds2db_in.diagnosticreport ADD diagrep_result_ref varchar;   -- result/reference (varchar)
        END IF; -- column (diagrep_result_ref)
        IF NOT EXISTS ( -- column not exists (diagrep_basedon_ref)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'diagnosticreport'
            AND column_name = 'diagrep_basedon_ref'
        ) THEN
            ALTER TABLE cds2db_in.diagnosticreport ADD diagrep_basedon_ref varchar;   -- basedOn/reference (varchar)
        END IF; -- column (diagrep_basedon_ref)
        IF NOT EXISTS ( -- column not exists (diagrep_status)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'diagnosticreport'
            AND column_name = 'diagrep_status'
        ) THEN
            ALTER TABLE cds2db_in.diagnosticreport ADD diagrep_status varchar;   -- status (varchar)
        END IF; -- column (diagrep_status)
        IF NOT EXISTS ( -- column not exists (diagrep_category_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'diagnosticreport'
            AND column_name = 'diagrep_category_system'
        ) THEN
            ALTER TABLE cds2db_in.diagnosticreport ADD diagrep_category_system varchar;   -- category/coding/system (varchar)
        END IF; -- column (diagrep_category_system)
        IF NOT EXISTS ( -- column not exists (diagrep_category_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'diagnosticreport'
            AND column_name = 'diagrep_category_version'
        ) THEN
            ALTER TABLE cds2db_in.diagnosticreport ADD diagrep_category_version varchar;   -- category/coding/version (varchar)
        END IF; -- column (diagrep_category_version)
        IF NOT EXISTS ( -- column not exists (diagrep_category_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'diagnosticreport'
            AND column_name = 'diagrep_category_code'
        ) THEN
            ALTER TABLE cds2db_in.diagnosticreport ADD diagrep_category_code varchar;   -- category/coding/code (varchar)
        END IF; -- column (diagrep_category_code)
        IF NOT EXISTS ( -- column not exists (diagrep_category_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'diagnosticreport'
            AND column_name = 'diagrep_category_display'
        ) THEN
            ALTER TABLE cds2db_in.diagnosticreport ADD diagrep_category_display varchar;   -- category/coding/display (varchar)
        END IF; -- column (diagrep_category_display)
        IF NOT EXISTS ( -- column not exists (diagrep_category_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'diagnosticreport'
            AND column_name = 'diagrep_category_text'
        ) THEN
            ALTER TABLE cds2db_in.diagnosticreport ADD diagrep_category_text varchar;   -- category/text (varchar)
        END IF; -- column (diagrep_category_text)
        IF NOT EXISTS ( -- column not exists (diagrep_code_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'diagnosticreport'
            AND column_name = 'diagrep_code_system'
        ) THEN
            ALTER TABLE cds2db_in.diagnosticreport ADD diagrep_code_system varchar;   -- code/coding/system (varchar)
        END IF; -- column (diagrep_code_system)
        IF NOT EXISTS ( -- column not exists (diagrep_code_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'diagnosticreport'
            AND column_name = 'diagrep_code_version'
        ) THEN
            ALTER TABLE cds2db_in.diagnosticreport ADD diagrep_code_version varchar;   -- code/coding/version (varchar)
        END IF; -- column (diagrep_code_version)
        IF NOT EXISTS ( -- column not exists (diagrep_code_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'diagnosticreport'
            AND column_name = 'diagrep_code_code'
        ) THEN
            ALTER TABLE cds2db_in.diagnosticreport ADD diagrep_code_code varchar;   -- code/coding/code (varchar)
        END IF; -- column (diagrep_code_code)
        IF NOT EXISTS ( -- column not exists (diagrep_code_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'diagnosticreport'
            AND column_name = 'diagrep_code_display'
        ) THEN
            ALTER TABLE cds2db_in.diagnosticreport ADD diagrep_code_display varchar;   -- code/coding/display (varchar)
        END IF; -- column (diagrep_code_display)
        IF NOT EXISTS ( -- column not exists (diagrep_code_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'diagnosticreport'
            AND column_name = 'diagrep_code_text'
        ) THEN
            ALTER TABLE cds2db_in.diagnosticreport ADD diagrep_code_text varchar;   -- code/text (varchar)
        END IF; -- column (diagrep_code_text)
        IF NOT EXISTS ( -- column not exists (diagrep_effectivedatetime)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'diagnosticreport'
            AND column_name = 'diagrep_effectivedatetime'
        ) THEN
            ALTER TABLE cds2db_in.diagnosticreport ADD diagrep_effectivedatetime timestamp;   -- effectiveDateTime (timestamp)
        END IF; -- column (diagrep_effectivedatetime)
        IF NOT EXISTS ( -- column not exists (diagrep_issued)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'diagnosticreport'
            AND column_name = 'diagrep_issued'
        ) THEN
            ALTER TABLE cds2db_in.diagnosticreport ADD diagrep_issued timestamp;   -- issued (timestamp)
        END IF; -- column (diagrep_issued)
        IF NOT EXISTS ( -- column not exists (diagrep_performer_ref)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'diagnosticreport'
            AND column_name = 'diagrep_performer_ref'
        ) THEN
            ALTER TABLE cds2db_in.diagnosticreport ADD diagrep_performer_ref varchar;   -- performer/reference (varchar)
        END IF; -- column (diagrep_performer_ref)
        IF NOT EXISTS ( -- column not exists (diagrep_performer_type)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'diagnosticreport'
            AND column_name = 'diagrep_performer_type'
        ) THEN
            ALTER TABLE cds2db_in.diagnosticreport ADD diagrep_performer_type varchar;   -- performer/type (varchar)
        END IF; -- column (diagrep_performer_type)
        IF NOT EXISTS ( -- column not exists (diagrep_performer_identifier_use)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'diagnosticreport'
            AND column_name = 'diagrep_performer_identifier_use'
        ) THEN
            ALTER TABLE cds2db_in.diagnosticreport ADD diagrep_performer_identifier_use varchar;   -- performer/identifier/use (varchar)
        END IF; -- column (diagrep_performer_identifier_use)
        IF NOT EXISTS ( -- column not exists (diagrep_performer_identifier_type_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'diagnosticreport'
            AND column_name = 'diagrep_performer_identifier_type_system'
        ) THEN
            ALTER TABLE cds2db_in.diagnosticreport ADD diagrep_performer_identifier_type_system varchar;   -- performer/identifier/type/coding/system (varchar)
        END IF; -- column (diagrep_performer_identifier_type_system)
        IF NOT EXISTS ( -- column not exists (diagrep_performer_identifier_type_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'diagnosticreport'
            AND column_name = 'diagrep_performer_identifier_type_version'
        ) THEN
            ALTER TABLE cds2db_in.diagnosticreport ADD diagrep_performer_identifier_type_version varchar;   -- performer/identifier/type/coding/version (varchar)
        END IF; -- column (diagrep_performer_identifier_type_version)
        IF NOT EXISTS ( -- column not exists (diagrep_performer_identifier_type_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'diagnosticreport'
            AND column_name = 'diagrep_performer_identifier_type_code'
        ) THEN
            ALTER TABLE cds2db_in.diagnosticreport ADD diagrep_performer_identifier_type_code varchar;   -- performer/identifier/type/coding/code (varchar)
        END IF; -- column (diagrep_performer_identifier_type_code)
        IF NOT EXISTS ( -- column not exists (diagrep_performer_identifier_type_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'diagnosticreport'
            AND column_name = 'diagrep_performer_identifier_type_display'
        ) THEN
            ALTER TABLE cds2db_in.diagnosticreport ADD diagrep_performer_identifier_type_display varchar;   -- performer/identifier/type/coding/display (varchar)
        END IF; -- column (diagrep_performer_identifier_type_display)
        IF NOT EXISTS ( -- column not exists (diagrep_performer_identifier_type_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'diagnosticreport'
            AND column_name = 'diagrep_performer_identifier_type_text'
        ) THEN
            ALTER TABLE cds2db_in.diagnosticreport ADD diagrep_performer_identifier_type_text varchar;   -- performer/identifier/type/text (varchar)
        END IF; -- column (diagrep_performer_identifier_type_text)
        IF NOT EXISTS ( -- column not exists (diagrep_performer_identifier_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'diagnosticreport'
            AND column_name = 'diagrep_performer_identifier_system'
        ) THEN
            ALTER TABLE cds2db_in.diagnosticreport ADD diagrep_performer_identifier_system varchar;   -- performer/identifier/system (varchar)
        END IF; -- column (diagrep_performer_identifier_system)
        IF NOT EXISTS ( -- column not exists (diagrep_performer_identifier_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'diagnosticreport'
            AND column_name = 'diagrep_performer_identifier_value'
        ) THEN
            ALTER TABLE cds2db_in.diagnosticreport ADD diagrep_performer_identifier_value varchar;   -- performer/identifier/value (varchar)
        END IF; -- column (diagrep_performer_identifier_value)
        IF NOT EXISTS ( -- column not exists (diagrep_performer_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'diagnosticreport'
            AND column_name = 'diagrep_performer_display'
        ) THEN
            ALTER TABLE cds2db_in.diagnosticreport ADD diagrep_performer_display varchar;   -- performer/display (varchar)
        END IF; -- column (diagrep_performer_display)
        IF NOT EXISTS ( -- column not exists (diagrep_conclusion)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'diagnosticreport'
            AND column_name = 'diagrep_conclusion'
        ) THEN
            ALTER TABLE cds2db_in.diagnosticreport ADD diagrep_conclusion varchar;   -- conclusion (varchar)
        END IF; -- column (diagrep_conclusion)
        IF NOT EXISTS ( -- column not exists (diagrep_conclusioncode_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'diagnosticreport'
            AND column_name = 'diagrep_conclusioncode_system'
        ) THEN
            ALTER TABLE cds2db_in.diagnosticreport ADD diagrep_conclusioncode_system varchar;   -- conclusionCode/coding/system (varchar)
        END IF; -- column (diagrep_conclusioncode_system)
        IF NOT EXISTS ( -- column not exists (diagrep_conclusioncode_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'diagnosticreport'
            AND column_name = 'diagrep_conclusioncode_version'
        ) THEN
            ALTER TABLE cds2db_in.diagnosticreport ADD diagrep_conclusioncode_version varchar;   -- conclusionCode/coding/version (varchar)
        END IF; -- column (diagrep_conclusioncode_version)
        IF NOT EXISTS ( -- column not exists (diagrep_conclusioncode_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'diagnosticreport'
            AND column_name = 'diagrep_conclusioncode_code'
        ) THEN
            ALTER TABLE cds2db_in.diagnosticreport ADD diagrep_conclusioncode_code varchar;   -- conclusionCode/coding/code (varchar)
        END IF; -- column (diagrep_conclusioncode_code)
        IF NOT EXISTS ( -- column not exists (diagrep_conclusioncode_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'diagnosticreport'
            AND column_name = 'diagrep_conclusioncode_display'
        ) THEN
            ALTER TABLE cds2db_in.diagnosticreport ADD diagrep_conclusioncode_display varchar;   -- conclusionCode/coding/display (varchar)
        END IF; -- column (diagrep_conclusioncode_display)
        IF NOT EXISTS ( -- column not exists (diagrep_conclusioncode_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'diagnosticreport'
            AND column_name = 'diagrep_conclusioncode_text'
        ) THEN
            ALTER TABLE cds2db_in.diagnosticreport ADD diagrep_conclusioncode_text varchar;   -- conclusionCode/text (varchar)
        END IF; -- column (diagrep_conclusioncode_text)

-- Hash column for comparison on data-bearing columns -------------------------------------------
        IF EXISTS ( -- column exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'diagnosticreport' AND column_name = 'hash_index_col'
        ) THEN
            IF NOT EXISTS ( -- column exists
                SELECT 1 FROM information_schema.columns WHERE table_schema = 'cds2db_in' AND table_name = 'diagnosticreport' AND column_name = 'hash_index_col'
                AND trim(replace(replace(generation_expression::TEXT,'(',''),')','')) != trim(replace(replace('
	         COALESCE(db.to_char_immutable(diagrep_id), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(diagrep_identifier_use), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(diagrep_identifier_type_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(diagrep_identifier_type_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(diagrep_identifier_type_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(diagrep_identifier_type_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(diagrep_identifier_type_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(diagrep_identifier_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(diagrep_identifier_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(diagrep_identifier_start), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(diagrep_identifier_end), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(diagrep_encounter_ref), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(diagrep_patient_ref), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(diagrep_partof_ref), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(diagrep_result_ref), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(diagrep_basedon_ref), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(diagrep_status), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(diagrep_category_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(diagrep_category_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(diagrep_category_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(diagrep_category_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(diagrep_category_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(diagrep_code_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(diagrep_code_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(diagrep_code_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(diagrep_code_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(diagrep_code_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(diagrep_effectivedatetime), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(diagrep_issued), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(diagrep_performer_ref), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(diagrep_performer_type), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(diagrep_performer_identifier_use), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(diagrep_performer_identifier_type_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(diagrep_performer_identifier_type_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(diagrep_performer_identifier_type_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(diagrep_performer_identifier_type_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(diagrep_performer_identifier_type_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(diagrep_performer_identifier_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(diagrep_performer_identifier_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(diagrep_performer_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(diagrep_conclusion), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(diagrep_conclusioncode_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(diagrep_conclusioncode_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(diagrep_conclusioncode_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(diagrep_conclusioncode_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(diagrep_conclusioncode_text), ''#NULL#'') || ''|||'' ||''#''
                ','(',''),')',''))
            ) THEN
            -- Delete the old hash column so that a new one can be created
            ALTER TABLE cds2db_in.diagnosticreport DROP COLUMN hash_index_col;

            -- Creating the hash column
            ALTER TABLE cds2db_in.diagnosticreport ADD
            hash_index_col TEXT GENERATED ALWAYS AS (
            md5(
	         COALESCE(db.to_char_immutable(diagrep_id), '#NULL#') || '|||' || -- hash from: id (diagrep_id)
          COALESCE(db.to_char_immutable(diagrep_identifier_use), '#NULL#') || '|||' || -- hash from: identifier/use (diagrep_identifier_use)
          COALESCE(db.to_char_immutable(diagrep_identifier_type_system), '#NULL#') || '|||' || -- hash from: identifier/type/coding/system (diagrep_identifier_type_system)
          COALESCE(db.to_char_immutable(diagrep_identifier_type_version), '#NULL#') || '|||' || -- hash from: identifier/type/coding/version (diagrep_identifier_type_version)
          COALESCE(db.to_char_immutable(diagrep_identifier_type_code), '#NULL#') || '|||' || -- hash from: identifier/type/coding/code (diagrep_identifier_type_code)
          COALESCE(db.to_char_immutable(diagrep_identifier_type_display), '#NULL#') || '|||' || -- hash from: identifier/type/coding/display (diagrep_identifier_type_display)
          COALESCE(db.to_char_immutable(diagrep_identifier_type_text), '#NULL#') || '|||' || -- hash from: identifier/type/text (diagrep_identifier_type_text)
          COALESCE(db.to_char_immutable(diagrep_identifier_system), '#NULL#') || '|||' || -- hash from: identifier/system (diagrep_identifier_system)
          COALESCE(db.to_char_immutable(diagrep_identifier_value), '#NULL#') || '|||' || -- hash from: identifier/value (diagrep_identifier_value)
          COALESCE(db.to_char_immutable(diagrep_identifier_start), '#NULL#') || '|||' || -- hash from: identifier/start (diagrep_identifier_start)
          COALESCE(db.to_char_immutable(diagrep_identifier_end), '#NULL#') || '|||' || -- hash from: identifier/end (diagrep_identifier_end)
          COALESCE(db.to_char_immutable(diagrep_encounter_ref), '#NULL#') || '|||' || -- hash from: encounter/reference (diagrep_encounter_ref)
          COALESCE(db.to_char_immutable(diagrep_patient_ref), '#NULL#') || '|||' || -- hash from: subject/reference (diagrep_patient_ref)
          COALESCE(db.to_char_immutable(diagrep_partof_ref), '#NULL#') || '|||' || -- hash from: partOf/reference (diagrep_partof_ref)
          COALESCE(db.to_char_immutable(diagrep_result_ref), '#NULL#') || '|||' || -- hash from: result/reference (diagrep_result_ref)
          COALESCE(db.to_char_immutable(diagrep_basedon_ref), '#NULL#') || '|||' || -- hash from: basedOn/reference (diagrep_basedon_ref)
          COALESCE(db.to_char_immutable(diagrep_status), '#NULL#') || '|||' || -- hash from: status (diagrep_status)
          COALESCE(db.to_char_immutable(diagrep_category_system), '#NULL#') || '|||' || -- hash from: category/coding/system (diagrep_category_system)
          COALESCE(db.to_char_immutable(diagrep_category_version), '#NULL#') || '|||' || -- hash from: category/coding/version (diagrep_category_version)
          COALESCE(db.to_char_immutable(diagrep_category_code), '#NULL#') || '|||' || -- hash from: category/coding/code (diagrep_category_code)
          COALESCE(db.to_char_immutable(diagrep_category_display), '#NULL#') || '|||' || -- hash from: category/coding/display (diagrep_category_display)
          COALESCE(db.to_char_immutable(diagrep_category_text), '#NULL#') || '|||' || -- hash from: category/text (diagrep_category_text)
          COALESCE(db.to_char_immutable(diagrep_code_system), '#NULL#') || '|||' || -- hash from: code/coding/system (diagrep_code_system)
          COALESCE(db.to_char_immutable(diagrep_code_version), '#NULL#') || '|||' || -- hash from: code/coding/version (diagrep_code_version)
          COALESCE(db.to_char_immutable(diagrep_code_code), '#NULL#') || '|||' || -- hash from: code/coding/code (diagrep_code_code)
          COALESCE(db.to_char_immutable(diagrep_code_display), '#NULL#') || '|||' || -- hash from: code/coding/display (diagrep_code_display)
          COALESCE(db.to_char_immutable(diagrep_code_text), '#NULL#') || '|||' || -- hash from: code/text (diagrep_code_text)
          COALESCE(db.to_char_immutable(diagrep_effectivedatetime), '#NULL#') || '|||' || -- hash from: effectiveDateTime (diagrep_effectivedatetime)
          COALESCE(db.to_char_immutable(diagrep_issued), '#NULL#') || '|||' || -- hash from: issued (diagrep_issued)
          COALESCE(db.to_char_immutable(diagrep_performer_ref), '#NULL#') || '|||' || -- hash from: performer/reference (diagrep_performer_ref)
          COALESCE(db.to_char_immutable(diagrep_performer_type), '#NULL#') || '|||' || -- hash from: performer/type (diagrep_performer_type)
          COALESCE(db.to_char_immutable(diagrep_performer_identifier_use), '#NULL#') || '|||' || -- hash from: performer/identifier/use (diagrep_performer_identifier_use)
          COALESCE(db.to_char_immutable(diagrep_performer_identifier_type_system), '#NULL#') || '|||' || -- hash from: performer/identifier/type/coding/system (diagrep_performer_identifier_type_system)
          COALESCE(db.to_char_immutable(diagrep_performer_identifier_type_version), '#NULL#') || '|||' || -- hash from: performer/identifier/type/coding/version (diagrep_performer_identifier_type_version)
          COALESCE(db.to_char_immutable(diagrep_performer_identifier_type_code), '#NULL#') || '|||' || -- hash from: performer/identifier/type/coding/code (diagrep_performer_identifier_type_code)
          COALESCE(db.to_char_immutable(diagrep_performer_identifier_type_display), '#NULL#') || '|||' || -- hash from: performer/identifier/type/coding/display (diagrep_performer_identifier_type_display)
          COALESCE(db.to_char_immutable(diagrep_performer_identifier_type_text), '#NULL#') || '|||' || -- hash from: performer/identifier/type/text (diagrep_performer_identifier_type_text)
          COALESCE(db.to_char_immutable(diagrep_performer_identifier_system), '#NULL#') || '|||' || -- hash from: performer/identifier/system (diagrep_performer_identifier_system)
          COALESCE(db.to_char_immutable(diagrep_performer_identifier_value), '#NULL#') || '|||' || -- hash from: performer/identifier/value (diagrep_performer_identifier_value)
          COALESCE(db.to_char_immutable(diagrep_performer_display), '#NULL#') || '|||' || -- hash from: performer/display (diagrep_performer_display)
          COALESCE(db.to_char_immutable(diagrep_conclusion), '#NULL#') || '|||' || -- hash from: conclusion (diagrep_conclusion)
          COALESCE(db.to_char_immutable(diagrep_conclusioncode_system), '#NULL#') || '|||' || -- hash from: conclusionCode/coding/system (diagrep_conclusioncode_system)
          COALESCE(db.to_char_immutable(diagrep_conclusioncode_version), '#NULL#') || '|||' || -- hash from: conclusionCode/coding/version (diagrep_conclusioncode_version)
          COALESCE(db.to_char_immutable(diagrep_conclusioncode_code), '#NULL#') || '|||' || -- hash from: conclusionCode/coding/code (diagrep_conclusioncode_code)
          COALESCE(db.to_char_immutable(diagrep_conclusioncode_display), '#NULL#') || '|||' || -- hash from: conclusionCode/coding/display (diagrep_conclusioncode_display)
          COALESCE(db.to_char_immutable(diagrep_conclusioncode_text), '#NULL#') || '|||' || -- hash from: conclusionCode/text (diagrep_conclusioncode_text)
                 '#'
               )
            ) STORED; -- Column for hash value for comparing FHIR data - collion check in second step hash_index_col
            END IF; -- currend hash definition
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'diagnosticreport'
            AND column_name = 'hash_index_col'
        ) THEN
            -- Creating the hash column
            ALTER TABLE cds2db_in.diagnosticreport ADD
            hash_index_col TEXT GENERATED ALWAYS AS (
            md5(
	         COALESCE(db.to_char_immutable(diagrep_id), '#NULL#') || '|||' || -- hash from: id (diagrep_id)
          COALESCE(db.to_char_immutable(diagrep_identifier_use), '#NULL#') || '|||' || -- hash from: identifier/use (diagrep_identifier_use)
          COALESCE(db.to_char_immutable(diagrep_identifier_type_system), '#NULL#') || '|||' || -- hash from: identifier/type/coding/system (diagrep_identifier_type_system)
          COALESCE(db.to_char_immutable(diagrep_identifier_type_version), '#NULL#') || '|||' || -- hash from: identifier/type/coding/version (diagrep_identifier_type_version)
          COALESCE(db.to_char_immutable(diagrep_identifier_type_code), '#NULL#') || '|||' || -- hash from: identifier/type/coding/code (diagrep_identifier_type_code)
          COALESCE(db.to_char_immutable(diagrep_identifier_type_display), '#NULL#') || '|||' || -- hash from: identifier/type/coding/display (diagrep_identifier_type_display)
          COALESCE(db.to_char_immutable(diagrep_identifier_type_text), '#NULL#') || '|||' || -- hash from: identifier/type/text (diagrep_identifier_type_text)
          COALESCE(db.to_char_immutable(diagrep_identifier_system), '#NULL#') || '|||' || -- hash from: identifier/system (diagrep_identifier_system)
          COALESCE(db.to_char_immutable(diagrep_identifier_value), '#NULL#') || '|||' || -- hash from: identifier/value (diagrep_identifier_value)
          COALESCE(db.to_char_immutable(diagrep_identifier_start), '#NULL#') || '|||' || -- hash from: identifier/start (diagrep_identifier_start)
          COALESCE(db.to_char_immutable(diagrep_identifier_end), '#NULL#') || '|||' || -- hash from: identifier/end (diagrep_identifier_end)
          COALESCE(db.to_char_immutable(diagrep_encounter_ref), '#NULL#') || '|||' || -- hash from: encounter/reference (diagrep_encounter_ref)
          COALESCE(db.to_char_immutable(diagrep_patient_ref), '#NULL#') || '|||' || -- hash from: subject/reference (diagrep_patient_ref)
          COALESCE(db.to_char_immutable(diagrep_partof_ref), '#NULL#') || '|||' || -- hash from: partOf/reference (diagrep_partof_ref)
          COALESCE(db.to_char_immutable(diagrep_result_ref), '#NULL#') || '|||' || -- hash from: result/reference (diagrep_result_ref)
          COALESCE(db.to_char_immutable(diagrep_basedon_ref), '#NULL#') || '|||' || -- hash from: basedOn/reference (diagrep_basedon_ref)
          COALESCE(db.to_char_immutable(diagrep_status), '#NULL#') || '|||' || -- hash from: status (diagrep_status)
          COALESCE(db.to_char_immutable(diagrep_category_system), '#NULL#') || '|||' || -- hash from: category/coding/system (diagrep_category_system)
          COALESCE(db.to_char_immutable(diagrep_category_version), '#NULL#') || '|||' || -- hash from: category/coding/version (diagrep_category_version)
          COALESCE(db.to_char_immutable(diagrep_category_code), '#NULL#') || '|||' || -- hash from: category/coding/code (diagrep_category_code)
          COALESCE(db.to_char_immutable(diagrep_category_display), '#NULL#') || '|||' || -- hash from: category/coding/display (diagrep_category_display)
          COALESCE(db.to_char_immutable(diagrep_category_text), '#NULL#') || '|||' || -- hash from: category/text (diagrep_category_text)
          COALESCE(db.to_char_immutable(diagrep_code_system), '#NULL#') || '|||' || -- hash from: code/coding/system (diagrep_code_system)
          COALESCE(db.to_char_immutable(diagrep_code_version), '#NULL#') || '|||' || -- hash from: code/coding/version (diagrep_code_version)
          COALESCE(db.to_char_immutable(diagrep_code_code), '#NULL#') || '|||' || -- hash from: code/coding/code (diagrep_code_code)
          COALESCE(db.to_char_immutable(diagrep_code_display), '#NULL#') || '|||' || -- hash from: code/coding/display (diagrep_code_display)
          COALESCE(db.to_char_immutable(diagrep_code_text), '#NULL#') || '|||' || -- hash from: code/text (diagrep_code_text)
          COALESCE(db.to_char_immutable(diagrep_effectivedatetime), '#NULL#') || '|||' || -- hash from: effectiveDateTime (diagrep_effectivedatetime)
          COALESCE(db.to_char_immutable(diagrep_issued), '#NULL#') || '|||' || -- hash from: issued (diagrep_issued)
          COALESCE(db.to_char_immutable(diagrep_performer_ref), '#NULL#') || '|||' || -- hash from: performer/reference (diagrep_performer_ref)
          COALESCE(db.to_char_immutable(diagrep_performer_type), '#NULL#') || '|||' || -- hash from: performer/type (diagrep_performer_type)
          COALESCE(db.to_char_immutable(diagrep_performer_identifier_use), '#NULL#') || '|||' || -- hash from: performer/identifier/use (diagrep_performer_identifier_use)
          COALESCE(db.to_char_immutable(diagrep_performer_identifier_type_system), '#NULL#') || '|||' || -- hash from: performer/identifier/type/coding/system (diagrep_performer_identifier_type_system)
          COALESCE(db.to_char_immutable(diagrep_performer_identifier_type_version), '#NULL#') || '|||' || -- hash from: performer/identifier/type/coding/version (diagrep_performer_identifier_type_version)
          COALESCE(db.to_char_immutable(diagrep_performer_identifier_type_code), '#NULL#') || '|||' || -- hash from: performer/identifier/type/coding/code (diagrep_performer_identifier_type_code)
          COALESCE(db.to_char_immutable(diagrep_performer_identifier_type_display), '#NULL#') || '|||' || -- hash from: performer/identifier/type/coding/display (diagrep_performer_identifier_type_display)
          COALESCE(db.to_char_immutable(diagrep_performer_identifier_type_text), '#NULL#') || '|||' || -- hash from: performer/identifier/type/text (diagrep_performer_identifier_type_text)
          COALESCE(db.to_char_immutable(diagrep_performer_identifier_system), '#NULL#') || '|||' || -- hash from: performer/identifier/system (diagrep_performer_identifier_system)
          COALESCE(db.to_char_immutable(diagrep_performer_identifier_value), '#NULL#') || '|||' || -- hash from: performer/identifier/value (diagrep_performer_identifier_value)
          COALESCE(db.to_char_immutable(diagrep_performer_display), '#NULL#') || '|||' || -- hash from: performer/display (diagrep_performer_display)
          COALESCE(db.to_char_immutable(diagrep_conclusion), '#NULL#') || '|||' || -- hash from: conclusion (diagrep_conclusion)
          COALESCE(db.to_char_immutable(diagrep_conclusioncode_system), '#NULL#') || '|||' || -- hash from: conclusionCode/coding/system (diagrep_conclusioncode_system)
          COALESCE(db.to_char_immutable(diagrep_conclusioncode_version), '#NULL#') || '|||' || -- hash from: conclusionCode/coding/version (diagrep_conclusioncode_version)
          COALESCE(db.to_char_immutable(diagrep_conclusioncode_code), '#NULL#') || '|||' || -- hash from: conclusionCode/coding/code (diagrep_conclusioncode_code)
          COALESCE(db.to_char_immutable(diagrep_conclusioncode_display), '#NULL#') || '|||' || -- hash from: conclusionCode/coding/display (diagrep_conclusioncode_display)
          COALESCE(db.to_char_immutable(diagrep_conclusioncode_text), '#NULL#') || '|||' || -- hash from: conclusionCode/text (diagrep_conclusioncode_text)
                 '#'
               )
            ) STORED; -- Column for hash value for comparing FHIR data - collion check in second step hash_index_col
        END IF; -- column
    END IF; -- Table
END
$$;
-- Table "servicerequest" in schema "cds2db_in"
-------------------------------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS cds2db_in.servicerequest (
  servicerequest_id int PRIMARY KEY DEFAULT nextval('db.db_seq') -- Primary key of the entity
);

DO
$$
DECLARE
    IF EXISTS ( -- Table exists
        SELECT 1 FROM information_schema.columns 
        WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
    ) THEN
        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'input_datetime'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servicerequest_raw_id int NOT NULL; -- Primary key of the corresponding raw table
            NULL;
        END IF; -- column

-- Organizational items - fixed for each database table -----------------------------------------
        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'input_datetime'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD input_datetime TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP; -- Time at which data record was created
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'last_check_datetime'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD last_check_datetime TIMESTAMP DEFAULT NULL; -- Time at which data record was last checked
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'current_dataset_status'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD current_dataset_status VARCHAR DEFAULT 'input'; -- Processing status of the data record
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'input_processing_nr'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD input_processing_nr INT; -- (First) Processing number of the data record
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'last_processing_nr'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD last_processing_nr INT; -- Last processing number of the data record
        END IF; -- column

-- Data-leading columns -------------------------------------------------------------------------
        IF NOT EXISTS ( -- column not exists (servreq_id)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'servreq_id'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servreq_id varchar;   -- id (varchar)
        END IF; -- column (servreq_id)
        IF NOT EXISTS ( -- column not exists (servreq_meta_versionid)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'servreq_meta_versionid'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servreq_meta_versionid varchar;   -- meta/versionId (varchar)
        END IF; -- column (servreq_meta_versionid)
        IF NOT EXISTS ( -- column not exists (servreq_meta_lastupdated)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'servreq_meta_lastupdated'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servreq_meta_lastupdated timestamp;   -- meta/lastUpdated (timestamp)
        END IF; -- column (servreq_meta_lastupdated)
        IF NOT EXISTS ( -- column not exists (servreq_meta_profile)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'servreq_meta_profile'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servreq_meta_profile varchar;   -- meta/profile (varchar)
        END IF; -- column (servreq_meta_profile)
        IF NOT EXISTS ( -- column not exists (servreq_identifier_use)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'servreq_identifier_use'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servreq_identifier_use varchar;   -- identifier/use (varchar)
        END IF; -- column (servreq_identifier_use)
        IF NOT EXISTS ( -- column not exists (servreq_identifier_type_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'servreq_identifier_type_system'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servreq_identifier_type_system varchar;   -- identifier/type/coding/system (varchar)
        END IF; -- column (servreq_identifier_type_system)
        IF NOT EXISTS ( -- column not exists (servreq_identifier_type_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'servreq_identifier_type_version'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servreq_identifier_type_version varchar;   -- identifier/type/coding/version (varchar)
        END IF; -- column (servreq_identifier_type_version)
        IF NOT EXISTS ( -- column not exists (servreq_identifier_type_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'servreq_identifier_type_code'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servreq_identifier_type_code varchar;   -- identifier/type/coding/code (varchar)
        END IF; -- column (servreq_identifier_type_code)
        IF NOT EXISTS ( -- column not exists (servreq_identifier_type_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'servreq_identifier_type_display'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servreq_identifier_type_display varchar;   -- identifier/type/coding/display (varchar)
        END IF; -- column (servreq_identifier_type_display)
        IF NOT EXISTS ( -- column not exists (servreq_identifier_type_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'servreq_identifier_type_text'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servreq_identifier_type_text varchar;   -- identifier/type/text (varchar)
        END IF; -- column (servreq_identifier_type_text)
        IF NOT EXISTS ( -- column not exists (servreq_identifier_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'servreq_identifier_system'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servreq_identifier_system varchar;   -- identifier/system (varchar)
        END IF; -- column (servreq_identifier_system)
        IF NOT EXISTS ( -- column not exists (servreq_identifier_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'servreq_identifier_value'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servreq_identifier_value varchar;   -- identifier/value (varchar)
        END IF; -- column (servreq_identifier_value)
        IF NOT EXISTS ( -- column not exists (servreq_identifier_start)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'servreq_identifier_start'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servreq_identifier_start timestamp;   -- identifier/start (timestamp)
        END IF; -- column (servreq_identifier_start)
        IF NOT EXISTS ( -- column not exists (servreq_identifier_end)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'servreq_identifier_end'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servreq_identifier_end timestamp;   -- identifier/end (timestamp)
        END IF; -- column (servreq_identifier_end)
        IF NOT EXISTS ( -- column not exists (servreq_encounter_ref)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'servreq_encounter_ref'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servreq_encounter_ref varchar;   -- encounter/reference (varchar)
        END IF; -- column (servreq_encounter_ref)
        IF NOT EXISTS ( -- column not exists (servreq_patient_ref)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'servreq_patient_ref'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servreq_patient_ref varchar;   -- subject/reference (varchar)
        END IF; -- column (servreq_patient_ref)
        IF NOT EXISTS ( -- column not exists (servreq_basedon_ref)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'servreq_basedon_ref'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servreq_basedon_ref varchar;   -- basedOn/reference (varchar)
        END IF; -- column (servreq_basedon_ref)
        IF NOT EXISTS ( -- column not exists (servreq_basedon_type)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'servreq_basedon_type'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servreq_basedon_type varchar;   -- basedOn/type (varchar)
        END IF; -- column (servreq_basedon_type)
        IF NOT EXISTS ( -- column not exists (servreq_basedon_identifier_use)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'servreq_basedon_identifier_use'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servreq_basedon_identifier_use varchar;   -- basedOn/identifier/use (varchar)
        END IF; -- column (servreq_basedon_identifier_use)
        IF NOT EXISTS ( -- column not exists (servreq_basedon_identifier_type_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'servreq_basedon_identifier_type_system'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servreq_basedon_identifier_type_system varchar;   -- basedOn/identifier/type/coding/system (varchar)
        END IF; -- column (servreq_basedon_identifier_type_system)
        IF NOT EXISTS ( -- column not exists (servreq_basedon_identifier_type_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'servreq_basedon_identifier_type_version'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servreq_basedon_identifier_type_version varchar;   -- basedOn/identifier/type/coding/version (varchar)
        END IF; -- column (servreq_basedon_identifier_type_version)
        IF NOT EXISTS ( -- column not exists (servreq_basedon_identifier_type_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'servreq_basedon_identifier_type_code'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servreq_basedon_identifier_type_code varchar;   -- basedOn/identifier/type/coding/code (varchar)
        END IF; -- column (servreq_basedon_identifier_type_code)
        IF NOT EXISTS ( -- column not exists (servreq_basedon_identifier_type_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'servreq_basedon_identifier_type_display'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servreq_basedon_identifier_type_display varchar;   -- basedOn/identifier/type/coding/display (varchar)
        END IF; -- column (servreq_basedon_identifier_type_display)
        IF NOT EXISTS ( -- column not exists (servreq_basedon_identifier_type_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'servreq_basedon_identifier_type_text'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servreq_basedon_identifier_type_text varchar;   -- basedOn/identifier/type/text (varchar)
        END IF; -- column (servreq_basedon_identifier_type_text)
        IF NOT EXISTS ( -- column not exists (servreq_basedon_identifier_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'servreq_basedon_identifier_system'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servreq_basedon_identifier_system varchar;   -- basedOn/identifier/system (varchar)
        END IF; -- column (servreq_basedon_identifier_system)
        IF NOT EXISTS ( -- column not exists (servreq_basedon_identifier_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'servreq_basedon_identifier_value'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servreq_basedon_identifier_value varchar;   -- basedOn/identifier/value (varchar)
        END IF; -- column (servreq_basedon_identifier_value)
        IF NOT EXISTS ( -- column not exists (servreq_basedon_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'servreq_basedon_display'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servreq_basedon_display varchar;   -- basedOn/display (varchar)
        END IF; -- column (servreq_basedon_display)
        IF NOT EXISTS ( -- column not exists (servreq_status)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'servreq_status'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servreq_status varchar;   -- status (varchar)
        END IF; -- column (servreq_status)
        IF NOT EXISTS ( -- column not exists (servreq_intent)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'servreq_intent'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servreq_intent varchar;   -- intent (varchar)
        END IF; -- column (servreq_intent)
        IF NOT EXISTS ( -- column not exists (servreq_category_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'servreq_category_system'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servreq_category_system varchar;   -- category/coding/system (varchar)
        END IF; -- column (servreq_category_system)
        IF NOT EXISTS ( -- column not exists (servreq_category_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'servreq_category_version'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servreq_category_version varchar;   -- category/coding/version (varchar)
        END IF; -- column (servreq_category_version)
        IF NOT EXISTS ( -- column not exists (servreq_category_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'servreq_category_code'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servreq_category_code varchar;   -- category/coding/code (varchar)
        END IF; -- column (servreq_category_code)
        IF NOT EXISTS ( -- column not exists (servreq_category_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'servreq_category_display'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servreq_category_display varchar;   -- category/coding/display (varchar)
        END IF; -- column (servreq_category_display)
        IF NOT EXISTS ( -- column not exists (servreq_category_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'servreq_category_text'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servreq_category_text varchar;   -- category/text (varchar)
        END IF; -- column (servreq_category_text)
        IF NOT EXISTS ( -- column not exists (servreq_code_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'servreq_code_system'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servreq_code_system varchar;   -- code/coding/system (varchar)
        END IF; -- column (servreq_code_system)
        IF NOT EXISTS ( -- column not exists (servreq_code_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'servreq_code_version'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servreq_code_version varchar;   -- code/coding/version (varchar)
        END IF; -- column (servreq_code_version)
        IF NOT EXISTS ( -- column not exists (servreq_code_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'servreq_code_code'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servreq_code_code varchar;   -- code/coding/code (varchar)
        END IF; -- column (servreq_code_code)
        IF NOT EXISTS ( -- column not exists (servreq_code_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'servreq_code_display'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servreq_code_display varchar;   -- code/coding/display (varchar)
        END IF; -- column (servreq_code_display)
        IF NOT EXISTS ( -- column not exists (servreq_code_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'servreq_code_text'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servreq_code_text varchar;   -- code/text (varchar)
        END IF; -- column (servreq_code_text)
        IF NOT EXISTS ( -- column not exists (servreq_authoredon)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'servreq_authoredon'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servreq_authoredon timestamp;   -- authoredOn (timestamp)
        END IF; -- column (servreq_authoredon)
        IF NOT EXISTS ( -- column not exists (servreq_requester_ref)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'servreq_requester_ref'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servreq_requester_ref varchar;   -- requester/reference (varchar)
        END IF; -- column (servreq_requester_ref)
        IF NOT EXISTS ( -- column not exists (servreq_requester_type)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'servreq_requester_type'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servreq_requester_type varchar;   -- requester/type (varchar)
        END IF; -- column (servreq_requester_type)
        IF NOT EXISTS ( -- column not exists (servreq_requester_identifier_use)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'servreq_requester_identifier_use'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servreq_requester_identifier_use varchar;   -- requester/identifier/use (varchar)
        END IF; -- column (servreq_requester_identifier_use)
        IF NOT EXISTS ( -- column not exists (servreq_requester_identifier_type_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'servreq_requester_identifier_type_system'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servreq_requester_identifier_type_system varchar;   -- requester/identifier/type/coding/system (varchar)
        END IF; -- column (servreq_requester_identifier_type_system)
        IF NOT EXISTS ( -- column not exists (servreq_requester_identifier_type_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'servreq_requester_identifier_type_version'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servreq_requester_identifier_type_version varchar;   -- requester/identifier/type/coding/version (varchar)
        END IF; -- column (servreq_requester_identifier_type_version)
        IF NOT EXISTS ( -- column not exists (servreq_requester_identifier_type_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'servreq_requester_identifier_type_code'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servreq_requester_identifier_type_code varchar;   -- requester/identifier/type/coding/code (varchar)
        END IF; -- column (servreq_requester_identifier_type_code)
        IF NOT EXISTS ( -- column not exists (servreq_requester_identifier_type_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'servreq_requester_identifier_type_display'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servreq_requester_identifier_type_display varchar;   -- requester/identifier/type/coding/display (varchar)
        END IF; -- column (servreq_requester_identifier_type_display)
        IF NOT EXISTS ( -- column not exists (servreq_requester_identifier_type_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'servreq_requester_identifier_type_text'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servreq_requester_identifier_type_text varchar;   -- requester/identifier/type/text (varchar)
        END IF; -- column (servreq_requester_identifier_type_text)
        IF NOT EXISTS ( -- column not exists (servreq_requester_identifier_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'servreq_requester_identifier_system'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servreq_requester_identifier_system varchar;   -- requester/identifier/system (varchar)
        END IF; -- column (servreq_requester_identifier_system)
        IF NOT EXISTS ( -- column not exists (servreq_requester_identifier_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'servreq_requester_identifier_value'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servreq_requester_identifier_value varchar;   -- requester/identifier/value (varchar)
        END IF; -- column (servreq_requester_identifier_value)
        IF NOT EXISTS ( -- column not exists (servreq_requester_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'servreq_requester_display'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servreq_requester_display varchar;   -- requester/display (varchar)
        END IF; -- column (servreq_requester_display)
        IF NOT EXISTS ( -- column not exists (servreq_performer_ref)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'servreq_performer_ref'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servreq_performer_ref varchar;   -- performer/reference (varchar)
        END IF; -- column (servreq_performer_ref)
        IF NOT EXISTS ( -- column not exists (servreq_performer_type)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'servreq_performer_type'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servreq_performer_type varchar;   -- performer/type (varchar)
        END IF; -- column (servreq_performer_type)
        IF NOT EXISTS ( -- column not exists (servreq_performer_identifier_use)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'servreq_performer_identifier_use'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servreq_performer_identifier_use varchar;   -- performer/identifier/use (varchar)
        END IF; -- column (servreq_performer_identifier_use)
        IF NOT EXISTS ( -- column not exists (servreq_performer_identifier_type_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'servreq_performer_identifier_type_system'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servreq_performer_identifier_type_system varchar;   -- performer/identifier/type/coding/system (varchar)
        END IF; -- column (servreq_performer_identifier_type_system)
        IF NOT EXISTS ( -- column not exists (servreq_performer_identifier_type_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'servreq_performer_identifier_type_version'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servreq_performer_identifier_type_version varchar;   -- performer/identifier/type/coding/version (varchar)
        END IF; -- column (servreq_performer_identifier_type_version)
        IF NOT EXISTS ( -- column not exists (servreq_performer_identifier_type_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'servreq_performer_identifier_type_code'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servreq_performer_identifier_type_code varchar;   -- performer/identifier/type/coding/code (varchar)
        END IF; -- column (servreq_performer_identifier_type_code)
        IF NOT EXISTS ( -- column not exists (servreq_performer_identifier_type_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'servreq_performer_identifier_type_display'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servreq_performer_identifier_type_display varchar;   -- performer/identifier/type/coding/display (varchar)
        END IF; -- column (servreq_performer_identifier_type_display)
        IF NOT EXISTS ( -- column not exists (servreq_performer_identifier_type_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'servreq_performer_identifier_type_text'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servreq_performer_identifier_type_text varchar;   -- performer/identifier/type/text (varchar)
        END IF; -- column (servreq_performer_identifier_type_text)
        IF NOT EXISTS ( -- column not exists (servreq_performer_identifier_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'servreq_performer_identifier_system'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servreq_performer_identifier_system varchar;   -- performer/identifier/system (varchar)
        END IF; -- column (servreq_performer_identifier_system)
        IF NOT EXISTS ( -- column not exists (servreq_performer_identifier_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'servreq_performer_identifier_value'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servreq_performer_identifier_value varchar;   -- performer/identifier/value (varchar)
        END IF; -- column (servreq_performer_identifier_value)
        IF NOT EXISTS ( -- column not exists (servreq_performer_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'servreq_performer_display'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servreq_performer_display varchar;   -- performer/display (varchar)
        END IF; -- column (servreq_performer_display)
        IF NOT EXISTS ( -- column not exists (servreq_locationcode_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'servreq_locationcode_system'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servreq_locationcode_system varchar;   -- locationCode/coding/system (varchar)
        END IF; -- column (servreq_locationcode_system)
        IF NOT EXISTS ( -- column not exists (servreq_locationcode_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'servreq_locationcode_version'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servreq_locationcode_version varchar;   -- locationCode/coding/version (varchar)
        END IF; -- column (servreq_locationcode_version)
        IF NOT EXISTS ( -- column not exists (servreq_locationcode_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'servreq_locationcode_code'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servreq_locationcode_code varchar;   -- locationCode/coding/code (varchar)
        END IF; -- column (servreq_locationcode_code)
        IF NOT EXISTS ( -- column not exists (servreq_locationcode_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'servreq_locationcode_display'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servreq_locationcode_display varchar;   -- locationCode/coding/display (varchar)
        END IF; -- column (servreq_locationcode_display)
        IF NOT EXISTS ( -- column not exists (servreq_locationcode_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'servreq_locationcode_text'
        ) THEN
            ALTER TABLE cds2db_in.servicerequest ADD servreq_locationcode_text varchar;   -- locationCode/text (varchar)
        END IF; -- column (servreq_locationcode_text)

-- Hash column for comparison on data-bearing columns -------------------------------------------
        IF EXISTS ( -- column exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest' AND column_name = 'hash_index_col'
        ) THEN
            IF NOT EXISTS ( -- column exists
                SELECT 1 FROM information_schema.columns WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest' AND column_name = 'hash_index_col'
                AND trim(replace(replace(generation_expression::TEXT,'(',''),')','')) != trim(replace(replace('
	         COALESCE(db.to_char_immutable(servreq_id), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(servreq_identifier_use), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(servreq_identifier_type_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(servreq_identifier_type_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(servreq_identifier_type_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(servreq_identifier_type_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(servreq_identifier_type_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(servreq_identifier_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(servreq_identifier_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(servreq_identifier_start), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(servreq_identifier_end), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(servreq_encounter_ref), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(servreq_patient_ref), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(servreq_basedon_ref), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(servreq_basedon_type), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(servreq_basedon_identifier_use), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(servreq_basedon_identifier_type_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(servreq_basedon_identifier_type_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(servreq_basedon_identifier_type_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(servreq_basedon_identifier_type_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(servreq_basedon_identifier_type_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(servreq_basedon_identifier_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(servreq_basedon_identifier_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(servreq_basedon_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(servreq_status), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(servreq_intent), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(servreq_category_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(servreq_category_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(servreq_category_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(servreq_category_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(servreq_category_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(servreq_code_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(servreq_code_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(servreq_code_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(servreq_code_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(servreq_code_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(servreq_authoredon), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(servreq_requester_ref), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(servreq_requester_type), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(servreq_requester_identifier_use), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(servreq_requester_identifier_type_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(servreq_requester_identifier_type_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(servreq_requester_identifier_type_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(servreq_requester_identifier_type_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(servreq_requester_identifier_type_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(servreq_requester_identifier_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(servreq_requester_identifier_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(servreq_requester_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(servreq_performer_ref), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(servreq_performer_type), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(servreq_performer_identifier_use), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(servreq_performer_identifier_type_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(servreq_performer_identifier_type_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(servreq_performer_identifier_type_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(servreq_performer_identifier_type_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(servreq_performer_identifier_type_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(servreq_performer_identifier_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(servreq_performer_identifier_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(servreq_performer_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(servreq_locationcode_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(servreq_locationcode_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(servreq_locationcode_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(servreq_locationcode_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(servreq_locationcode_text), ''#NULL#'') || ''|||'' ||''#''
                ','(',''),')',''))
            ) THEN
            -- Delete the old hash column so that a new one can be created
            ALTER TABLE cds2db_in.servicerequest DROP COLUMN hash_index_col;

            -- Creating the hash column
            ALTER TABLE cds2db_in.servicerequest ADD
            hash_index_col TEXT GENERATED ALWAYS AS (
            md5(
	         COALESCE(db.to_char_immutable(servreq_id), '#NULL#') || '|||' || -- hash from: id (servreq_id)
          COALESCE(db.to_char_immutable(servreq_identifier_use), '#NULL#') || '|||' || -- hash from: identifier/use (servreq_identifier_use)
          COALESCE(db.to_char_immutable(servreq_identifier_type_system), '#NULL#') || '|||' || -- hash from: identifier/type/coding/system (servreq_identifier_type_system)
          COALESCE(db.to_char_immutable(servreq_identifier_type_version), '#NULL#') || '|||' || -- hash from: identifier/type/coding/version (servreq_identifier_type_version)
          COALESCE(db.to_char_immutable(servreq_identifier_type_code), '#NULL#') || '|||' || -- hash from: identifier/type/coding/code (servreq_identifier_type_code)
          COALESCE(db.to_char_immutable(servreq_identifier_type_display), '#NULL#') || '|||' || -- hash from: identifier/type/coding/display (servreq_identifier_type_display)
          COALESCE(db.to_char_immutable(servreq_identifier_type_text), '#NULL#') || '|||' || -- hash from: identifier/type/text (servreq_identifier_type_text)
          COALESCE(db.to_char_immutable(servreq_identifier_system), '#NULL#') || '|||' || -- hash from: identifier/system (servreq_identifier_system)
          COALESCE(db.to_char_immutable(servreq_identifier_value), '#NULL#') || '|||' || -- hash from: identifier/value (servreq_identifier_value)
          COALESCE(db.to_char_immutable(servreq_identifier_start), '#NULL#') || '|||' || -- hash from: identifier/start (servreq_identifier_start)
          COALESCE(db.to_char_immutable(servreq_identifier_end), '#NULL#') || '|||' || -- hash from: identifier/end (servreq_identifier_end)
          COALESCE(db.to_char_immutable(servreq_encounter_ref), '#NULL#') || '|||' || -- hash from: encounter/reference (servreq_encounter_ref)
          COALESCE(db.to_char_immutable(servreq_patient_ref), '#NULL#') || '|||' || -- hash from: subject/reference (servreq_patient_ref)
          COALESCE(db.to_char_immutable(servreq_basedon_ref), '#NULL#') || '|||' || -- hash from: basedOn/reference (servreq_basedon_ref)
          COALESCE(db.to_char_immutable(servreq_basedon_type), '#NULL#') || '|||' || -- hash from: basedOn/type (servreq_basedon_type)
          COALESCE(db.to_char_immutable(servreq_basedon_identifier_use), '#NULL#') || '|||' || -- hash from: basedOn/identifier/use (servreq_basedon_identifier_use)
          COALESCE(db.to_char_immutable(servreq_basedon_identifier_type_system), '#NULL#') || '|||' || -- hash from: basedOn/identifier/type/coding/system (servreq_basedon_identifier_type_system)
          COALESCE(db.to_char_immutable(servreq_basedon_identifier_type_version), '#NULL#') || '|||' || -- hash from: basedOn/identifier/type/coding/version (servreq_basedon_identifier_type_version)
          COALESCE(db.to_char_immutable(servreq_basedon_identifier_type_code), '#NULL#') || '|||' || -- hash from: basedOn/identifier/type/coding/code (servreq_basedon_identifier_type_code)
          COALESCE(db.to_char_immutable(servreq_basedon_identifier_type_display), '#NULL#') || '|||' || -- hash from: basedOn/identifier/type/coding/display (servreq_basedon_identifier_type_display)
          COALESCE(db.to_char_immutable(servreq_basedon_identifier_type_text), '#NULL#') || '|||' || -- hash from: basedOn/identifier/type/text (servreq_basedon_identifier_type_text)
          COALESCE(db.to_char_immutable(servreq_basedon_identifier_system), '#NULL#') || '|||' || -- hash from: basedOn/identifier/system (servreq_basedon_identifier_system)
          COALESCE(db.to_char_immutable(servreq_basedon_identifier_value), '#NULL#') || '|||' || -- hash from: basedOn/identifier/value (servreq_basedon_identifier_value)
          COALESCE(db.to_char_immutable(servreq_basedon_display), '#NULL#') || '|||' || -- hash from: basedOn/display (servreq_basedon_display)
          COALESCE(db.to_char_immutable(servreq_status), '#NULL#') || '|||' || -- hash from: status (servreq_status)
          COALESCE(db.to_char_immutable(servreq_intent), '#NULL#') || '|||' || -- hash from: intent (servreq_intent)
          COALESCE(db.to_char_immutable(servreq_category_system), '#NULL#') || '|||' || -- hash from: category/coding/system (servreq_category_system)
          COALESCE(db.to_char_immutable(servreq_category_version), '#NULL#') || '|||' || -- hash from: category/coding/version (servreq_category_version)
          COALESCE(db.to_char_immutable(servreq_category_code), '#NULL#') || '|||' || -- hash from: category/coding/code (servreq_category_code)
          COALESCE(db.to_char_immutable(servreq_category_display), '#NULL#') || '|||' || -- hash from: category/coding/display (servreq_category_display)
          COALESCE(db.to_char_immutable(servreq_category_text), '#NULL#') || '|||' || -- hash from: category/text (servreq_category_text)
          COALESCE(db.to_char_immutable(servreq_code_system), '#NULL#') || '|||' || -- hash from: code/coding/system (servreq_code_system)
          COALESCE(db.to_char_immutable(servreq_code_version), '#NULL#') || '|||' || -- hash from: code/coding/version (servreq_code_version)
          COALESCE(db.to_char_immutable(servreq_code_code), '#NULL#') || '|||' || -- hash from: code/coding/code (servreq_code_code)
          COALESCE(db.to_char_immutable(servreq_code_display), '#NULL#') || '|||' || -- hash from: code/coding/display (servreq_code_display)
          COALESCE(db.to_char_immutable(servreq_code_text), '#NULL#') || '|||' || -- hash from: code/text (servreq_code_text)
          COALESCE(db.to_char_immutable(servreq_authoredon), '#NULL#') || '|||' || -- hash from: authoredOn (servreq_authoredon)
          COALESCE(db.to_char_immutable(servreq_requester_ref), '#NULL#') || '|||' || -- hash from: requester/reference (servreq_requester_ref)
          COALESCE(db.to_char_immutable(servreq_requester_type), '#NULL#') || '|||' || -- hash from: requester/type (servreq_requester_type)
          COALESCE(db.to_char_immutable(servreq_requester_identifier_use), '#NULL#') || '|||' || -- hash from: requester/identifier/use (servreq_requester_identifier_use)
          COALESCE(db.to_char_immutable(servreq_requester_identifier_type_system), '#NULL#') || '|||' || -- hash from: requester/identifier/type/coding/system (servreq_requester_identifier_type_system)
          COALESCE(db.to_char_immutable(servreq_requester_identifier_type_version), '#NULL#') || '|||' || -- hash from: requester/identifier/type/coding/version (servreq_requester_identifier_type_version)
          COALESCE(db.to_char_immutable(servreq_requester_identifier_type_code), '#NULL#') || '|||' || -- hash from: requester/identifier/type/coding/code (servreq_requester_identifier_type_code)
          COALESCE(db.to_char_immutable(servreq_requester_identifier_type_display), '#NULL#') || '|||' || -- hash from: requester/identifier/type/coding/display (servreq_requester_identifier_type_display)
          COALESCE(db.to_char_immutable(servreq_requester_identifier_type_text), '#NULL#') || '|||' || -- hash from: requester/identifier/type/text (servreq_requester_identifier_type_text)
          COALESCE(db.to_char_immutable(servreq_requester_identifier_system), '#NULL#') || '|||' || -- hash from: requester/identifier/system (servreq_requester_identifier_system)
          COALESCE(db.to_char_immutable(servreq_requester_identifier_value), '#NULL#') || '|||' || -- hash from: requester/identifier/value (servreq_requester_identifier_value)
          COALESCE(db.to_char_immutable(servreq_requester_display), '#NULL#') || '|||' || -- hash from: requester/display (servreq_requester_display)
          COALESCE(db.to_char_immutable(servreq_performer_ref), '#NULL#') || '|||' || -- hash from: performer/reference (servreq_performer_ref)
          COALESCE(db.to_char_immutable(servreq_performer_type), '#NULL#') || '|||' || -- hash from: performer/type (servreq_performer_type)
          COALESCE(db.to_char_immutable(servreq_performer_identifier_use), '#NULL#') || '|||' || -- hash from: performer/identifier/use (servreq_performer_identifier_use)
          COALESCE(db.to_char_immutable(servreq_performer_identifier_type_system), '#NULL#') || '|||' || -- hash from: performer/identifier/type/coding/system (servreq_performer_identifier_type_system)
          COALESCE(db.to_char_immutable(servreq_performer_identifier_type_version), '#NULL#') || '|||' || -- hash from: performer/identifier/type/coding/version (servreq_performer_identifier_type_version)
          COALESCE(db.to_char_immutable(servreq_performer_identifier_type_code), '#NULL#') || '|||' || -- hash from: performer/identifier/type/coding/code (servreq_performer_identifier_type_code)
          COALESCE(db.to_char_immutable(servreq_performer_identifier_type_display), '#NULL#') || '|||' || -- hash from: performer/identifier/type/coding/display (servreq_performer_identifier_type_display)
          COALESCE(db.to_char_immutable(servreq_performer_identifier_type_text), '#NULL#') || '|||' || -- hash from: performer/identifier/type/text (servreq_performer_identifier_type_text)
          COALESCE(db.to_char_immutable(servreq_performer_identifier_system), '#NULL#') || '|||' || -- hash from: performer/identifier/system (servreq_performer_identifier_system)
          COALESCE(db.to_char_immutable(servreq_performer_identifier_value), '#NULL#') || '|||' || -- hash from: performer/identifier/value (servreq_performer_identifier_value)
          COALESCE(db.to_char_immutable(servreq_performer_display), '#NULL#') || '|||' || -- hash from: performer/display (servreq_performer_display)
          COALESCE(db.to_char_immutable(servreq_locationcode_system), '#NULL#') || '|||' || -- hash from: locationCode/coding/system (servreq_locationcode_system)
          COALESCE(db.to_char_immutable(servreq_locationcode_version), '#NULL#') || '|||' || -- hash from: locationCode/coding/version (servreq_locationcode_version)
          COALESCE(db.to_char_immutable(servreq_locationcode_code), '#NULL#') || '|||' || -- hash from: locationCode/coding/code (servreq_locationcode_code)
          COALESCE(db.to_char_immutable(servreq_locationcode_display), '#NULL#') || '|||' || -- hash from: locationCode/coding/display (servreq_locationcode_display)
          COALESCE(db.to_char_immutable(servreq_locationcode_text), '#NULL#') || '|||' || -- hash from: locationCode/text (servreq_locationcode_text)
                 '#'
               )
            ) STORED; -- Column for hash value for comparing FHIR data - collion check in second step hash_index_col
            END IF; -- currend hash definition
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'servicerequest'
            AND column_name = 'hash_index_col'
        ) THEN
            -- Creating the hash column
            ALTER TABLE cds2db_in.servicerequest ADD
            hash_index_col TEXT GENERATED ALWAYS AS (
            md5(
	         COALESCE(db.to_char_immutable(servreq_id), '#NULL#') || '|||' || -- hash from: id (servreq_id)
          COALESCE(db.to_char_immutable(servreq_identifier_use), '#NULL#') || '|||' || -- hash from: identifier/use (servreq_identifier_use)
          COALESCE(db.to_char_immutable(servreq_identifier_type_system), '#NULL#') || '|||' || -- hash from: identifier/type/coding/system (servreq_identifier_type_system)
          COALESCE(db.to_char_immutable(servreq_identifier_type_version), '#NULL#') || '|||' || -- hash from: identifier/type/coding/version (servreq_identifier_type_version)
          COALESCE(db.to_char_immutable(servreq_identifier_type_code), '#NULL#') || '|||' || -- hash from: identifier/type/coding/code (servreq_identifier_type_code)
          COALESCE(db.to_char_immutable(servreq_identifier_type_display), '#NULL#') || '|||' || -- hash from: identifier/type/coding/display (servreq_identifier_type_display)
          COALESCE(db.to_char_immutable(servreq_identifier_type_text), '#NULL#') || '|||' || -- hash from: identifier/type/text (servreq_identifier_type_text)
          COALESCE(db.to_char_immutable(servreq_identifier_system), '#NULL#') || '|||' || -- hash from: identifier/system (servreq_identifier_system)
          COALESCE(db.to_char_immutable(servreq_identifier_value), '#NULL#') || '|||' || -- hash from: identifier/value (servreq_identifier_value)
          COALESCE(db.to_char_immutable(servreq_identifier_start), '#NULL#') || '|||' || -- hash from: identifier/start (servreq_identifier_start)
          COALESCE(db.to_char_immutable(servreq_identifier_end), '#NULL#') || '|||' || -- hash from: identifier/end (servreq_identifier_end)
          COALESCE(db.to_char_immutable(servreq_encounter_ref), '#NULL#') || '|||' || -- hash from: encounter/reference (servreq_encounter_ref)
          COALESCE(db.to_char_immutable(servreq_patient_ref), '#NULL#') || '|||' || -- hash from: subject/reference (servreq_patient_ref)
          COALESCE(db.to_char_immutable(servreq_basedon_ref), '#NULL#') || '|||' || -- hash from: basedOn/reference (servreq_basedon_ref)
          COALESCE(db.to_char_immutable(servreq_basedon_type), '#NULL#') || '|||' || -- hash from: basedOn/type (servreq_basedon_type)
          COALESCE(db.to_char_immutable(servreq_basedon_identifier_use), '#NULL#') || '|||' || -- hash from: basedOn/identifier/use (servreq_basedon_identifier_use)
          COALESCE(db.to_char_immutable(servreq_basedon_identifier_type_system), '#NULL#') || '|||' || -- hash from: basedOn/identifier/type/coding/system (servreq_basedon_identifier_type_system)
          COALESCE(db.to_char_immutable(servreq_basedon_identifier_type_version), '#NULL#') || '|||' || -- hash from: basedOn/identifier/type/coding/version (servreq_basedon_identifier_type_version)
          COALESCE(db.to_char_immutable(servreq_basedon_identifier_type_code), '#NULL#') || '|||' || -- hash from: basedOn/identifier/type/coding/code (servreq_basedon_identifier_type_code)
          COALESCE(db.to_char_immutable(servreq_basedon_identifier_type_display), '#NULL#') || '|||' || -- hash from: basedOn/identifier/type/coding/display (servreq_basedon_identifier_type_display)
          COALESCE(db.to_char_immutable(servreq_basedon_identifier_type_text), '#NULL#') || '|||' || -- hash from: basedOn/identifier/type/text (servreq_basedon_identifier_type_text)
          COALESCE(db.to_char_immutable(servreq_basedon_identifier_system), '#NULL#') || '|||' || -- hash from: basedOn/identifier/system (servreq_basedon_identifier_system)
          COALESCE(db.to_char_immutable(servreq_basedon_identifier_value), '#NULL#') || '|||' || -- hash from: basedOn/identifier/value (servreq_basedon_identifier_value)
          COALESCE(db.to_char_immutable(servreq_basedon_display), '#NULL#') || '|||' || -- hash from: basedOn/display (servreq_basedon_display)
          COALESCE(db.to_char_immutable(servreq_status), '#NULL#') || '|||' || -- hash from: status (servreq_status)
          COALESCE(db.to_char_immutable(servreq_intent), '#NULL#') || '|||' || -- hash from: intent (servreq_intent)
          COALESCE(db.to_char_immutable(servreq_category_system), '#NULL#') || '|||' || -- hash from: category/coding/system (servreq_category_system)
          COALESCE(db.to_char_immutable(servreq_category_version), '#NULL#') || '|||' || -- hash from: category/coding/version (servreq_category_version)
          COALESCE(db.to_char_immutable(servreq_category_code), '#NULL#') || '|||' || -- hash from: category/coding/code (servreq_category_code)
          COALESCE(db.to_char_immutable(servreq_category_display), '#NULL#') || '|||' || -- hash from: category/coding/display (servreq_category_display)
          COALESCE(db.to_char_immutable(servreq_category_text), '#NULL#') || '|||' || -- hash from: category/text (servreq_category_text)
          COALESCE(db.to_char_immutable(servreq_code_system), '#NULL#') || '|||' || -- hash from: code/coding/system (servreq_code_system)
          COALESCE(db.to_char_immutable(servreq_code_version), '#NULL#') || '|||' || -- hash from: code/coding/version (servreq_code_version)
          COALESCE(db.to_char_immutable(servreq_code_code), '#NULL#') || '|||' || -- hash from: code/coding/code (servreq_code_code)
          COALESCE(db.to_char_immutable(servreq_code_display), '#NULL#') || '|||' || -- hash from: code/coding/display (servreq_code_display)
          COALESCE(db.to_char_immutable(servreq_code_text), '#NULL#') || '|||' || -- hash from: code/text (servreq_code_text)
          COALESCE(db.to_char_immutable(servreq_authoredon), '#NULL#') || '|||' || -- hash from: authoredOn (servreq_authoredon)
          COALESCE(db.to_char_immutable(servreq_requester_ref), '#NULL#') || '|||' || -- hash from: requester/reference (servreq_requester_ref)
          COALESCE(db.to_char_immutable(servreq_requester_type), '#NULL#') || '|||' || -- hash from: requester/type (servreq_requester_type)
          COALESCE(db.to_char_immutable(servreq_requester_identifier_use), '#NULL#') || '|||' || -- hash from: requester/identifier/use (servreq_requester_identifier_use)
          COALESCE(db.to_char_immutable(servreq_requester_identifier_type_system), '#NULL#') || '|||' || -- hash from: requester/identifier/type/coding/system (servreq_requester_identifier_type_system)
          COALESCE(db.to_char_immutable(servreq_requester_identifier_type_version), '#NULL#') || '|||' || -- hash from: requester/identifier/type/coding/version (servreq_requester_identifier_type_version)
          COALESCE(db.to_char_immutable(servreq_requester_identifier_type_code), '#NULL#') || '|||' || -- hash from: requester/identifier/type/coding/code (servreq_requester_identifier_type_code)
          COALESCE(db.to_char_immutable(servreq_requester_identifier_type_display), '#NULL#') || '|||' || -- hash from: requester/identifier/type/coding/display (servreq_requester_identifier_type_display)
          COALESCE(db.to_char_immutable(servreq_requester_identifier_type_text), '#NULL#') || '|||' || -- hash from: requester/identifier/type/text (servreq_requester_identifier_type_text)
          COALESCE(db.to_char_immutable(servreq_requester_identifier_system), '#NULL#') || '|||' || -- hash from: requester/identifier/system (servreq_requester_identifier_system)
          COALESCE(db.to_char_immutable(servreq_requester_identifier_value), '#NULL#') || '|||' || -- hash from: requester/identifier/value (servreq_requester_identifier_value)
          COALESCE(db.to_char_immutable(servreq_requester_display), '#NULL#') || '|||' || -- hash from: requester/display (servreq_requester_display)
          COALESCE(db.to_char_immutable(servreq_performer_ref), '#NULL#') || '|||' || -- hash from: performer/reference (servreq_performer_ref)
          COALESCE(db.to_char_immutable(servreq_performer_type), '#NULL#') || '|||' || -- hash from: performer/type (servreq_performer_type)
          COALESCE(db.to_char_immutable(servreq_performer_identifier_use), '#NULL#') || '|||' || -- hash from: performer/identifier/use (servreq_performer_identifier_use)
          COALESCE(db.to_char_immutable(servreq_performer_identifier_type_system), '#NULL#') || '|||' || -- hash from: performer/identifier/type/coding/system (servreq_performer_identifier_type_system)
          COALESCE(db.to_char_immutable(servreq_performer_identifier_type_version), '#NULL#') || '|||' || -- hash from: performer/identifier/type/coding/version (servreq_performer_identifier_type_version)
          COALESCE(db.to_char_immutable(servreq_performer_identifier_type_code), '#NULL#') || '|||' || -- hash from: performer/identifier/type/coding/code (servreq_performer_identifier_type_code)
          COALESCE(db.to_char_immutable(servreq_performer_identifier_type_display), '#NULL#') || '|||' || -- hash from: performer/identifier/type/coding/display (servreq_performer_identifier_type_display)
          COALESCE(db.to_char_immutable(servreq_performer_identifier_type_text), '#NULL#') || '|||' || -- hash from: performer/identifier/type/text (servreq_performer_identifier_type_text)
          COALESCE(db.to_char_immutable(servreq_performer_identifier_system), '#NULL#') || '|||' || -- hash from: performer/identifier/system (servreq_performer_identifier_system)
          COALESCE(db.to_char_immutable(servreq_performer_identifier_value), '#NULL#') || '|||' || -- hash from: performer/identifier/value (servreq_performer_identifier_value)
          COALESCE(db.to_char_immutable(servreq_performer_display), '#NULL#') || '|||' || -- hash from: performer/display (servreq_performer_display)
          COALESCE(db.to_char_immutable(servreq_locationcode_system), '#NULL#') || '|||' || -- hash from: locationCode/coding/system (servreq_locationcode_system)
          COALESCE(db.to_char_immutable(servreq_locationcode_version), '#NULL#') || '|||' || -- hash from: locationCode/coding/version (servreq_locationcode_version)
          COALESCE(db.to_char_immutable(servreq_locationcode_code), '#NULL#') || '|||' || -- hash from: locationCode/coding/code (servreq_locationcode_code)
          COALESCE(db.to_char_immutable(servreq_locationcode_display), '#NULL#') || '|||' || -- hash from: locationCode/coding/display (servreq_locationcode_display)
          COALESCE(db.to_char_immutable(servreq_locationcode_text), '#NULL#') || '|||' || -- hash from: locationCode/text (servreq_locationcode_text)
                 '#'
               )
            ) STORED; -- Column for hash value for comparing FHIR data - collion check in second step hash_index_col
        END IF; -- column
    END IF; -- Table
END
$$;
-- Table "procedure" in schema "cds2db_in"
-------------------------------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS cds2db_in.procedure (
  procedure_id int PRIMARY KEY DEFAULT nextval('db.db_seq') -- Primary key of the entity
);

DO
$$
DECLARE
    IF EXISTS ( -- Table exists
        SELECT 1 FROM information_schema.columns 
        WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
    ) THEN
        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'input_datetime'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD procedure_raw_id int NOT NULL; -- Primary key of the corresponding raw table
            NULL;
        END IF; -- column

-- Organizational items - fixed for each database table -----------------------------------------
        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'input_datetime'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD input_datetime TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP; -- Time at which data record was created
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'last_check_datetime'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD last_check_datetime TIMESTAMP DEFAULT NULL; -- Time at which data record was last checked
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'current_dataset_status'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD current_dataset_status VARCHAR DEFAULT 'input'; -- Processing status of the data record
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'input_processing_nr'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD input_processing_nr INT; -- (First) Processing number of the data record
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'last_processing_nr'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD last_processing_nr INT; -- Last processing number of the data record
        END IF; -- column

-- Data-leading columns -------------------------------------------------------------------------
        IF NOT EXISTS ( -- column not exists (proc_id)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_id'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_id varchar;   -- id (varchar)
        END IF; -- column (proc_id)
        IF NOT EXISTS ( -- column not exists (proc_meta_versionid)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_meta_versionid'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_meta_versionid varchar;   -- meta/versionId (varchar)
        END IF; -- column (proc_meta_versionid)
        IF NOT EXISTS ( -- column not exists (proc_meta_lastupdated)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_meta_lastupdated'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_meta_lastupdated timestamp;   -- meta/lastUpdated (timestamp)
        END IF; -- column (proc_meta_lastupdated)
        IF NOT EXISTS ( -- column not exists (proc_meta_profile)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_meta_profile'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_meta_profile varchar;   -- meta/profile (varchar)
        END IF; -- column (proc_meta_profile)
        IF NOT EXISTS ( -- column not exists (proc_identifier_use)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_identifier_use'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_identifier_use varchar;   -- identifier/use (varchar)
        END IF; -- column (proc_identifier_use)
        IF NOT EXISTS ( -- column not exists (proc_identifier_type_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_identifier_type_system'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_identifier_type_system varchar;   -- identifier/type/coding/system (varchar)
        END IF; -- column (proc_identifier_type_system)
        IF NOT EXISTS ( -- column not exists (proc_identifier_type_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_identifier_type_version'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_identifier_type_version varchar;   -- identifier/type/coding/version (varchar)
        END IF; -- column (proc_identifier_type_version)
        IF NOT EXISTS ( -- column not exists (proc_identifier_type_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_identifier_type_code'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_identifier_type_code varchar;   -- identifier/type/coding/code (varchar)
        END IF; -- column (proc_identifier_type_code)
        IF NOT EXISTS ( -- column not exists (proc_identifier_type_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_identifier_type_display'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_identifier_type_display varchar;   -- identifier/type/coding/display (varchar)
        END IF; -- column (proc_identifier_type_display)
        IF NOT EXISTS ( -- column not exists (proc_identifier_type_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_identifier_type_text'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_identifier_type_text varchar;   -- identifier/type/text (varchar)
        END IF; -- column (proc_identifier_type_text)
        IF NOT EXISTS ( -- column not exists (proc_identifier_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_identifier_system'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_identifier_system varchar;   -- identifier/system (varchar)
        END IF; -- column (proc_identifier_system)
        IF NOT EXISTS ( -- column not exists (proc_identifier_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_identifier_value'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_identifier_value varchar;   -- identifier/value (varchar)
        END IF; -- column (proc_identifier_value)
        IF NOT EXISTS ( -- column not exists (proc_identifier_start)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_identifier_start'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_identifier_start timestamp;   -- identifier/start (timestamp)
        END IF; -- column (proc_identifier_start)
        IF NOT EXISTS ( -- column not exists (proc_identifier_end)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_identifier_end'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_identifier_end timestamp;   -- identifier/end (timestamp)
        END IF; -- column (proc_identifier_end)
        IF NOT EXISTS ( -- column not exists (proc_encounter_ref)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_encounter_ref'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_encounter_ref varchar;   -- encounter/reference (varchar)
        END IF; -- column (proc_encounter_ref)
        IF NOT EXISTS ( -- column not exists (proc_patient_ref)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_patient_ref'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_patient_ref varchar;   -- subject/reference (varchar)
        END IF; -- column (proc_patient_ref)
        IF NOT EXISTS ( -- column not exists (proc_partof_ref)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_partof_ref'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_partof_ref varchar;   -- partOf/reference (varchar)
        END IF; -- column (proc_partof_ref)
        IF NOT EXISTS ( -- column not exists (proc_basedon_ref)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_basedon_ref'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_basedon_ref varchar;   -- basedOn/reference (varchar)
        END IF; -- column (proc_basedon_ref)
        IF NOT EXISTS ( -- column not exists (proc_basedon_type)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_basedon_type'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_basedon_type varchar;   -- basedOn/type (varchar)
        END IF; -- column (proc_basedon_type)
        IF NOT EXISTS ( -- column not exists (proc_basedon_identifier_use)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_basedon_identifier_use'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_basedon_identifier_use varchar;   -- basedOn/identifier/use (varchar)
        END IF; -- column (proc_basedon_identifier_use)
        IF NOT EXISTS ( -- column not exists (proc_basedon_identifier_type_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_basedon_identifier_type_system'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_basedon_identifier_type_system varchar;   -- basedOn/identifier/type/coding/system (varchar)
        END IF; -- column (proc_basedon_identifier_type_system)
        IF NOT EXISTS ( -- column not exists (proc_basedon_identifier_type_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_basedon_identifier_type_version'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_basedon_identifier_type_version varchar;   -- basedOn/identifier/type/coding/version (varchar)
        END IF; -- column (proc_basedon_identifier_type_version)
        IF NOT EXISTS ( -- column not exists (proc_basedon_identifier_type_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_basedon_identifier_type_code'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_basedon_identifier_type_code varchar;   -- basedOn/identifier/type/coding/code (varchar)
        END IF; -- column (proc_basedon_identifier_type_code)
        IF NOT EXISTS ( -- column not exists (proc_basedon_identifier_type_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_basedon_identifier_type_display'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_basedon_identifier_type_display varchar;   -- basedOn/identifier/type/coding/display (varchar)
        END IF; -- column (proc_basedon_identifier_type_display)
        IF NOT EXISTS ( -- column not exists (proc_basedon_identifier_type_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_basedon_identifier_type_text'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_basedon_identifier_type_text varchar;   -- basedOn/identifier/type/text (varchar)
        END IF; -- column (proc_basedon_identifier_type_text)
        IF NOT EXISTS ( -- column not exists (proc_basedon_identifier_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_basedon_identifier_system'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_basedon_identifier_system varchar;   -- basedOn/identifier/system (varchar)
        END IF; -- column (proc_basedon_identifier_system)
        IF NOT EXISTS ( -- column not exists (proc_basedon_identifier_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_basedon_identifier_value'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_basedon_identifier_value varchar;   -- basedOn/identifier/value (varchar)
        END IF; -- column (proc_basedon_identifier_value)
        IF NOT EXISTS ( -- column not exists (proc_basedon_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_basedon_display'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_basedon_display varchar;   -- basedOn/display (varchar)
        END IF; -- column (proc_basedon_display)
        IF NOT EXISTS ( -- column not exists (proc_status)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_status'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_status varchar;   -- status (varchar)
        END IF; -- column (proc_status)
        IF NOT EXISTS ( -- column not exists (proc_statusreason_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_statusreason_system'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_statusreason_system varchar;   -- statusReason/coding/system (varchar)
        END IF; -- column (proc_statusreason_system)
        IF NOT EXISTS ( -- column not exists (proc_statusreason_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_statusreason_version'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_statusreason_version varchar;   -- statusReason/coding/version (varchar)
        END IF; -- column (proc_statusreason_version)
        IF NOT EXISTS ( -- column not exists (proc_statusreason_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_statusreason_code'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_statusreason_code varchar;   -- statusReason/coding/code (varchar)
        END IF; -- column (proc_statusreason_code)
        IF NOT EXISTS ( -- column not exists (proc_statusreason_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_statusreason_display'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_statusreason_display varchar;   -- statusReason/coding/display (varchar)
        END IF; -- column (proc_statusreason_display)
        IF NOT EXISTS ( -- column not exists (proc_statusreason_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_statusreason_text'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_statusreason_text varchar;   -- statusReason/text (varchar)
        END IF; -- column (proc_statusreason_text)
        IF NOT EXISTS ( -- column not exists (proc_category_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_category_system'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_category_system varchar;   -- category/coding/system (varchar)
        END IF; -- column (proc_category_system)
        IF NOT EXISTS ( -- column not exists (proc_category_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_category_version'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_category_version varchar;   -- category/coding/version (varchar)
        END IF; -- column (proc_category_version)
        IF NOT EXISTS ( -- column not exists (proc_category_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_category_code'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_category_code varchar;   -- category/coding/code (varchar)
        END IF; -- column (proc_category_code)
        IF NOT EXISTS ( -- column not exists (proc_category_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_category_display'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_category_display varchar;   -- category/coding/display (varchar)
        END IF; -- column (proc_category_display)
        IF NOT EXISTS ( -- column not exists (proc_category_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_category_text'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_category_text varchar;   -- category/text (varchar)
        END IF; -- column (proc_category_text)
        IF NOT EXISTS ( -- column not exists (proc_code_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_code_system'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_code_system varchar;   -- code/coding/system (varchar)
        END IF; -- column (proc_code_system)
        IF NOT EXISTS ( -- column not exists (proc_code_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_code_version'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_code_version varchar;   -- code/coding/version (varchar)
        END IF; -- column (proc_code_version)
        IF NOT EXISTS ( -- column not exists (proc_code_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_code_code'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_code_code varchar;   -- code/coding/code (varchar)
        END IF; -- column (proc_code_code)
        IF NOT EXISTS ( -- column not exists (proc_code_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_code_display'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_code_display varchar;   -- code/coding/display (varchar)
        END IF; -- column (proc_code_display)
        IF NOT EXISTS ( -- column not exists (proc_code_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_code_text'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_code_text varchar;   -- code/text (varchar)
        END IF; -- column (proc_code_text)
        IF NOT EXISTS ( -- column not exists (proc_performeddatetime)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_performeddatetime'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_performeddatetime timestamp;   -- performedDateTime (timestamp)
        END IF; -- column (proc_performeddatetime)
        IF NOT EXISTS ( -- column not exists (proc_performedperiod_start)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_performedperiod_start'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_performedperiod_start timestamp;   -- performedPeriod/start (timestamp)
        END IF; -- column (proc_performedperiod_start)
        IF NOT EXISTS ( -- column not exists (proc_performedperiod_end)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_performedperiod_end'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_performedperiod_end timestamp;   -- performedPeriod/end (timestamp)
        END IF; -- column (proc_performedperiod_end)
        IF NOT EXISTS ( -- column not exists (proc_reasoncode_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_reasoncode_system'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_reasoncode_system varchar;   -- reasonCode/coding/system (varchar)
        END IF; -- column (proc_reasoncode_system)
        IF NOT EXISTS ( -- column not exists (proc_reasoncode_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_reasoncode_version'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_reasoncode_version varchar;   -- reasonCode/coding/version (varchar)
        END IF; -- column (proc_reasoncode_version)
        IF NOT EXISTS ( -- column not exists (proc_reasoncode_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_reasoncode_code'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_reasoncode_code varchar;   -- reasonCode/coding/code (varchar)
        END IF; -- column (proc_reasoncode_code)
        IF NOT EXISTS ( -- column not exists (proc_reasoncode_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_reasoncode_display'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_reasoncode_display varchar;   -- reasonCode/coding/display (varchar)
        END IF; -- column (proc_reasoncode_display)
        IF NOT EXISTS ( -- column not exists (proc_reasoncode_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_reasoncode_text'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_reasoncode_text varchar;   -- reasonCode/text (varchar)
        END IF; -- column (proc_reasoncode_text)
        IF NOT EXISTS ( -- column not exists (proc_reasonreference_ref)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_reasonreference_ref'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_reasonreference_ref varchar;   -- reasonReference/reference (varchar)
        END IF; -- column (proc_reasonreference_ref)
        IF NOT EXISTS ( -- column not exists (proc_reasonreference_type)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_reasonreference_type'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_reasonreference_type varchar;   -- reasonReference/type (varchar)
        END IF; -- column (proc_reasonreference_type)
        IF NOT EXISTS ( -- column not exists (proc_reasonreference_identifier_use)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_reasonreference_identifier_use'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_reasonreference_identifier_use varchar;   -- reasonReference/identifier/use (varchar)
        END IF; -- column (proc_reasonreference_identifier_use)
        IF NOT EXISTS ( -- column not exists (proc_reasonreference_identifier_type_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_reasonreference_identifier_type_system'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_reasonreference_identifier_type_system varchar;   -- reasonReference/identifier/type/coding/system (varchar)
        END IF; -- column (proc_reasonreference_identifier_type_system)
        IF NOT EXISTS ( -- column not exists (proc_reasonreference_identifier_type_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_reasonreference_identifier_type_version'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_reasonreference_identifier_type_version varchar;   -- reasonReference/identifier/type/coding/version (varchar)
        END IF; -- column (proc_reasonreference_identifier_type_version)
        IF NOT EXISTS ( -- column not exists (proc_reasonreference_identifier_type_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_reasonreference_identifier_type_code'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_reasonreference_identifier_type_code varchar;   -- reasonReference/identifier/type/coding/code (varchar)
        END IF; -- column (proc_reasonreference_identifier_type_code)
        IF NOT EXISTS ( -- column not exists (proc_reasonreference_identifier_type_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_reasonreference_identifier_type_display'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_reasonreference_identifier_type_display varchar;   -- reasonReference/identifier/type/coding/display (varchar)
        END IF; -- column (proc_reasonreference_identifier_type_display)
        IF NOT EXISTS ( -- column not exists (proc_reasonreference_identifier_type_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_reasonreference_identifier_type_text'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_reasonreference_identifier_type_text varchar;   -- reasonReference/identifier/type/text (varchar)
        END IF; -- column (proc_reasonreference_identifier_type_text)
        IF NOT EXISTS ( -- column not exists (proc_reasonreference_identifier_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_reasonreference_identifier_system'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_reasonreference_identifier_system varchar;   -- reasonReference/identifier/system (varchar)
        END IF; -- column (proc_reasonreference_identifier_system)
        IF NOT EXISTS ( -- column not exists (proc_reasonreference_identifier_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_reasonreference_identifier_value'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_reasonreference_identifier_value varchar;   -- reasonReference/identifier/value (varchar)
        END IF; -- column (proc_reasonreference_identifier_value)
        IF NOT EXISTS ( -- column not exists (proc_reasonreference_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_reasonreference_display'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_reasonreference_display varchar;   -- reasonReference/display (varchar)
        END IF; -- column (proc_reasonreference_display)
        IF NOT EXISTS ( -- column not exists (proc_note_authorstring)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_note_authorstring'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_note_authorstring varchar;   -- note/authorString (varchar)
        END IF; -- column (proc_note_authorstring)
        IF NOT EXISTS ( -- column not exists (proc_note_authorreference_ref)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_note_authorreference_ref'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_note_authorreference_ref varchar;   -- note/authorReference/reference (varchar)
        END IF; -- column (proc_note_authorreference_ref)
        IF NOT EXISTS ( -- column not exists (proc_note_authorreference_type)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_note_authorreference_type'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_note_authorreference_type varchar;   -- note/authorReference/type (varchar)
        END IF; -- column (proc_note_authorreference_type)
        IF NOT EXISTS ( -- column not exists (proc_note_authorreference_identifier_use)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_note_authorreference_identifier_use'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_note_authorreference_identifier_use varchar;   -- note/authorReference/identifier/use (varchar)
        END IF; -- column (proc_note_authorreference_identifier_use)
        IF NOT EXISTS ( -- column not exists (proc_note_authorreference_identifier_type_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_note_authorreference_identifier_type_system'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_note_authorreference_identifier_type_system varchar;   -- note/authorReference/identifier/type/coding/system (varchar)
        END IF; -- column (proc_note_authorreference_identifier_type_system)
        IF NOT EXISTS ( -- column not exists (proc_note_authorreference_identifier_type_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_note_authorreference_identifier_type_version'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_note_authorreference_identifier_type_version varchar;   -- note/authorReference/identifier/type/coding/version (varchar)
        END IF; -- column (proc_note_authorreference_identifier_type_version)
        IF NOT EXISTS ( -- column not exists (proc_note_authorreference_identifier_type_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_note_authorreference_identifier_type_code'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_note_authorreference_identifier_type_code varchar;   -- note/authorReference/identifier/type/coding/code (varchar)
        END IF; -- column (proc_note_authorreference_identifier_type_code)
        IF NOT EXISTS ( -- column not exists (proc_note_authorreference_identifier_type_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_note_authorreference_identifier_type_display'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_note_authorreference_identifier_type_display varchar;   -- note/authorReference/identifier/type/coding/display (varchar)
        END IF; -- column (proc_note_authorreference_identifier_type_display)
        IF NOT EXISTS ( -- column not exists (proc_note_authorreference_identifier_type_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_note_authorreference_identifier_type_text'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_note_authorreference_identifier_type_text varchar;   -- note/authorReference/identifier/type/text (varchar)
        END IF; -- column (proc_note_authorreference_identifier_type_text)
        IF NOT EXISTS ( -- column not exists (proc_note_authorreference_identifier_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_note_authorreference_identifier_system'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_note_authorreference_identifier_system varchar;   -- note/authorReference/identifier/system (varchar)
        END IF; -- column (proc_note_authorreference_identifier_system)
        IF NOT EXISTS ( -- column not exists (proc_note_authorreference_identifier_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_note_authorreference_identifier_value'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_note_authorreference_identifier_value varchar;   -- note/authorReference/identifier/value (varchar)
        END IF; -- column (proc_note_authorreference_identifier_value)
        IF NOT EXISTS ( -- column not exists (proc_note_authorreference_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_note_authorreference_display'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_note_authorreference_display varchar;   -- note/authorReference/display (varchar)
        END IF; -- column (proc_note_authorreference_display)
        IF NOT EXISTS ( -- column not exists (proc_note_time)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_note_time'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_note_time timestamp;   -- note/time (timestamp)
        END IF; -- column (proc_note_time)
        IF NOT EXISTS ( -- column not exists (proc_note_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'proc_note_text'
        ) THEN
            ALTER TABLE cds2db_in.procedure ADD proc_note_text varchar;   -- note/text (varchar)
        END IF; -- column (proc_note_text)

-- Hash column for comparison on data-bearing columns -------------------------------------------
        IF EXISTS ( -- column exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure' AND column_name = 'hash_index_col'
        ) THEN
            IF NOT EXISTS ( -- column exists
                SELECT 1 FROM information_schema.columns WHERE table_schema = 'cds2db_in' AND table_name = 'procedure' AND column_name = 'hash_index_col'
                AND trim(replace(replace(generation_expression::TEXT,'(',''),')','')) != trim(replace(replace('
	         COALESCE(db.to_char_immutable(proc_id), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_identifier_use), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_identifier_type_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_identifier_type_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_identifier_type_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_identifier_type_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_identifier_type_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_identifier_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_identifier_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_identifier_start), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_identifier_end), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_encounter_ref), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_patient_ref), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_partof_ref), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_basedon_ref), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_basedon_type), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_basedon_identifier_use), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_basedon_identifier_type_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_basedon_identifier_type_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_basedon_identifier_type_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_basedon_identifier_type_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_basedon_identifier_type_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_basedon_identifier_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_basedon_identifier_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_basedon_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_status), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_statusreason_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_statusreason_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_statusreason_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_statusreason_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_statusreason_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_category_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_category_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_category_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_category_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_category_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_code_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_code_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_code_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_code_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_code_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_performeddatetime), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_performedperiod_start), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_performedperiod_end), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_reasoncode_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_reasoncode_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_reasoncode_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_reasoncode_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_reasoncode_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_reasonreference_ref), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_reasonreference_type), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_reasonreference_identifier_use), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_reasonreference_identifier_type_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_reasonreference_identifier_type_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_reasonreference_identifier_type_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_reasonreference_identifier_type_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_reasonreference_identifier_type_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_reasonreference_identifier_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_reasonreference_identifier_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_reasonreference_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_note_authorstring), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_note_authorreference_ref), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_note_authorreference_type), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_note_authorreference_identifier_use), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_note_authorreference_identifier_type_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_note_authorreference_identifier_type_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_note_authorreference_identifier_type_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_note_authorreference_identifier_type_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_note_authorreference_identifier_type_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_note_authorreference_identifier_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_note_authorreference_identifier_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_note_authorreference_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_note_time), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(proc_note_text), ''#NULL#'') || ''|||'' ||''#''
                ','(',''),')',''))
            ) THEN
            -- Delete the old hash column so that a new one can be created
            ALTER TABLE cds2db_in.procedure DROP COLUMN hash_index_col;

            -- Creating the hash column
            ALTER TABLE cds2db_in.procedure ADD
            hash_index_col TEXT GENERATED ALWAYS AS (
            md5(
	         COALESCE(db.to_char_immutable(proc_id), '#NULL#') || '|||' || -- hash from: id (proc_id)
          COALESCE(db.to_char_immutable(proc_identifier_use), '#NULL#') || '|||' || -- hash from: identifier/use (proc_identifier_use)
          COALESCE(db.to_char_immutable(proc_identifier_type_system), '#NULL#') || '|||' || -- hash from: identifier/type/coding/system (proc_identifier_type_system)
          COALESCE(db.to_char_immutable(proc_identifier_type_version), '#NULL#') || '|||' || -- hash from: identifier/type/coding/version (proc_identifier_type_version)
          COALESCE(db.to_char_immutable(proc_identifier_type_code), '#NULL#') || '|||' || -- hash from: identifier/type/coding/code (proc_identifier_type_code)
          COALESCE(db.to_char_immutable(proc_identifier_type_display), '#NULL#') || '|||' || -- hash from: identifier/type/coding/display (proc_identifier_type_display)
          COALESCE(db.to_char_immutable(proc_identifier_type_text), '#NULL#') || '|||' || -- hash from: identifier/type/text (proc_identifier_type_text)
          COALESCE(db.to_char_immutable(proc_identifier_system), '#NULL#') || '|||' || -- hash from: identifier/system (proc_identifier_system)
          COALESCE(db.to_char_immutable(proc_identifier_value), '#NULL#') || '|||' || -- hash from: identifier/value (proc_identifier_value)
          COALESCE(db.to_char_immutable(proc_identifier_start), '#NULL#') || '|||' || -- hash from: identifier/start (proc_identifier_start)
          COALESCE(db.to_char_immutable(proc_identifier_end), '#NULL#') || '|||' || -- hash from: identifier/end (proc_identifier_end)
          COALESCE(db.to_char_immutable(proc_encounter_ref), '#NULL#') || '|||' || -- hash from: encounter/reference (proc_encounter_ref)
          COALESCE(db.to_char_immutable(proc_patient_ref), '#NULL#') || '|||' || -- hash from: subject/reference (proc_patient_ref)
          COALESCE(db.to_char_immutable(proc_partof_ref), '#NULL#') || '|||' || -- hash from: partOf/reference (proc_partof_ref)
          COALESCE(db.to_char_immutable(proc_basedon_ref), '#NULL#') || '|||' || -- hash from: basedOn/reference (proc_basedon_ref)
          COALESCE(db.to_char_immutable(proc_basedon_type), '#NULL#') || '|||' || -- hash from: basedOn/type (proc_basedon_type)
          COALESCE(db.to_char_immutable(proc_basedon_identifier_use), '#NULL#') || '|||' || -- hash from: basedOn/identifier/use (proc_basedon_identifier_use)
          COALESCE(db.to_char_immutable(proc_basedon_identifier_type_system), '#NULL#') || '|||' || -- hash from: basedOn/identifier/type/coding/system (proc_basedon_identifier_type_system)
          COALESCE(db.to_char_immutable(proc_basedon_identifier_type_version), '#NULL#') || '|||' || -- hash from: basedOn/identifier/type/coding/version (proc_basedon_identifier_type_version)
          COALESCE(db.to_char_immutable(proc_basedon_identifier_type_code), '#NULL#') || '|||' || -- hash from: basedOn/identifier/type/coding/code (proc_basedon_identifier_type_code)
          COALESCE(db.to_char_immutable(proc_basedon_identifier_type_display), '#NULL#') || '|||' || -- hash from: basedOn/identifier/type/coding/display (proc_basedon_identifier_type_display)
          COALESCE(db.to_char_immutable(proc_basedon_identifier_type_text), '#NULL#') || '|||' || -- hash from: basedOn/identifier/type/text (proc_basedon_identifier_type_text)
          COALESCE(db.to_char_immutable(proc_basedon_identifier_system), '#NULL#') || '|||' || -- hash from: basedOn/identifier/system (proc_basedon_identifier_system)
          COALESCE(db.to_char_immutable(proc_basedon_identifier_value), '#NULL#') || '|||' || -- hash from: basedOn/identifier/value (proc_basedon_identifier_value)
          COALESCE(db.to_char_immutable(proc_basedon_display), '#NULL#') || '|||' || -- hash from: basedOn/display (proc_basedon_display)
          COALESCE(db.to_char_immutable(proc_status), '#NULL#') || '|||' || -- hash from: status (proc_status)
          COALESCE(db.to_char_immutable(proc_statusreason_system), '#NULL#') || '|||' || -- hash from: statusReason/coding/system (proc_statusreason_system)
          COALESCE(db.to_char_immutable(proc_statusreason_version), '#NULL#') || '|||' || -- hash from: statusReason/coding/version (proc_statusreason_version)
          COALESCE(db.to_char_immutable(proc_statusreason_code), '#NULL#') || '|||' || -- hash from: statusReason/coding/code (proc_statusreason_code)
          COALESCE(db.to_char_immutable(proc_statusreason_display), '#NULL#') || '|||' || -- hash from: statusReason/coding/display (proc_statusreason_display)
          COALESCE(db.to_char_immutable(proc_statusreason_text), '#NULL#') || '|||' || -- hash from: statusReason/text (proc_statusreason_text)
          COALESCE(db.to_char_immutable(proc_category_system), '#NULL#') || '|||' || -- hash from: category/coding/system (proc_category_system)
          COALESCE(db.to_char_immutable(proc_category_version), '#NULL#') || '|||' || -- hash from: category/coding/version (proc_category_version)
          COALESCE(db.to_char_immutable(proc_category_code), '#NULL#') || '|||' || -- hash from: category/coding/code (proc_category_code)
          COALESCE(db.to_char_immutable(proc_category_display), '#NULL#') || '|||' || -- hash from: category/coding/display (proc_category_display)
          COALESCE(db.to_char_immutable(proc_category_text), '#NULL#') || '|||' || -- hash from: category/text (proc_category_text)
          COALESCE(db.to_char_immutable(proc_code_system), '#NULL#') || '|||' || -- hash from: code/coding/system (proc_code_system)
          COALESCE(db.to_char_immutable(proc_code_version), '#NULL#') || '|||' || -- hash from: code/coding/version (proc_code_version)
          COALESCE(db.to_char_immutable(proc_code_code), '#NULL#') || '|||' || -- hash from: code/coding/code (proc_code_code)
          COALESCE(db.to_char_immutable(proc_code_display), '#NULL#') || '|||' || -- hash from: code/coding/display (proc_code_display)
          COALESCE(db.to_char_immutable(proc_code_text), '#NULL#') || '|||' || -- hash from: code/text (proc_code_text)
          COALESCE(db.to_char_immutable(proc_performeddatetime), '#NULL#') || '|||' || -- hash from: performedDateTime (proc_performeddatetime)
          COALESCE(db.to_char_immutable(proc_performedperiod_start), '#NULL#') || '|||' || -- hash from: performedPeriod/start (proc_performedperiod_start)
          COALESCE(db.to_char_immutable(proc_performedperiod_end), '#NULL#') || '|||' || -- hash from: performedPeriod/end (proc_performedperiod_end)
          COALESCE(db.to_char_immutable(proc_reasoncode_system), '#NULL#') || '|||' || -- hash from: reasonCode/coding/system (proc_reasoncode_system)
          COALESCE(db.to_char_immutable(proc_reasoncode_version), '#NULL#') || '|||' || -- hash from: reasonCode/coding/version (proc_reasoncode_version)
          COALESCE(db.to_char_immutable(proc_reasoncode_code), '#NULL#') || '|||' || -- hash from: reasonCode/coding/code (proc_reasoncode_code)
          COALESCE(db.to_char_immutable(proc_reasoncode_display), '#NULL#') || '|||' || -- hash from: reasonCode/coding/display (proc_reasoncode_display)
          COALESCE(db.to_char_immutable(proc_reasoncode_text), '#NULL#') || '|||' || -- hash from: reasonCode/text (proc_reasoncode_text)
          COALESCE(db.to_char_immutable(proc_reasonreference_ref), '#NULL#') || '|||' || -- hash from: reasonReference/reference (proc_reasonreference_ref)
          COALESCE(db.to_char_immutable(proc_reasonreference_type), '#NULL#') || '|||' || -- hash from: reasonReference/type (proc_reasonreference_type)
          COALESCE(db.to_char_immutable(proc_reasonreference_identifier_use), '#NULL#') || '|||' || -- hash from: reasonReference/identifier/use (proc_reasonreference_identifier_use)
          COALESCE(db.to_char_immutable(proc_reasonreference_identifier_type_system), '#NULL#') || '|||' || -- hash from: reasonReference/identifier/type/coding/system (proc_reasonreference_identifier_type_system)
          COALESCE(db.to_char_immutable(proc_reasonreference_identifier_type_version), '#NULL#') || '|||' || -- hash from: reasonReference/identifier/type/coding/version (proc_reasonreference_identifier_type_version)
          COALESCE(db.to_char_immutable(proc_reasonreference_identifier_type_code), '#NULL#') || '|||' || -- hash from: reasonReference/identifier/type/coding/code (proc_reasonreference_identifier_type_code)
          COALESCE(db.to_char_immutable(proc_reasonreference_identifier_type_display), '#NULL#') || '|||' || -- hash from: reasonReference/identifier/type/coding/display (proc_reasonreference_identifier_type_display)
          COALESCE(db.to_char_immutable(proc_reasonreference_identifier_type_text), '#NULL#') || '|||' || -- hash from: reasonReference/identifier/type/text (proc_reasonreference_identifier_type_text)
          COALESCE(db.to_char_immutable(proc_reasonreference_identifier_system), '#NULL#') || '|||' || -- hash from: reasonReference/identifier/system (proc_reasonreference_identifier_system)
          COALESCE(db.to_char_immutable(proc_reasonreference_identifier_value), '#NULL#') || '|||' || -- hash from: reasonReference/identifier/value (proc_reasonreference_identifier_value)
          COALESCE(db.to_char_immutable(proc_reasonreference_display), '#NULL#') || '|||' || -- hash from: reasonReference/display (proc_reasonreference_display)
          COALESCE(db.to_char_immutable(proc_note_authorstring), '#NULL#') || '|||' || -- hash from: note/authorString (proc_note_authorstring)
          COALESCE(db.to_char_immutable(proc_note_authorreference_ref), '#NULL#') || '|||' || -- hash from: note/authorReference/reference (proc_note_authorreference_ref)
          COALESCE(db.to_char_immutable(proc_note_authorreference_type), '#NULL#') || '|||' || -- hash from: note/authorReference/type (proc_note_authorreference_type)
          COALESCE(db.to_char_immutable(proc_note_authorreference_identifier_use), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/use (proc_note_authorreference_identifier_use)
          COALESCE(db.to_char_immutable(proc_note_authorreference_identifier_type_system), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/type/coding/system (proc_note_authorreference_identifier_type_system)
          COALESCE(db.to_char_immutable(proc_note_authorreference_identifier_type_version), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/type/coding/version (proc_note_authorreference_identifier_type_version)
          COALESCE(db.to_char_immutable(proc_note_authorreference_identifier_type_code), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/type/coding/code (proc_note_authorreference_identifier_type_code)
          COALESCE(db.to_char_immutable(proc_note_authorreference_identifier_type_display), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/type/coding/display (proc_note_authorreference_identifier_type_display)
          COALESCE(db.to_char_immutable(proc_note_authorreference_identifier_type_text), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/type/text (proc_note_authorreference_identifier_type_text)
          COALESCE(db.to_char_immutable(proc_note_authorreference_identifier_system), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/system (proc_note_authorreference_identifier_system)
          COALESCE(db.to_char_immutable(proc_note_authorreference_identifier_value), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/value (proc_note_authorreference_identifier_value)
          COALESCE(db.to_char_immutable(proc_note_authorreference_display), '#NULL#') || '|||' || -- hash from: note/authorReference/display (proc_note_authorreference_display)
          COALESCE(db.to_char_immutable(proc_note_time), '#NULL#') || '|||' || -- hash from: note/time (proc_note_time)
          COALESCE(db.to_char_immutable(proc_note_text), '#NULL#') || '|||' || -- hash from: note/text (proc_note_text)
                 '#'
               )
            ) STORED; -- Column for hash value for comparing FHIR data - collion check in second step hash_index_col
            END IF; -- currend hash definition
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'procedure'
            AND column_name = 'hash_index_col'
        ) THEN
            -- Creating the hash column
            ALTER TABLE cds2db_in.procedure ADD
            hash_index_col TEXT GENERATED ALWAYS AS (
            md5(
	         COALESCE(db.to_char_immutable(proc_id), '#NULL#') || '|||' || -- hash from: id (proc_id)
          COALESCE(db.to_char_immutable(proc_identifier_use), '#NULL#') || '|||' || -- hash from: identifier/use (proc_identifier_use)
          COALESCE(db.to_char_immutable(proc_identifier_type_system), '#NULL#') || '|||' || -- hash from: identifier/type/coding/system (proc_identifier_type_system)
          COALESCE(db.to_char_immutable(proc_identifier_type_version), '#NULL#') || '|||' || -- hash from: identifier/type/coding/version (proc_identifier_type_version)
          COALESCE(db.to_char_immutable(proc_identifier_type_code), '#NULL#') || '|||' || -- hash from: identifier/type/coding/code (proc_identifier_type_code)
          COALESCE(db.to_char_immutable(proc_identifier_type_display), '#NULL#') || '|||' || -- hash from: identifier/type/coding/display (proc_identifier_type_display)
          COALESCE(db.to_char_immutable(proc_identifier_type_text), '#NULL#') || '|||' || -- hash from: identifier/type/text (proc_identifier_type_text)
          COALESCE(db.to_char_immutable(proc_identifier_system), '#NULL#') || '|||' || -- hash from: identifier/system (proc_identifier_system)
          COALESCE(db.to_char_immutable(proc_identifier_value), '#NULL#') || '|||' || -- hash from: identifier/value (proc_identifier_value)
          COALESCE(db.to_char_immutable(proc_identifier_start), '#NULL#') || '|||' || -- hash from: identifier/start (proc_identifier_start)
          COALESCE(db.to_char_immutable(proc_identifier_end), '#NULL#') || '|||' || -- hash from: identifier/end (proc_identifier_end)
          COALESCE(db.to_char_immutable(proc_encounter_ref), '#NULL#') || '|||' || -- hash from: encounter/reference (proc_encounter_ref)
          COALESCE(db.to_char_immutable(proc_patient_ref), '#NULL#') || '|||' || -- hash from: subject/reference (proc_patient_ref)
          COALESCE(db.to_char_immutable(proc_partof_ref), '#NULL#') || '|||' || -- hash from: partOf/reference (proc_partof_ref)
          COALESCE(db.to_char_immutable(proc_basedon_ref), '#NULL#') || '|||' || -- hash from: basedOn/reference (proc_basedon_ref)
          COALESCE(db.to_char_immutable(proc_basedon_type), '#NULL#') || '|||' || -- hash from: basedOn/type (proc_basedon_type)
          COALESCE(db.to_char_immutable(proc_basedon_identifier_use), '#NULL#') || '|||' || -- hash from: basedOn/identifier/use (proc_basedon_identifier_use)
          COALESCE(db.to_char_immutable(proc_basedon_identifier_type_system), '#NULL#') || '|||' || -- hash from: basedOn/identifier/type/coding/system (proc_basedon_identifier_type_system)
          COALESCE(db.to_char_immutable(proc_basedon_identifier_type_version), '#NULL#') || '|||' || -- hash from: basedOn/identifier/type/coding/version (proc_basedon_identifier_type_version)
          COALESCE(db.to_char_immutable(proc_basedon_identifier_type_code), '#NULL#') || '|||' || -- hash from: basedOn/identifier/type/coding/code (proc_basedon_identifier_type_code)
          COALESCE(db.to_char_immutable(proc_basedon_identifier_type_display), '#NULL#') || '|||' || -- hash from: basedOn/identifier/type/coding/display (proc_basedon_identifier_type_display)
          COALESCE(db.to_char_immutable(proc_basedon_identifier_type_text), '#NULL#') || '|||' || -- hash from: basedOn/identifier/type/text (proc_basedon_identifier_type_text)
          COALESCE(db.to_char_immutable(proc_basedon_identifier_system), '#NULL#') || '|||' || -- hash from: basedOn/identifier/system (proc_basedon_identifier_system)
          COALESCE(db.to_char_immutable(proc_basedon_identifier_value), '#NULL#') || '|||' || -- hash from: basedOn/identifier/value (proc_basedon_identifier_value)
          COALESCE(db.to_char_immutable(proc_basedon_display), '#NULL#') || '|||' || -- hash from: basedOn/display (proc_basedon_display)
          COALESCE(db.to_char_immutable(proc_status), '#NULL#') || '|||' || -- hash from: status (proc_status)
          COALESCE(db.to_char_immutable(proc_statusreason_system), '#NULL#') || '|||' || -- hash from: statusReason/coding/system (proc_statusreason_system)
          COALESCE(db.to_char_immutable(proc_statusreason_version), '#NULL#') || '|||' || -- hash from: statusReason/coding/version (proc_statusreason_version)
          COALESCE(db.to_char_immutable(proc_statusreason_code), '#NULL#') || '|||' || -- hash from: statusReason/coding/code (proc_statusreason_code)
          COALESCE(db.to_char_immutable(proc_statusreason_display), '#NULL#') || '|||' || -- hash from: statusReason/coding/display (proc_statusreason_display)
          COALESCE(db.to_char_immutable(proc_statusreason_text), '#NULL#') || '|||' || -- hash from: statusReason/text (proc_statusreason_text)
          COALESCE(db.to_char_immutable(proc_category_system), '#NULL#') || '|||' || -- hash from: category/coding/system (proc_category_system)
          COALESCE(db.to_char_immutable(proc_category_version), '#NULL#') || '|||' || -- hash from: category/coding/version (proc_category_version)
          COALESCE(db.to_char_immutable(proc_category_code), '#NULL#') || '|||' || -- hash from: category/coding/code (proc_category_code)
          COALESCE(db.to_char_immutable(proc_category_display), '#NULL#') || '|||' || -- hash from: category/coding/display (proc_category_display)
          COALESCE(db.to_char_immutable(proc_category_text), '#NULL#') || '|||' || -- hash from: category/text (proc_category_text)
          COALESCE(db.to_char_immutable(proc_code_system), '#NULL#') || '|||' || -- hash from: code/coding/system (proc_code_system)
          COALESCE(db.to_char_immutable(proc_code_version), '#NULL#') || '|||' || -- hash from: code/coding/version (proc_code_version)
          COALESCE(db.to_char_immutable(proc_code_code), '#NULL#') || '|||' || -- hash from: code/coding/code (proc_code_code)
          COALESCE(db.to_char_immutable(proc_code_display), '#NULL#') || '|||' || -- hash from: code/coding/display (proc_code_display)
          COALESCE(db.to_char_immutable(proc_code_text), '#NULL#') || '|||' || -- hash from: code/text (proc_code_text)
          COALESCE(db.to_char_immutable(proc_performeddatetime), '#NULL#') || '|||' || -- hash from: performedDateTime (proc_performeddatetime)
          COALESCE(db.to_char_immutable(proc_performedperiod_start), '#NULL#') || '|||' || -- hash from: performedPeriod/start (proc_performedperiod_start)
          COALESCE(db.to_char_immutable(proc_performedperiod_end), '#NULL#') || '|||' || -- hash from: performedPeriod/end (proc_performedperiod_end)
          COALESCE(db.to_char_immutable(proc_reasoncode_system), '#NULL#') || '|||' || -- hash from: reasonCode/coding/system (proc_reasoncode_system)
          COALESCE(db.to_char_immutable(proc_reasoncode_version), '#NULL#') || '|||' || -- hash from: reasonCode/coding/version (proc_reasoncode_version)
          COALESCE(db.to_char_immutable(proc_reasoncode_code), '#NULL#') || '|||' || -- hash from: reasonCode/coding/code (proc_reasoncode_code)
          COALESCE(db.to_char_immutable(proc_reasoncode_display), '#NULL#') || '|||' || -- hash from: reasonCode/coding/display (proc_reasoncode_display)
          COALESCE(db.to_char_immutable(proc_reasoncode_text), '#NULL#') || '|||' || -- hash from: reasonCode/text (proc_reasoncode_text)
          COALESCE(db.to_char_immutable(proc_reasonreference_ref), '#NULL#') || '|||' || -- hash from: reasonReference/reference (proc_reasonreference_ref)
          COALESCE(db.to_char_immutable(proc_reasonreference_type), '#NULL#') || '|||' || -- hash from: reasonReference/type (proc_reasonreference_type)
          COALESCE(db.to_char_immutable(proc_reasonreference_identifier_use), '#NULL#') || '|||' || -- hash from: reasonReference/identifier/use (proc_reasonreference_identifier_use)
          COALESCE(db.to_char_immutable(proc_reasonreference_identifier_type_system), '#NULL#') || '|||' || -- hash from: reasonReference/identifier/type/coding/system (proc_reasonreference_identifier_type_system)
          COALESCE(db.to_char_immutable(proc_reasonreference_identifier_type_version), '#NULL#') || '|||' || -- hash from: reasonReference/identifier/type/coding/version (proc_reasonreference_identifier_type_version)
          COALESCE(db.to_char_immutable(proc_reasonreference_identifier_type_code), '#NULL#') || '|||' || -- hash from: reasonReference/identifier/type/coding/code (proc_reasonreference_identifier_type_code)
          COALESCE(db.to_char_immutable(proc_reasonreference_identifier_type_display), '#NULL#') || '|||' || -- hash from: reasonReference/identifier/type/coding/display (proc_reasonreference_identifier_type_display)
          COALESCE(db.to_char_immutable(proc_reasonreference_identifier_type_text), '#NULL#') || '|||' || -- hash from: reasonReference/identifier/type/text (proc_reasonreference_identifier_type_text)
          COALESCE(db.to_char_immutable(proc_reasonreference_identifier_system), '#NULL#') || '|||' || -- hash from: reasonReference/identifier/system (proc_reasonreference_identifier_system)
          COALESCE(db.to_char_immutable(proc_reasonreference_identifier_value), '#NULL#') || '|||' || -- hash from: reasonReference/identifier/value (proc_reasonreference_identifier_value)
          COALESCE(db.to_char_immutable(proc_reasonreference_display), '#NULL#') || '|||' || -- hash from: reasonReference/display (proc_reasonreference_display)
          COALESCE(db.to_char_immutable(proc_note_authorstring), '#NULL#') || '|||' || -- hash from: note/authorString (proc_note_authorstring)
          COALESCE(db.to_char_immutable(proc_note_authorreference_ref), '#NULL#') || '|||' || -- hash from: note/authorReference/reference (proc_note_authorreference_ref)
          COALESCE(db.to_char_immutable(proc_note_authorreference_type), '#NULL#') || '|||' || -- hash from: note/authorReference/type (proc_note_authorreference_type)
          COALESCE(db.to_char_immutable(proc_note_authorreference_identifier_use), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/use (proc_note_authorreference_identifier_use)
          COALESCE(db.to_char_immutable(proc_note_authorreference_identifier_type_system), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/type/coding/system (proc_note_authorreference_identifier_type_system)
          COALESCE(db.to_char_immutable(proc_note_authorreference_identifier_type_version), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/type/coding/version (proc_note_authorreference_identifier_type_version)
          COALESCE(db.to_char_immutable(proc_note_authorreference_identifier_type_code), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/type/coding/code (proc_note_authorreference_identifier_type_code)
          COALESCE(db.to_char_immutable(proc_note_authorreference_identifier_type_display), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/type/coding/display (proc_note_authorreference_identifier_type_display)
          COALESCE(db.to_char_immutable(proc_note_authorreference_identifier_type_text), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/type/text (proc_note_authorreference_identifier_type_text)
          COALESCE(db.to_char_immutable(proc_note_authorreference_identifier_system), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/system (proc_note_authorreference_identifier_system)
          COALESCE(db.to_char_immutable(proc_note_authorreference_identifier_value), '#NULL#') || '|||' || -- hash from: note/authorReference/identifier/value (proc_note_authorreference_identifier_value)
          COALESCE(db.to_char_immutable(proc_note_authorreference_display), '#NULL#') || '|||' || -- hash from: note/authorReference/display (proc_note_authorreference_display)
          COALESCE(db.to_char_immutable(proc_note_time), '#NULL#') || '|||' || -- hash from: note/time (proc_note_time)
          COALESCE(db.to_char_immutable(proc_note_text), '#NULL#') || '|||' || -- hash from: note/text (proc_note_text)
                 '#'
               )
            ) STORED; -- Column for hash value for comparing FHIR data - collion check in second step hash_index_col
        END IF; -- column
    END IF; -- Table
END
$$;
-- Table "consent" in schema "cds2db_in"
-------------------------------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS cds2db_in.consent (
  consent_id int PRIMARY KEY DEFAULT nextval('db.db_seq') -- Primary key of the entity
);

DO
$$
DECLARE
    IF EXISTS ( -- Table exists
        SELECT 1 FROM information_schema.columns 
        WHERE table_schema = 'cds2db_in' AND table_name = 'consent'
    ) THEN
        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'consent'
            AND column_name = 'input_datetime'
        ) THEN
            ALTER TABLE cds2db_in.consent ADD consent_raw_id int NOT NULL; -- Primary key of the corresponding raw table
            NULL;
        END IF; -- column

-- Organizational items - fixed for each database table -----------------------------------------
        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'consent'
            AND column_name = 'input_datetime'
        ) THEN
            ALTER TABLE cds2db_in.consent ADD input_datetime TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP; -- Time at which data record was created
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'consent'
            AND column_name = 'last_check_datetime'
        ) THEN
            ALTER TABLE cds2db_in.consent ADD last_check_datetime TIMESTAMP DEFAULT NULL; -- Time at which data record was last checked
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'consent'
            AND column_name = 'current_dataset_status'
        ) THEN
            ALTER TABLE cds2db_in.consent ADD current_dataset_status VARCHAR DEFAULT 'input'; -- Processing status of the data record
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'consent'
            AND column_name = 'input_processing_nr'
        ) THEN
            ALTER TABLE cds2db_in.consent ADD input_processing_nr INT; -- (First) Processing number of the data record
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'consent'
            AND column_name = 'last_processing_nr'
        ) THEN
            ALTER TABLE cds2db_in.consent ADD last_processing_nr INT; -- Last processing number of the data record
        END IF; -- column

-- Data-leading columns -------------------------------------------------------------------------
        IF NOT EXISTS ( -- column not exists (cons_id)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'consent'
            AND column_name = 'cons_id'
        ) THEN
            ALTER TABLE cds2db_in.consent ADD cons_id varchar;   -- id (varchar)
        END IF; -- column (cons_id)
        IF NOT EXISTS ( -- column not exists (cons_meta_versionid)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'consent'
            AND column_name = 'cons_meta_versionid'
        ) THEN
            ALTER TABLE cds2db_in.consent ADD cons_meta_versionid varchar;   -- meta/versionId (varchar)
        END IF; -- column (cons_meta_versionid)
        IF NOT EXISTS ( -- column not exists (cons_meta_lastupdated)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'consent'
            AND column_name = 'cons_meta_lastupdated'
        ) THEN
            ALTER TABLE cds2db_in.consent ADD cons_meta_lastupdated timestamp;   -- meta/lastUpdated (timestamp)
        END IF; -- column (cons_meta_lastupdated)
        IF NOT EXISTS ( -- column not exists (cons_meta_profile)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'consent'
            AND column_name = 'cons_meta_profile'
        ) THEN
            ALTER TABLE cds2db_in.consent ADD cons_meta_profile varchar;   -- meta/profile (varchar)
        END IF; -- column (cons_meta_profile)
        IF NOT EXISTS ( -- column not exists (cons_identifier_use)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'consent'
            AND column_name = 'cons_identifier_use'
        ) THEN
            ALTER TABLE cds2db_in.consent ADD cons_identifier_use varchar;   -- identifier/use (varchar)
        END IF; -- column (cons_identifier_use)
        IF NOT EXISTS ( -- column not exists (cons_identifier_type_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'consent'
            AND column_name = 'cons_identifier_type_system'
        ) THEN
            ALTER TABLE cds2db_in.consent ADD cons_identifier_type_system varchar;   -- identifier/type/coding/system (varchar)
        END IF; -- column (cons_identifier_type_system)
        IF NOT EXISTS ( -- column not exists (cons_identifier_type_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'consent'
            AND column_name = 'cons_identifier_type_version'
        ) THEN
            ALTER TABLE cds2db_in.consent ADD cons_identifier_type_version varchar;   -- identifier/type/coding/version (varchar)
        END IF; -- column (cons_identifier_type_version)
        IF NOT EXISTS ( -- column not exists (cons_identifier_type_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'consent'
            AND column_name = 'cons_identifier_type_code'
        ) THEN
            ALTER TABLE cds2db_in.consent ADD cons_identifier_type_code varchar;   -- identifier/type/coding/code (varchar)
        END IF; -- column (cons_identifier_type_code)
        IF NOT EXISTS ( -- column not exists (cons_identifier_type_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'consent'
            AND column_name = 'cons_identifier_type_display'
        ) THEN
            ALTER TABLE cds2db_in.consent ADD cons_identifier_type_display varchar;   -- identifier/type/coding/display (varchar)
        END IF; -- column (cons_identifier_type_display)
        IF NOT EXISTS ( -- column not exists (cons_identifier_type_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'consent'
            AND column_name = 'cons_identifier_type_text'
        ) THEN
            ALTER TABLE cds2db_in.consent ADD cons_identifier_type_text varchar;   -- identifier/type/text (varchar)
        END IF; -- column (cons_identifier_type_text)
        IF NOT EXISTS ( -- column not exists (cons_identifier_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'consent'
            AND column_name = 'cons_identifier_system'
        ) THEN
            ALTER TABLE cds2db_in.consent ADD cons_identifier_system varchar;   -- identifier/system (varchar)
        END IF; -- column (cons_identifier_system)
        IF NOT EXISTS ( -- column not exists (cons_identifier_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'consent'
            AND column_name = 'cons_identifier_value'
        ) THEN
            ALTER TABLE cds2db_in.consent ADD cons_identifier_value varchar;   -- identifier/value (varchar)
        END IF; -- column (cons_identifier_value)
        IF NOT EXISTS ( -- column not exists (cons_identifier_start)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'consent'
            AND column_name = 'cons_identifier_start'
        ) THEN
            ALTER TABLE cds2db_in.consent ADD cons_identifier_start timestamp;   -- identifier/start (timestamp)
        END IF; -- column (cons_identifier_start)
        IF NOT EXISTS ( -- column not exists (cons_identifier_end)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'consent'
            AND column_name = 'cons_identifier_end'
        ) THEN
            ALTER TABLE cds2db_in.consent ADD cons_identifier_end timestamp;   -- identifier/end (timestamp)
        END IF; -- column (cons_identifier_end)
        IF NOT EXISTS ( -- column not exists (cons_patient_ref)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'consent'
            AND column_name = 'cons_patient_ref'
        ) THEN
            ALTER TABLE cds2db_in.consent ADD cons_patient_ref varchar;   -- patient/reference (varchar)
        END IF; -- column (cons_patient_ref)
        IF NOT EXISTS ( -- column not exists (cons_status)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'consent'
            AND column_name = 'cons_status'
        ) THEN
            ALTER TABLE cds2db_in.consent ADD cons_status varchar;   -- status (varchar)
        END IF; -- column (cons_status)
        IF NOT EXISTS ( -- column not exists (cons_scope_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'consent'
            AND column_name = 'cons_scope_system'
        ) THEN
            ALTER TABLE cds2db_in.consent ADD cons_scope_system varchar;   -- scope/coding/system (varchar)
        END IF; -- column (cons_scope_system)
        IF NOT EXISTS ( -- column not exists (cons_scope_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'consent'
            AND column_name = 'cons_scope_version'
        ) THEN
            ALTER TABLE cds2db_in.consent ADD cons_scope_version varchar;   -- scope/coding/version (varchar)
        END IF; -- column (cons_scope_version)
        IF NOT EXISTS ( -- column not exists (cons_scope_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'consent'
            AND column_name = 'cons_scope_code'
        ) THEN
            ALTER TABLE cds2db_in.consent ADD cons_scope_code varchar;   -- scope/coding/code (varchar)
        END IF; -- column (cons_scope_code)
        IF NOT EXISTS ( -- column not exists (cons_scope_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'consent'
            AND column_name = 'cons_scope_display'
        ) THEN
            ALTER TABLE cds2db_in.consent ADD cons_scope_display varchar;   -- scope/coding/display (varchar)
        END IF; -- column (cons_scope_display)
        IF NOT EXISTS ( -- column not exists (cons_scope_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'consent'
            AND column_name = 'cons_scope_text'
        ) THEN
            ALTER TABLE cds2db_in.consent ADD cons_scope_text varchar;   -- scope/text (varchar)
        END IF; -- column (cons_scope_text)
        IF NOT EXISTS ( -- column not exists (cons_datetime)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'consent'
            AND column_name = 'cons_datetime'
        ) THEN
            ALTER TABLE cds2db_in.consent ADD cons_datetime timestamp;   -- dateTime (timestamp)
        END IF; -- column (cons_datetime)
        IF NOT EXISTS ( -- column not exists (cons_provision_type)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'consent'
            AND column_name = 'cons_provision_type'
        ) THEN
            ALTER TABLE cds2db_in.consent ADD cons_provision_type varchar;   -- provision/type (varchar)
        END IF; -- column (cons_provision_type)
        IF NOT EXISTS ( -- column not exists (cons_provision_period_start)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'consent'
            AND column_name = 'cons_provision_period_start'
        ) THEN
            ALTER TABLE cds2db_in.consent ADD cons_provision_period_start timestamp;   -- provision/period/start (timestamp)
        END IF; -- column (cons_provision_period_start)
        IF NOT EXISTS ( -- column not exists (cons_provision_period_end)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'consent'
            AND column_name = 'cons_provision_period_end'
        ) THEN
            ALTER TABLE cds2db_in.consent ADD cons_provision_period_end timestamp;   -- provision/period/end (timestamp)
        END IF; -- column (cons_provision_period_end)
        IF NOT EXISTS ( -- column not exists (cons_provision_actor_role_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'consent'
            AND column_name = 'cons_provision_actor_role_system'
        ) THEN
            ALTER TABLE cds2db_in.consent ADD cons_provision_actor_role_system varchar;   -- provision/actor/role/coding/system (varchar)
        END IF; -- column (cons_provision_actor_role_system)
        IF NOT EXISTS ( -- column not exists (cons_provision_actor_role_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'consent'
            AND column_name = 'cons_provision_actor_role_version'
        ) THEN
            ALTER TABLE cds2db_in.consent ADD cons_provision_actor_role_version varchar;   -- provision/actor/role/coding/version (varchar)
        END IF; -- column (cons_provision_actor_role_version)
        IF NOT EXISTS ( -- column not exists (cons_provision_actor_role_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'consent'
            AND column_name = 'cons_provision_actor_role_code'
        ) THEN
            ALTER TABLE cds2db_in.consent ADD cons_provision_actor_role_code varchar;   -- provision/actor/role/coding/code (varchar)
        END IF; -- column (cons_provision_actor_role_code)
        IF NOT EXISTS ( -- column not exists (cons_provision_actor_role_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'consent'
            AND column_name = 'cons_provision_actor_role_display'
        ) THEN
            ALTER TABLE cds2db_in.consent ADD cons_provision_actor_role_display varchar;   -- provision/actor/role/coding/display (varchar)
        END IF; -- column (cons_provision_actor_role_display)
        IF NOT EXISTS ( -- column not exists (cons_provision_actor_role_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'consent'
            AND column_name = 'cons_provision_actor_role_text'
        ) THEN
            ALTER TABLE cds2db_in.consent ADD cons_provision_actor_role_text varchar;   -- provision/actor/role/text (varchar)
        END IF; -- column (cons_provision_actor_role_text)
        IF NOT EXISTS ( -- column not exists (cons_provision_code_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'consent'
            AND column_name = 'cons_provision_code_system'
        ) THEN
            ALTER TABLE cds2db_in.consent ADD cons_provision_code_system varchar;   -- provision/code/coding/system (varchar)
        END IF; -- column (cons_provision_code_system)
        IF NOT EXISTS ( -- column not exists (cons_provision_code_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'consent'
            AND column_name = 'cons_provision_code_version'
        ) THEN
            ALTER TABLE cds2db_in.consent ADD cons_provision_code_version varchar;   -- provision/code/coding/version (varchar)
        END IF; -- column (cons_provision_code_version)
        IF NOT EXISTS ( -- column not exists (cons_provision_code_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'consent'
            AND column_name = 'cons_provision_code_code'
        ) THEN
            ALTER TABLE cds2db_in.consent ADD cons_provision_code_code varchar;   -- provision/code/coding/code (varchar)
        END IF; -- column (cons_provision_code_code)
        IF NOT EXISTS ( -- column not exists (cons_provision_code_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'consent'
            AND column_name = 'cons_provision_code_display'
        ) THEN
            ALTER TABLE cds2db_in.consent ADD cons_provision_code_display varchar;   -- provision/code/coding/display (varchar)
        END IF; -- column (cons_provision_code_display)
        IF NOT EXISTS ( -- column not exists (cons_provision_code_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'consent'
            AND column_name = 'cons_provision_code_text'
        ) THEN
            ALTER TABLE cds2db_in.consent ADD cons_provision_code_text varchar;   -- provision/code/text (varchar)
        END IF; -- column (cons_provision_code_text)
        IF NOT EXISTS ( -- column not exists (cons_provision_dataperiod_start)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'consent'
            AND column_name = 'cons_provision_dataperiod_start'
        ) THEN
            ALTER TABLE cds2db_in.consent ADD cons_provision_dataperiod_start timestamp;   -- provision/dataPeriod/start (timestamp)
        END IF; -- column (cons_provision_dataperiod_start)
        IF NOT EXISTS ( -- column not exists (cons_provision_dataperiod_end)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'consent'
            AND column_name = 'cons_provision_dataperiod_end'
        ) THEN
            ALTER TABLE cds2db_in.consent ADD cons_provision_dataperiod_end timestamp;   -- provision/dataPeriod/end (timestamp)
        END IF; -- column (cons_provision_dataperiod_end)

-- Hash column for comparison on data-bearing columns -------------------------------------------
        IF EXISTS ( -- column exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'consent' AND column_name = 'hash_index_col'
        ) THEN
            IF NOT EXISTS ( -- column exists
                SELECT 1 FROM information_schema.columns WHERE table_schema = 'cds2db_in' AND table_name = 'consent' AND column_name = 'hash_index_col'
                AND trim(replace(replace(generation_expression::TEXT,'(',''),')','')) != trim(replace(replace('
	         COALESCE(db.to_char_immutable(cons_id), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(cons_identifier_use), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(cons_identifier_type_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(cons_identifier_type_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(cons_identifier_type_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(cons_identifier_type_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(cons_identifier_type_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(cons_identifier_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(cons_identifier_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(cons_identifier_start), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(cons_identifier_end), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(cons_patient_ref), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(cons_status), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(cons_scope_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(cons_scope_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(cons_scope_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(cons_scope_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(cons_scope_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(cons_datetime), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(cons_provision_type), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(cons_provision_period_start), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(cons_provision_period_end), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(cons_provision_actor_role_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(cons_provision_actor_role_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(cons_provision_actor_role_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(cons_provision_actor_role_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(cons_provision_actor_role_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(cons_provision_code_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(cons_provision_code_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(cons_provision_code_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(cons_provision_code_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(cons_provision_code_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(cons_provision_dataperiod_start), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(cons_provision_dataperiod_end), ''#NULL#'') || ''|||'' ||''#''
                ','(',''),')',''))
            ) THEN
            -- Delete the old hash column so that a new one can be created
            ALTER TABLE cds2db_in.consent DROP COLUMN hash_index_col;

            -- Creating the hash column
            ALTER TABLE cds2db_in.consent ADD
            hash_index_col TEXT GENERATED ALWAYS AS (
            md5(
	         COALESCE(db.to_char_immutable(cons_id), '#NULL#') || '|||' || -- hash from: id (cons_id)
          COALESCE(db.to_char_immutable(cons_identifier_use), '#NULL#') || '|||' || -- hash from: identifier/use (cons_identifier_use)
          COALESCE(db.to_char_immutable(cons_identifier_type_system), '#NULL#') || '|||' || -- hash from: identifier/type/coding/system (cons_identifier_type_system)
          COALESCE(db.to_char_immutable(cons_identifier_type_version), '#NULL#') || '|||' || -- hash from: identifier/type/coding/version (cons_identifier_type_version)
          COALESCE(db.to_char_immutable(cons_identifier_type_code), '#NULL#') || '|||' || -- hash from: identifier/type/coding/code (cons_identifier_type_code)
          COALESCE(db.to_char_immutable(cons_identifier_type_display), '#NULL#') || '|||' || -- hash from: identifier/type/coding/display (cons_identifier_type_display)
          COALESCE(db.to_char_immutable(cons_identifier_type_text), '#NULL#') || '|||' || -- hash from: identifier/type/text (cons_identifier_type_text)
          COALESCE(db.to_char_immutable(cons_identifier_system), '#NULL#') || '|||' || -- hash from: identifier/system (cons_identifier_system)
          COALESCE(db.to_char_immutable(cons_identifier_value), '#NULL#') || '|||' || -- hash from: identifier/value (cons_identifier_value)
          COALESCE(db.to_char_immutable(cons_identifier_start), '#NULL#') || '|||' || -- hash from: identifier/start (cons_identifier_start)
          COALESCE(db.to_char_immutable(cons_identifier_end), '#NULL#') || '|||' || -- hash from: identifier/end (cons_identifier_end)
          COALESCE(db.to_char_immutable(cons_patient_ref), '#NULL#') || '|||' || -- hash from: patient/reference (cons_patient_ref)
          COALESCE(db.to_char_immutable(cons_status), '#NULL#') || '|||' || -- hash from: status (cons_status)
          COALESCE(db.to_char_immutable(cons_scope_system), '#NULL#') || '|||' || -- hash from: scope/coding/system (cons_scope_system)
          COALESCE(db.to_char_immutable(cons_scope_version), '#NULL#') || '|||' || -- hash from: scope/coding/version (cons_scope_version)
          COALESCE(db.to_char_immutable(cons_scope_code), '#NULL#') || '|||' || -- hash from: scope/coding/code (cons_scope_code)
          COALESCE(db.to_char_immutable(cons_scope_display), '#NULL#') || '|||' || -- hash from: scope/coding/display (cons_scope_display)
          COALESCE(db.to_char_immutable(cons_scope_text), '#NULL#') || '|||' || -- hash from: scope/text (cons_scope_text)
          COALESCE(db.to_char_immutable(cons_datetime), '#NULL#') || '|||' || -- hash from: dateTime (cons_datetime)
          COALESCE(db.to_char_immutable(cons_provision_type), '#NULL#') || '|||' || -- hash from: provision/type (cons_provision_type)
          COALESCE(db.to_char_immutable(cons_provision_period_start), '#NULL#') || '|||' || -- hash from: provision/period/start (cons_provision_period_start)
          COALESCE(db.to_char_immutable(cons_provision_period_end), '#NULL#') || '|||' || -- hash from: provision/period/end (cons_provision_period_end)
          COALESCE(db.to_char_immutable(cons_provision_actor_role_system), '#NULL#') || '|||' || -- hash from: provision/actor/role/coding/system (cons_provision_actor_role_system)
          COALESCE(db.to_char_immutable(cons_provision_actor_role_version), '#NULL#') || '|||' || -- hash from: provision/actor/role/coding/version (cons_provision_actor_role_version)
          COALESCE(db.to_char_immutable(cons_provision_actor_role_code), '#NULL#') || '|||' || -- hash from: provision/actor/role/coding/code (cons_provision_actor_role_code)
          COALESCE(db.to_char_immutable(cons_provision_actor_role_display), '#NULL#') || '|||' || -- hash from: provision/actor/role/coding/display (cons_provision_actor_role_display)
          COALESCE(db.to_char_immutable(cons_provision_actor_role_text), '#NULL#') || '|||' || -- hash from: provision/actor/role/text (cons_provision_actor_role_text)
          COALESCE(db.to_char_immutable(cons_provision_code_system), '#NULL#') || '|||' || -- hash from: provision/code/coding/system (cons_provision_code_system)
          COALESCE(db.to_char_immutable(cons_provision_code_version), '#NULL#') || '|||' || -- hash from: provision/code/coding/version (cons_provision_code_version)
          COALESCE(db.to_char_immutable(cons_provision_code_code), '#NULL#') || '|||' || -- hash from: provision/code/coding/code (cons_provision_code_code)
          COALESCE(db.to_char_immutable(cons_provision_code_display), '#NULL#') || '|||' || -- hash from: provision/code/coding/display (cons_provision_code_display)
          COALESCE(db.to_char_immutable(cons_provision_code_text), '#NULL#') || '|||' || -- hash from: provision/code/text (cons_provision_code_text)
          COALESCE(db.to_char_immutable(cons_provision_dataperiod_start), '#NULL#') || '|||' || -- hash from: provision/dataPeriod/start (cons_provision_dataperiod_start)
          COALESCE(db.to_char_immutable(cons_provision_dataperiod_end), '#NULL#') || '|||' || -- hash from: provision/dataPeriod/end (cons_provision_dataperiod_end)
                 '#'
               )
            ) STORED; -- Column for hash value for comparing FHIR data - collion check in second step hash_index_col
            END IF; -- currend hash definition
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'consent'
            AND column_name = 'hash_index_col'
        ) THEN
            -- Creating the hash column
            ALTER TABLE cds2db_in.consent ADD
            hash_index_col TEXT GENERATED ALWAYS AS (
            md5(
	         COALESCE(db.to_char_immutable(cons_id), '#NULL#') || '|||' || -- hash from: id (cons_id)
          COALESCE(db.to_char_immutable(cons_identifier_use), '#NULL#') || '|||' || -- hash from: identifier/use (cons_identifier_use)
          COALESCE(db.to_char_immutable(cons_identifier_type_system), '#NULL#') || '|||' || -- hash from: identifier/type/coding/system (cons_identifier_type_system)
          COALESCE(db.to_char_immutable(cons_identifier_type_version), '#NULL#') || '|||' || -- hash from: identifier/type/coding/version (cons_identifier_type_version)
          COALESCE(db.to_char_immutable(cons_identifier_type_code), '#NULL#') || '|||' || -- hash from: identifier/type/coding/code (cons_identifier_type_code)
          COALESCE(db.to_char_immutable(cons_identifier_type_display), '#NULL#') || '|||' || -- hash from: identifier/type/coding/display (cons_identifier_type_display)
          COALESCE(db.to_char_immutable(cons_identifier_type_text), '#NULL#') || '|||' || -- hash from: identifier/type/text (cons_identifier_type_text)
          COALESCE(db.to_char_immutable(cons_identifier_system), '#NULL#') || '|||' || -- hash from: identifier/system (cons_identifier_system)
          COALESCE(db.to_char_immutable(cons_identifier_value), '#NULL#') || '|||' || -- hash from: identifier/value (cons_identifier_value)
          COALESCE(db.to_char_immutable(cons_identifier_start), '#NULL#') || '|||' || -- hash from: identifier/start (cons_identifier_start)
          COALESCE(db.to_char_immutable(cons_identifier_end), '#NULL#') || '|||' || -- hash from: identifier/end (cons_identifier_end)
          COALESCE(db.to_char_immutable(cons_patient_ref), '#NULL#') || '|||' || -- hash from: patient/reference (cons_patient_ref)
          COALESCE(db.to_char_immutable(cons_status), '#NULL#') || '|||' || -- hash from: status (cons_status)
          COALESCE(db.to_char_immutable(cons_scope_system), '#NULL#') || '|||' || -- hash from: scope/coding/system (cons_scope_system)
          COALESCE(db.to_char_immutable(cons_scope_version), '#NULL#') || '|||' || -- hash from: scope/coding/version (cons_scope_version)
          COALESCE(db.to_char_immutable(cons_scope_code), '#NULL#') || '|||' || -- hash from: scope/coding/code (cons_scope_code)
          COALESCE(db.to_char_immutable(cons_scope_display), '#NULL#') || '|||' || -- hash from: scope/coding/display (cons_scope_display)
          COALESCE(db.to_char_immutable(cons_scope_text), '#NULL#') || '|||' || -- hash from: scope/text (cons_scope_text)
          COALESCE(db.to_char_immutable(cons_datetime), '#NULL#') || '|||' || -- hash from: dateTime (cons_datetime)
          COALESCE(db.to_char_immutable(cons_provision_type), '#NULL#') || '|||' || -- hash from: provision/type (cons_provision_type)
          COALESCE(db.to_char_immutable(cons_provision_period_start), '#NULL#') || '|||' || -- hash from: provision/period/start (cons_provision_period_start)
          COALESCE(db.to_char_immutable(cons_provision_period_end), '#NULL#') || '|||' || -- hash from: provision/period/end (cons_provision_period_end)
          COALESCE(db.to_char_immutable(cons_provision_actor_role_system), '#NULL#') || '|||' || -- hash from: provision/actor/role/coding/system (cons_provision_actor_role_system)
          COALESCE(db.to_char_immutable(cons_provision_actor_role_version), '#NULL#') || '|||' || -- hash from: provision/actor/role/coding/version (cons_provision_actor_role_version)
          COALESCE(db.to_char_immutable(cons_provision_actor_role_code), '#NULL#') || '|||' || -- hash from: provision/actor/role/coding/code (cons_provision_actor_role_code)
          COALESCE(db.to_char_immutable(cons_provision_actor_role_display), '#NULL#') || '|||' || -- hash from: provision/actor/role/coding/display (cons_provision_actor_role_display)
          COALESCE(db.to_char_immutable(cons_provision_actor_role_text), '#NULL#') || '|||' || -- hash from: provision/actor/role/text (cons_provision_actor_role_text)
          COALESCE(db.to_char_immutable(cons_provision_code_system), '#NULL#') || '|||' || -- hash from: provision/code/coding/system (cons_provision_code_system)
          COALESCE(db.to_char_immutable(cons_provision_code_version), '#NULL#') || '|||' || -- hash from: provision/code/coding/version (cons_provision_code_version)
          COALESCE(db.to_char_immutable(cons_provision_code_code), '#NULL#') || '|||' || -- hash from: provision/code/coding/code (cons_provision_code_code)
          COALESCE(db.to_char_immutable(cons_provision_code_display), '#NULL#') || '|||' || -- hash from: provision/code/coding/display (cons_provision_code_display)
          COALESCE(db.to_char_immutable(cons_provision_code_text), '#NULL#') || '|||' || -- hash from: provision/code/text (cons_provision_code_text)
          COALESCE(db.to_char_immutable(cons_provision_dataperiod_start), '#NULL#') || '|||' || -- hash from: provision/dataPeriod/start (cons_provision_dataperiod_start)
          COALESCE(db.to_char_immutable(cons_provision_dataperiod_end), '#NULL#') || '|||' || -- hash from: provision/dataPeriod/end (cons_provision_dataperiod_end)
                 '#'
               )
            ) STORED; -- Column for hash value for comparing FHIR data - collion check in second step hash_index_col
        END IF; -- column
    END IF; -- Table
END
$$;
-- Table "location" in schema "cds2db_in"
-------------------------------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS cds2db_in.location (
  location_id int PRIMARY KEY DEFAULT nextval('db.db_seq') -- Primary key of the entity
);

DO
$$
DECLARE
    IF EXISTS ( -- Table exists
        SELECT 1 FROM information_schema.columns 
        WHERE table_schema = 'cds2db_in' AND table_name = 'location'
    ) THEN
        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'location'
            AND column_name = 'input_datetime'
        ) THEN
            ALTER TABLE cds2db_in.location ADD location_raw_id int NOT NULL; -- Primary key of the corresponding raw table
            NULL;
        END IF; -- column

-- Organizational items - fixed for each database table -----------------------------------------
        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'location'
            AND column_name = 'input_datetime'
        ) THEN
            ALTER TABLE cds2db_in.location ADD input_datetime TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP; -- Time at which data record was created
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'location'
            AND column_name = 'last_check_datetime'
        ) THEN
            ALTER TABLE cds2db_in.location ADD last_check_datetime TIMESTAMP DEFAULT NULL; -- Time at which data record was last checked
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'location'
            AND column_name = 'current_dataset_status'
        ) THEN
            ALTER TABLE cds2db_in.location ADD current_dataset_status VARCHAR DEFAULT 'input'; -- Processing status of the data record
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'location'
            AND column_name = 'input_processing_nr'
        ) THEN
            ALTER TABLE cds2db_in.location ADD input_processing_nr INT; -- (First) Processing number of the data record
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'location'
            AND column_name = 'last_processing_nr'
        ) THEN
            ALTER TABLE cds2db_in.location ADD last_processing_nr INT; -- Last processing number of the data record
        END IF; -- column

-- Data-leading columns -------------------------------------------------------------------------
        IF NOT EXISTS ( -- column not exists (loc_id)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'location'
            AND column_name = 'loc_id'
        ) THEN
            ALTER TABLE cds2db_in.location ADD loc_id varchar;   -- id (varchar)
        END IF; -- column (loc_id)
        IF NOT EXISTS ( -- column not exists (loc_meta_versionid)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'location'
            AND column_name = 'loc_meta_versionid'
        ) THEN
            ALTER TABLE cds2db_in.location ADD loc_meta_versionid varchar;   -- meta/versionId (varchar)
        END IF; -- column (loc_meta_versionid)
        IF NOT EXISTS ( -- column not exists (loc_meta_lastupdated)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'location'
            AND column_name = 'loc_meta_lastupdated'
        ) THEN
            ALTER TABLE cds2db_in.location ADD loc_meta_lastupdated timestamp;   -- meta/lastUpdated (timestamp)
        END IF; -- column (loc_meta_lastupdated)
        IF NOT EXISTS ( -- column not exists (loc_meta_profile)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'location'
            AND column_name = 'loc_meta_profile'
        ) THEN
            ALTER TABLE cds2db_in.location ADD loc_meta_profile varchar;   -- meta/profile (varchar)
        END IF; -- column (loc_meta_profile)
        IF NOT EXISTS ( -- column not exists (loc_identifier_use)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'location'
            AND column_name = 'loc_identifier_use'
        ) THEN
            ALTER TABLE cds2db_in.location ADD loc_identifier_use varchar;   -- identifier/use (varchar)
        END IF; -- column (loc_identifier_use)
        IF NOT EXISTS ( -- column not exists (loc_identifier_type_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'location'
            AND column_name = 'loc_identifier_type_system'
        ) THEN
            ALTER TABLE cds2db_in.location ADD loc_identifier_type_system varchar;   -- identifier/type/coding/system (varchar)
        END IF; -- column (loc_identifier_type_system)
        IF NOT EXISTS ( -- column not exists (loc_identifier_type_version)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'location'
            AND column_name = 'loc_identifier_type_version'
        ) THEN
            ALTER TABLE cds2db_in.location ADD loc_identifier_type_version varchar;   -- identifier/type/coding/version (varchar)
        END IF; -- column (loc_identifier_type_version)
        IF NOT EXISTS ( -- column not exists (loc_identifier_type_code)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'location'
            AND column_name = 'loc_identifier_type_code'
        ) THEN
            ALTER TABLE cds2db_in.location ADD loc_identifier_type_code varchar;   -- identifier/type/coding/code (varchar)
        END IF; -- column (loc_identifier_type_code)
        IF NOT EXISTS ( -- column not exists (loc_identifier_type_display)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'location'
            AND column_name = 'loc_identifier_type_display'
        ) THEN
            ALTER TABLE cds2db_in.location ADD loc_identifier_type_display varchar;   -- identifier/type/coding/display (varchar)
        END IF; -- column (loc_identifier_type_display)
        IF NOT EXISTS ( -- column not exists (loc_identifier_type_text)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'location'
            AND column_name = 'loc_identifier_type_text'
        ) THEN
            ALTER TABLE cds2db_in.location ADD loc_identifier_type_text varchar;   -- identifier/type/text (varchar)
        END IF; -- column (loc_identifier_type_text)
        IF NOT EXISTS ( -- column not exists (loc_identifier_system)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'location'
            AND column_name = 'loc_identifier_system'
        ) THEN
            ALTER TABLE cds2db_in.location ADD loc_identifier_system varchar;   -- identifier/system (varchar)
        END IF; -- column (loc_identifier_system)
        IF NOT EXISTS ( -- column not exists (loc_identifier_value)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'location'
            AND column_name = 'loc_identifier_value'
        ) THEN
            ALTER TABLE cds2db_in.location ADD loc_identifier_value varchar;   -- identifier/value (varchar)
        END IF; -- column (loc_identifier_value)
        IF NOT EXISTS ( -- column not exists (loc_identifier_start)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'location'
            AND column_name = 'loc_identifier_start'
        ) THEN
            ALTER TABLE cds2db_in.location ADD loc_identifier_start timestamp;   -- identifier/start (timestamp)
        END IF; -- column (loc_identifier_start)
        IF NOT EXISTS ( -- column not exists (loc_identifier_end)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'location'
            AND column_name = 'loc_identifier_end'
        ) THEN
            ALTER TABLE cds2db_in.location ADD loc_identifier_end timestamp;   -- identifier/end (timestamp)
        END IF; -- column (loc_identifier_end)
        IF NOT EXISTS ( -- column not exists (loc_status)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'location'
            AND column_name = 'loc_status'
        ) THEN
            ALTER TABLE cds2db_in.location ADD loc_status varchar;   -- status (varchar)
        END IF; -- column (loc_status)
        IF NOT EXISTS ( -- column not exists (loc_name)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'location'
            AND column_name = 'loc_name'
        ) THEN
            ALTER TABLE cds2db_in.location ADD loc_name varchar;   -- name (varchar)
        END IF; -- column (loc_name)
        IF NOT EXISTS ( -- column not exists (loc_description)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'location'
            AND column_name = 'loc_description'
        ) THEN
            ALTER TABLE cds2db_in.location ADD loc_description varchar;   -- description (varchar)
        END IF; -- column (loc_description)
        IF NOT EXISTS ( -- column not exists (loc_alias)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'location'
            AND column_name = 'loc_alias'
        ) THEN
            ALTER TABLE cds2db_in.location ADD loc_alias varchar;   -- alias (varchar)
        END IF; -- column (loc_alias)

-- Hash column for comparison on data-bearing columns -------------------------------------------
        IF EXISTS ( -- column exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'location' AND column_name = 'hash_index_col'
        ) THEN
            IF NOT EXISTS ( -- column exists
                SELECT 1 FROM information_schema.columns WHERE table_schema = 'cds2db_in' AND table_name = 'location' AND column_name = 'hash_index_col'
                AND trim(replace(replace(generation_expression::TEXT,'(',''),')','')) != trim(replace(replace('
	         COALESCE(db.to_char_immutable(loc_id), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(loc_identifier_use), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(loc_identifier_type_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(loc_identifier_type_version), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(loc_identifier_type_code), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(loc_identifier_type_display), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(loc_identifier_type_text), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(loc_identifier_system), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(loc_identifier_value), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(loc_identifier_start), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(loc_identifier_end), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(loc_status), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(loc_name), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(loc_description), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(loc_alias), ''#NULL#'') || ''|||'' ||''#''
                ','(',''),')',''))
            ) THEN
            -- Delete the old hash column so that a new one can be created
            ALTER TABLE cds2db_in.location DROP COLUMN hash_index_col;

            -- Creating the hash column
            ALTER TABLE cds2db_in.location ADD
            hash_index_col TEXT GENERATED ALWAYS AS (
            md5(
	         COALESCE(db.to_char_immutable(loc_id), '#NULL#') || '|||' || -- hash from: id (loc_id)
          COALESCE(db.to_char_immutable(loc_identifier_use), '#NULL#') || '|||' || -- hash from: identifier/use (loc_identifier_use)
          COALESCE(db.to_char_immutable(loc_identifier_type_system), '#NULL#') || '|||' || -- hash from: identifier/type/coding/system (loc_identifier_type_system)
          COALESCE(db.to_char_immutable(loc_identifier_type_version), '#NULL#') || '|||' || -- hash from: identifier/type/coding/version (loc_identifier_type_version)
          COALESCE(db.to_char_immutable(loc_identifier_type_code), '#NULL#') || '|||' || -- hash from: identifier/type/coding/code (loc_identifier_type_code)
          COALESCE(db.to_char_immutable(loc_identifier_type_display), '#NULL#') || '|||' || -- hash from: identifier/type/coding/display (loc_identifier_type_display)
          COALESCE(db.to_char_immutable(loc_identifier_type_text), '#NULL#') || '|||' || -- hash from: identifier/type/text (loc_identifier_type_text)
          COALESCE(db.to_char_immutable(loc_identifier_system), '#NULL#') || '|||' || -- hash from: identifier/system (loc_identifier_system)
          COALESCE(db.to_char_immutable(loc_identifier_value), '#NULL#') || '|||' || -- hash from: identifier/value (loc_identifier_value)
          COALESCE(db.to_char_immutable(loc_identifier_start), '#NULL#') || '|||' || -- hash from: identifier/start (loc_identifier_start)
          COALESCE(db.to_char_immutable(loc_identifier_end), '#NULL#') || '|||' || -- hash from: identifier/end (loc_identifier_end)
          COALESCE(db.to_char_immutable(loc_status), '#NULL#') || '|||' || -- hash from: status (loc_status)
          COALESCE(db.to_char_immutable(loc_name), '#NULL#') || '|||' || -- hash from: name (loc_name)
          COALESCE(db.to_char_immutable(loc_description), '#NULL#') || '|||' || -- hash from: description (loc_description)
          COALESCE(db.to_char_immutable(loc_alias), '#NULL#') || '|||' || -- hash from: alias (loc_alias)
                 '#'
               )
            ) STORED; -- Column for hash value for comparing FHIR data - collion check in second step hash_index_col
            END IF; -- currend hash definition
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'location'
            AND column_name = 'hash_index_col'
        ) THEN
            -- Creating the hash column
            ALTER TABLE cds2db_in.location ADD
            hash_index_col TEXT GENERATED ALWAYS AS (
            md5(
	         COALESCE(db.to_char_immutable(loc_id), '#NULL#') || '|||' || -- hash from: id (loc_id)
          COALESCE(db.to_char_immutable(loc_identifier_use), '#NULL#') || '|||' || -- hash from: identifier/use (loc_identifier_use)
          COALESCE(db.to_char_immutable(loc_identifier_type_system), '#NULL#') || '|||' || -- hash from: identifier/type/coding/system (loc_identifier_type_system)
          COALESCE(db.to_char_immutable(loc_identifier_type_version), '#NULL#') || '|||' || -- hash from: identifier/type/coding/version (loc_identifier_type_version)
          COALESCE(db.to_char_immutable(loc_identifier_type_code), '#NULL#') || '|||' || -- hash from: identifier/type/coding/code (loc_identifier_type_code)
          COALESCE(db.to_char_immutable(loc_identifier_type_display), '#NULL#') || '|||' || -- hash from: identifier/type/coding/display (loc_identifier_type_display)
          COALESCE(db.to_char_immutable(loc_identifier_type_text), '#NULL#') || '|||' || -- hash from: identifier/type/text (loc_identifier_type_text)
          COALESCE(db.to_char_immutable(loc_identifier_system), '#NULL#') || '|||' || -- hash from: identifier/system (loc_identifier_system)
          COALESCE(db.to_char_immutable(loc_identifier_value), '#NULL#') || '|||' || -- hash from: identifier/value (loc_identifier_value)
          COALESCE(db.to_char_immutable(loc_identifier_start), '#NULL#') || '|||' || -- hash from: identifier/start (loc_identifier_start)
          COALESCE(db.to_char_immutable(loc_identifier_end), '#NULL#') || '|||' || -- hash from: identifier/end (loc_identifier_end)
          COALESCE(db.to_char_immutable(loc_status), '#NULL#') || '|||' || -- hash from: status (loc_status)
          COALESCE(db.to_char_immutable(loc_name), '#NULL#') || '|||' || -- hash from: name (loc_name)
          COALESCE(db.to_char_immutable(loc_description), '#NULL#') || '|||' || -- hash from: description (loc_description)
          COALESCE(db.to_char_immutable(loc_alias), '#NULL#') || '|||' || -- hash from: alias (loc_alias)
                 '#'
               )
            ) STORED; -- Column for hash value for comparing FHIR data - collion check in second step hash_index_col
        END IF; -- column
    END IF; -- Table
END
$$;
-- Table "pids_per_ward" in schema "cds2db_in"
-------------------------------------------------------------------------------------------------
CREATE TABLE IF NOT EXISTS cds2db_in.pids_per_ward (
  pids_per_ward_id int PRIMARY KEY DEFAULT nextval('db.db_seq') -- Primary key of the entity
);

DO
$$
DECLARE
    IF EXISTS ( -- Table exists
        SELECT 1 FROM information_schema.columns 
        WHERE table_schema = 'cds2db_in' AND table_name = 'pids_per_ward'
    ) THEN
        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'pids_per_ward'
            AND column_name = 'input_datetime'
        ) THEN
            ALTER TABLE cds2db_in.pids_per_ward ADD pids_per_ward_raw_id int NOT NULL; -- Primary key of the corresponding raw table
            NULL;
        END IF; -- column

-- Organizational items - fixed for each database table -----------------------------------------
        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'pids_per_ward'
            AND column_name = 'input_datetime'
        ) THEN
            ALTER TABLE cds2db_in.pids_per_ward ADD input_datetime TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP; -- Time at which data record was created
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'pids_per_ward'
            AND column_name = 'last_check_datetime'
        ) THEN
            ALTER TABLE cds2db_in.pids_per_ward ADD last_check_datetime TIMESTAMP DEFAULT NULL; -- Time at which data record was last checked
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'pids_per_ward'
            AND column_name = 'current_dataset_status'
        ) THEN
            ALTER TABLE cds2db_in.pids_per_ward ADD current_dataset_status VARCHAR DEFAULT 'input'; -- Processing status of the data record
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'pids_per_ward'
            AND column_name = 'input_processing_nr'
        ) THEN
            ALTER TABLE cds2db_in.pids_per_ward ADD input_processing_nr INT; -- (First) Processing number of the data record
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'pids_per_ward'
            AND column_name = 'last_processing_nr'
        ) THEN
            ALTER TABLE cds2db_in.pids_per_ward ADD last_processing_nr INT; -- Last processing number of the data record
        END IF; -- column

-- Data-leading columns -------------------------------------------------------------------------
        IF NOT EXISTS ( -- column not exists (ward_name)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'pids_per_ward'
            AND column_name = 'ward_name'
        ) THEN
            ALTER TABLE cds2db_in.pids_per_ward ADD ward_name varchar;   -- ward_name (varchar)
        END IF; -- column (ward_name)
        IF NOT EXISTS ( -- column not exists (patient_id)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'pids_per_ward'
            AND column_name = 'patient_id'
        ) THEN
            ALTER TABLE cds2db_in.pids_per_ward ADD patient_id varchar;   -- patient_id (varchar)
        END IF; -- column (patient_id)
        IF NOT EXISTS ( -- column not exists (encounter_id)
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'pids_per_ward'
            AND column_name = 'encounter_id'
        ) THEN
            ALTER TABLE cds2db_in.pids_per_ward ADD encounter_id varchar;   -- encounter_id (varchar)
        END IF; -- column (encounter_id)

-- Hash column for comparison on data-bearing columns -------------------------------------------
        IF EXISTS ( -- column exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'pids_per_ward' AND column_name = 'hash_index_col'
        ) THEN
            IF NOT EXISTS ( -- column exists
                SELECT 1 FROM information_schema.columns WHERE table_schema = 'cds2db_in' AND table_name = 'pids_per_ward' AND column_name = 'hash_index_col'
                AND trim(replace(replace(generation_expression::TEXT,'(',''),')','')) != trim(replace(replace('
	         COALESCE(db.to_char_immutable(ward_name), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(patient_id), ''#NULL#'') || ''|||'' ||
          COALESCE(db.to_char_immutable(encounter_id), ''#NULL#'') || ''|||'' ||''#''
                ','(',''),')',''))
            ) THEN
            -- Delete the old hash column so that a new one can be created
            ALTER TABLE cds2db_in.pids_per_ward DROP COLUMN hash_index_col;

            -- Creating the hash column
            ALTER TABLE cds2db_in.pids_per_ward ADD
            hash_index_col TEXT GENERATED ALWAYS AS (
            md5(
	         COALESCE(db.to_char_immutable(ward_name), '#NULL#') || '|||' || -- hash from: ward_name (ward_name)
          COALESCE(db.to_char_immutable(patient_id), '#NULL#') || '|||' || -- hash from: patient_id (patient_id)
          COALESCE(db.to_char_immutable(encounter_id), '#NULL#') || '|||' || -- hash from: encounter_id (encounter_id)
                 '#'
               )
            ) STORED; -- Column for hash value for comparing FHIR data - collion check in second step hash_index_col
            END IF; -- currend hash definition
        END IF; -- column

        IF NOT EXISTS ( -- column not exists
            SELECT 1 FROM information_schema.columns 
            WHERE table_schema = 'cds2db_in' AND table_name = 'pids_per_ward'
            AND column_name = 'hash_index_col'
        ) THEN
            -- Creating the hash column
            ALTER TABLE cds2db_in.pids_per_ward ADD
            hash_index_col TEXT GENERATED ALWAYS AS (
            md5(
	         COALESCE(db.to_char_immutable(ward_name), '#NULL#') || '|||' || -- hash from: ward_name (ward_name)
          COALESCE(db.to_char_immutable(patient_id), '#NULL#') || '|||' || -- hash from: patient_id (patient_id)
          COALESCE(db.to_char_immutable(encounter_id), '#NULL#') || '|||' || -- hash from: encounter_id (encounter_id)
                 '#'
               )
            ) STORED; -- Column for hash value for comparing FHIR data - collion check in second step hash_index_col
        END IF; -- column
    END IF; -- Table
END
$$;

------------------------------------------------------
-- SQL Role / Trigger in Schema "cds2db_in" --
------------------------------------------------------


-- Table "encounter" in schema "cds2db_in"
----------------------------------------------------
GRANT TRIGGER ON cds2db_in.encounter TO cds2db_user;
GRANT USAGE ON SCHEMA cds2db_in TO cds2db_user;
GRANT USAGE ON db.db_seq TO cds2db_user;

GRANT INSERT, DELETE, UPDATE, SELECT ON TABLE cds2db_in.encounter TO cds2db_user; -- Additional authorizations for testing
GRANT INSERT, DELETE, UPDATE, SELECT ON TABLE cds2db_in.encounter TO db_user; -- Additional authorizations for testing

-- Table "patient" in schema "cds2db_in"
----------------------------------------------------
GRANT TRIGGER ON cds2db_in.patient TO cds2db_user;
GRANT USAGE ON SCHEMA cds2db_in TO cds2db_user;
GRANT USAGE ON db.db_seq TO cds2db_user;

GRANT INSERT, DELETE, UPDATE, SELECT ON TABLE cds2db_in.patient TO cds2db_user; -- Additional authorizations for testing
GRANT INSERT, DELETE, UPDATE, SELECT ON TABLE cds2db_in.patient TO db_user; -- Additional authorizations for testing

-- Table "condition" in schema "cds2db_in"
----------------------------------------------------
GRANT TRIGGER ON cds2db_in.condition TO cds2db_user;
GRANT USAGE ON SCHEMA cds2db_in TO cds2db_user;
GRANT USAGE ON db.db_seq TO cds2db_user;

GRANT INSERT, DELETE, UPDATE, SELECT ON TABLE cds2db_in.condition TO cds2db_user; -- Additional authorizations for testing
GRANT INSERT, DELETE, UPDATE, SELECT ON TABLE cds2db_in.condition TO db_user; -- Additional authorizations for testing

-- Table "medication" in schema "cds2db_in"
----------------------------------------------------
GRANT TRIGGER ON cds2db_in.medication TO cds2db_user;
GRANT USAGE ON SCHEMA cds2db_in TO cds2db_user;
GRANT USAGE ON db.db_seq TO cds2db_user;

GRANT INSERT, DELETE, UPDATE, SELECT ON TABLE cds2db_in.medication TO cds2db_user; -- Additional authorizations for testing
GRANT INSERT, DELETE, UPDATE, SELECT ON TABLE cds2db_in.medication TO db_user; -- Additional authorizations for testing

-- Table "medicationrequest" in schema "cds2db_in"
----------------------------------------------------
GRANT TRIGGER ON cds2db_in.medicationrequest TO cds2db_user;
GRANT USAGE ON SCHEMA cds2db_in TO cds2db_user;
GRANT USAGE ON db.db_seq TO cds2db_user;

GRANT INSERT, DELETE, UPDATE, SELECT ON TABLE cds2db_in.medicationrequest TO cds2db_user; -- Additional authorizations for testing
GRANT INSERT, DELETE, UPDATE, SELECT ON TABLE cds2db_in.medicationrequest TO db_user; -- Additional authorizations for testing

-- Table "medicationadministration" in schema "cds2db_in"
----------------------------------------------------
GRANT TRIGGER ON cds2db_in.medicationadministration TO cds2db_user;
GRANT USAGE ON SCHEMA cds2db_in TO cds2db_user;
GRANT USAGE ON db.db_seq TO cds2db_user;

GRANT INSERT, DELETE, UPDATE, SELECT ON TABLE cds2db_in.medicationadministration TO cds2db_user; -- Additional authorizations for testing
GRANT INSERT, DELETE, UPDATE, SELECT ON TABLE cds2db_in.medicationadministration TO db_user; -- Additional authorizations for testing

-- Table "medicationstatement" in schema "cds2db_in"
----------------------------------------------------
GRANT TRIGGER ON cds2db_in.medicationstatement TO cds2db_user;
GRANT USAGE ON SCHEMA cds2db_in TO cds2db_user;
GRANT USAGE ON db.db_seq TO cds2db_user;

GRANT INSERT, DELETE, UPDATE, SELECT ON TABLE cds2db_in.medicationstatement TO cds2db_user; -- Additional authorizations for testing
GRANT INSERT, DELETE, UPDATE, SELECT ON TABLE cds2db_in.medicationstatement TO db_user; -- Additional authorizations for testing

-- Table "observation" in schema "cds2db_in"
----------------------------------------------------
GRANT TRIGGER ON cds2db_in.observation TO cds2db_user;
GRANT USAGE ON SCHEMA cds2db_in TO cds2db_user;
GRANT USAGE ON db.db_seq TO cds2db_user;

GRANT INSERT, DELETE, UPDATE, SELECT ON TABLE cds2db_in.observation TO cds2db_user; -- Additional authorizations for testing
GRANT INSERT, DELETE, UPDATE, SELECT ON TABLE cds2db_in.observation TO db_user; -- Additional authorizations for testing

-- Table "diagnosticreport" in schema "cds2db_in"
----------------------------------------------------
GRANT TRIGGER ON cds2db_in.diagnosticreport TO cds2db_user;
GRANT USAGE ON SCHEMA cds2db_in TO cds2db_user;
GRANT USAGE ON db.db_seq TO cds2db_user;

GRANT INSERT, DELETE, UPDATE, SELECT ON TABLE cds2db_in.diagnosticreport TO cds2db_user; -- Additional authorizations for testing
GRANT INSERT, DELETE, UPDATE, SELECT ON TABLE cds2db_in.diagnosticreport TO db_user; -- Additional authorizations for testing

-- Table "servicerequest" in schema "cds2db_in"
----------------------------------------------------
GRANT TRIGGER ON cds2db_in.servicerequest TO cds2db_user;
GRANT USAGE ON SCHEMA cds2db_in TO cds2db_user;
GRANT USAGE ON db.db_seq TO cds2db_user;

GRANT INSERT, DELETE, UPDATE, SELECT ON TABLE cds2db_in.servicerequest TO cds2db_user; -- Additional authorizations for testing
GRANT INSERT, DELETE, UPDATE, SELECT ON TABLE cds2db_in.servicerequest TO db_user; -- Additional authorizations for testing

-- Table "procedure" in schema "cds2db_in"
----------------------------------------------------
GRANT TRIGGER ON cds2db_in.procedure TO cds2db_user;
GRANT USAGE ON SCHEMA cds2db_in TO cds2db_user;
GRANT USAGE ON db.db_seq TO cds2db_user;

GRANT INSERT, DELETE, UPDATE, SELECT ON TABLE cds2db_in.procedure TO cds2db_user; -- Additional authorizations for testing
GRANT INSERT, DELETE, UPDATE, SELECT ON TABLE cds2db_in.procedure TO db_user; -- Additional authorizations for testing

-- Table "consent" in schema "cds2db_in"
----------------------------------------------------
GRANT TRIGGER ON cds2db_in.consent TO cds2db_user;
GRANT USAGE ON SCHEMA cds2db_in TO cds2db_user;
GRANT USAGE ON db.db_seq TO cds2db_user;

GRANT INSERT, DELETE, UPDATE, SELECT ON TABLE cds2db_in.consent TO cds2db_user; -- Additional authorizations for testing
GRANT INSERT, DELETE, UPDATE, SELECT ON TABLE cds2db_in.consent TO db_user; -- Additional authorizations for testing

-- Table "location" in schema "cds2db_in"
----------------------------------------------------
GRANT TRIGGER ON cds2db_in.location TO cds2db_user;
GRANT USAGE ON SCHEMA cds2db_in TO cds2db_user;
GRANT USAGE ON db.db_seq TO cds2db_user;

GRANT INSERT, DELETE, UPDATE, SELECT ON TABLE cds2db_in.location TO cds2db_user; -- Additional authorizations for testing
GRANT INSERT, DELETE, UPDATE, SELECT ON TABLE cds2db_in.location TO db_user; -- Additional authorizations for testing

-- Table "pids_per_ward" in schema "cds2db_in"
----------------------------------------------------
GRANT TRIGGER ON cds2db_in.pids_per_ward TO cds2db_user;
GRANT USAGE ON SCHEMA cds2db_in TO cds2db_user;
GRANT USAGE ON db.db_seq TO cds2db_user;

GRANT INSERT, DELETE, UPDATE, SELECT ON TABLE cds2db_in.pids_per_ward TO cds2db_user; -- Additional authorizations for testing
GRANT INSERT, DELETE, UPDATE, SELECT ON TABLE cds2db_in.pids_per_ward TO db_user; -- Additional authorizations for testing

------------------------------------------------------
-- Comments on Tables in Schema "cds2db_in" --
------------------------------------------------------

-- Output off
\o /dev/null

COMMENT ON COLUMN cds2db_in.encounter.encounter_id IS 'Primary key of the entity';
COMMENT ON COLUMN cds2db_in.encounter.encounter_raw_id IS 'Primary key of the corresponding raw table';
COMMENT ON COLUMN cds2db_in.encounter.enc_id IS 'id (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_meta_versionid IS 'meta/versionId (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_meta_lastupdated IS 'meta/lastUpdated (timestamp)';
COMMENT ON COLUMN cds2db_in.encounter.enc_meta_profile IS 'meta/profile (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_identifier_use IS 'identifier/use (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_identifier_type_system IS 'identifier/type/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_identifier_type_version IS 'identifier/type/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_identifier_type_code IS 'identifier/type/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_identifier_type_display IS 'identifier/type/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_identifier_type_text IS 'identifier/type/text (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_identifier_system IS 'identifier/system (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_identifier_value IS 'identifier/value (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_identifier_start IS 'identifier/start (timestamp)';
COMMENT ON COLUMN cds2db_in.encounter.enc_identifier_end IS 'identifier/end (timestamp)';
COMMENT ON COLUMN cds2db_in.encounter.enc_patient_ref IS 'subject/reference (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_partof_ref IS 'partOf/reference (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_status IS 'status (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_class_system IS 'class/system (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_class_version IS 'class/version (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_class_code IS 'class/code (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_class_display IS 'class/display (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_type_system IS 'type/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_type_version IS 'type/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_type_code IS 'type/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_type_display IS 'type/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_type_text IS 'type/text (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_servicetype_system IS 'serviceType/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_servicetype_version IS 'serviceType/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_servicetype_code IS 'serviceType/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_servicetype_display IS 'serviceType/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_servicetype_text IS 'serviceType/text (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_period_start IS 'period/start (timestamp)';
COMMENT ON COLUMN cds2db_in.encounter.enc_period_end IS 'period/end (timestamp)';
COMMENT ON COLUMN cds2db_in.encounter.enc_diagnosis_condition_ref IS 'diagnosis/condition/reference (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_diagnosis_use_system IS 'diagnosis/use/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_diagnosis_use_version IS 'diagnosis/use/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_diagnosis_use_code IS 'diagnosis/use/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_diagnosis_use_display IS 'diagnosis/use/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_diagnosis_use_text IS 'diagnosis/use/text (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_diagnosis_rank IS 'diagnosis/rank (int)';
COMMENT ON COLUMN cds2db_in.encounter.enc_hospitalization_admitsource_system IS 'hospitalization/admitSource/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_hospitalization_admitsource_version IS 'hospitalization/admitSource/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_hospitalization_admitsource_code IS 'hospitalization/admitSource/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_hospitalization_admitsource_display IS 'hospitalization/admitSource/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_hospitalization_admitsource_text IS 'hospitalization/admitSource/text (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_hospitalization_dischargedisposition_system IS 'hospitalization/dischargeDisposition/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_hospitalization_dischargedisposition_version IS 'hospitalization/dischargeDisposition/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_hospitalization_dischargedisposition_code IS 'hospitalization/dischargeDisposition/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_hospitalization_dischargedisposition_display IS 'hospitalization/dischargeDisposition/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_hospitalization_dischargedisposition_text IS 'hospitalization/dischargeDisposition/text (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_location_ref IS 'location/location/reference (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_location_type IS 'location/location/type (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_location_identifier_use IS 'location/location/identifier/use (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_location_identifier_type_system IS 'location/location/identifier/type/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_location_identifier_type_version IS 'location/location/identifier/type/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_location_identifier_type_code IS 'location/location/identifier/type/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_location_identifier_type_display IS 'location/location/identifier/type/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_location_identifier_type_text IS 'location/location/identifier/type/text (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_location_identifier_system IS 'location/location/identifier/system (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_location_identifier_value IS 'location/location/identifier/value (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_location_display IS 'location/location/display (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_location_status IS 'location/status (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_location_physicaltype_system IS 'location/physicalType/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_location_physicaltype_version IS 'location/physicalType/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_location_physicaltype_code IS 'location/physicalType/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_location_physicaltype_display IS 'location/physicalType/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_location_physicaltype_text IS 'location/physicalType/text (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_serviceprovider_ref IS 'serviceProvider/reference (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_serviceprovider_type IS 'serviceProvider/type (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_serviceprovider_identifier_use IS 'serviceProvider/identifier/use (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_serviceprovider_identifier_type_system IS 'serviceProvider/identifier/type/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_serviceprovider_identifier_type_version IS 'serviceProvider/identifier/type/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_serviceprovider_identifier_type_code IS 'serviceProvider/identifier/type/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_serviceprovider_identifier_type_display IS 'serviceProvider/identifier/type/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_serviceprovider_identifier_type_text IS 'serviceProvider/identifier/type/text (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_serviceprovider_identifier_system IS 'serviceProvider/identifier/system (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_serviceprovider_identifier_value IS 'serviceProvider/identifier/value (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.enc_serviceprovider_display IS 'serviceProvider/display (varchar)';
COMMENT ON COLUMN cds2db_in.encounter.input_datetime IS 'Time at which the data record is inserted';
COMMENT ON COLUMN cds2db_in.encounter.last_check_datetime IS 'Time at which data record was last checked';
COMMENT ON COLUMN cds2db_in.encounter.current_dataset_status IS 'Processing status of the data record';
COMMENT ON COLUMN cds2db_in.encounter.input_processing_nr IS '(First) Processing number of the data record';
COMMENT ON COLUMN cds2db_in.encounter.last_processing_nr IS 'Last processing number of the data record';
COMMENT ON COLUMN cds2db_in.patient.patient_id IS 'Primary key of the entity';
COMMENT ON COLUMN cds2db_in.patient.patient_raw_id IS 'Primary key of the corresponding raw table';
COMMENT ON COLUMN cds2db_in.patient.pat_id IS 'id (varchar)';
COMMENT ON COLUMN cds2db_in.patient.pat_meta_versionid IS 'meta/versionId (varchar)';
COMMENT ON COLUMN cds2db_in.patient.pat_meta_lastupdated IS 'meta/lastUpdated (timestamp)';
COMMENT ON COLUMN cds2db_in.patient.pat_meta_profile IS 'meta/profile (varchar)';
COMMENT ON COLUMN cds2db_in.patient.pat_identifier_use IS 'identifier/use (varchar)';
COMMENT ON COLUMN cds2db_in.patient.pat_identifier_type_system IS 'identifier/type/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.patient.pat_identifier_type_version IS 'identifier/type/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.patient.pat_identifier_type_code IS 'identifier/type/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.patient.pat_identifier_type_display IS 'identifier/type/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.patient.pat_identifier_type_text IS 'identifier/type/text (varchar)';
COMMENT ON COLUMN cds2db_in.patient.pat_identifier_system IS 'identifier/system (varchar)';
COMMENT ON COLUMN cds2db_in.patient.pat_identifier_value IS 'identifier/value (varchar)';
COMMENT ON COLUMN cds2db_in.patient.pat_identifier_start IS 'identifier/start (timestamp)';
COMMENT ON COLUMN cds2db_in.patient.pat_identifier_end IS 'identifier/end (timestamp)';
COMMENT ON COLUMN cds2db_in.patient.pat_name_text IS 'name/text (varchar)';
COMMENT ON COLUMN cds2db_in.patient.pat_name_family IS 'name/family (varchar)';
COMMENT ON COLUMN cds2db_in.patient.pat_name_given IS 'name/given (varchar)';
COMMENT ON COLUMN cds2db_in.patient.pat_gender IS 'gender (varchar)';
COMMENT ON COLUMN cds2db_in.patient.pat_birthdate IS 'birthDate (date)';
COMMENT ON COLUMN cds2db_in.patient.pat_deceaseddatetime IS 'deceasedDateTime (timestamp)';
COMMENT ON COLUMN cds2db_in.patient.pat_address_postalcode IS 'address/postalCode (varchar)';
COMMENT ON COLUMN cds2db_in.patient.input_datetime IS 'Time at which the data record is inserted';
COMMENT ON COLUMN cds2db_in.patient.last_check_datetime IS 'Time at which data record was last checked';
COMMENT ON COLUMN cds2db_in.patient.current_dataset_status IS 'Processing status of the data record';
COMMENT ON COLUMN cds2db_in.patient.input_processing_nr IS '(First) Processing number of the data record';
COMMENT ON COLUMN cds2db_in.patient.last_processing_nr IS 'Last processing number of the data record';
COMMENT ON COLUMN cds2db_in.condition.condition_id IS 'Primary key of the entity';
COMMENT ON COLUMN cds2db_in.condition.condition_raw_id IS 'Primary key of the corresponding raw table';
COMMENT ON COLUMN cds2db_in.condition.con_id IS 'id (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_meta_versionid IS 'meta/versionId (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_meta_lastupdated IS 'meta/lastUpdated (timestamp)';
COMMENT ON COLUMN cds2db_in.condition.con_meta_profile IS 'meta/profile (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_identifier_use IS 'identifier/use (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_identifier_type_system IS 'identifier/type/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_identifier_type_version IS 'identifier/type/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_identifier_type_code IS 'identifier/type/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_identifier_type_display IS 'identifier/type/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_identifier_type_text IS 'identifier/type/text (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_identifier_system IS 'identifier/system (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_identifier_value IS 'identifier/value (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_identifier_start IS 'identifier/start (timestamp)';
COMMENT ON COLUMN cds2db_in.condition.con_identifier_end IS 'identifier/end (timestamp)';
COMMENT ON COLUMN cds2db_in.condition.con_encounter_ref IS 'encounter/reference (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_patient_ref IS 'subject/reference (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_clinicalstatus_system IS 'clinicalStatus/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_clinicalstatus_version IS 'clinicalStatus/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_clinicalstatus_code IS 'clinicalStatus/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_clinicalstatus_display IS 'clinicalStatus/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_clinicalstatus_text IS 'clinicalStatus/text (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_verificationstatus_system IS 'verificationStatus/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_verificationstatus_version IS 'verificationStatus/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_verificationstatus_code IS 'verificationStatus/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_verificationstatus_display IS 'verificationStatus/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_verificationstatus_text IS 'verificationStatus/text (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_category_system IS 'category/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_category_version IS 'category/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_category_code IS 'category/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_category_display IS 'category/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_category_text IS 'category/text (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_severity_system IS 'severity/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_severity_version IS 'severity/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_severity_code IS 'severity/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_severity_display IS 'severity/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_severity_text IS 'severity/text (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_code_system IS 'code/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_code_version IS 'code/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_code_code IS 'code/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_code_display IS 'code/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_code_text IS 'code/text (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_bodysite_system IS 'bodySite/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_bodysite_version IS 'bodySite/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_bodysite_code IS 'bodySite/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_bodysite_display IS 'bodySite/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_bodysite_text IS 'bodySite/text (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_onsetperiod_start IS 'onsetPeriod/start (timestamp)';
COMMENT ON COLUMN cds2db_in.condition.con_onsetperiod_end IS 'onsetPeriod/end (timestamp)';
COMMENT ON COLUMN cds2db_in.condition.con_onsetdatetime IS 'onsetDateTime (timestamp)';
COMMENT ON COLUMN cds2db_in.condition.con_abatementdatetime IS 'abatementDateTime (timestamp)';
COMMENT ON COLUMN cds2db_in.condition.con_abatementage_value IS 'abatementAge/value (double precision)';
COMMENT ON COLUMN cds2db_in.condition.con_abatementage_comparator IS 'abatementAge/comparator (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_abatementage_unit IS 'abatementAge/unit (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_abatementage_system IS 'abatementAge/system (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_abatementage_code IS 'abatementAge/code (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_abatementperiod_start IS 'abatementPeriod/start (timestamp)';
COMMENT ON COLUMN cds2db_in.condition.con_abatementperiod_end IS 'abatementPeriod/end (timestamp)';
COMMENT ON COLUMN cds2db_in.condition.con_abatementrange_low_value IS 'abatementRange/low/value (double precision)';
COMMENT ON COLUMN cds2db_in.condition.con_abatementrange_low_unit IS 'abatementRange/low/unit (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_abatementrange_low_system IS 'abatementRange/low/system (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_abatementrange_low_code IS 'abatementRange/low/code (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_abatementrange_high_value IS 'abatementRange/high/value (double precision)';
COMMENT ON COLUMN cds2db_in.condition.con_abatementrange_high_unit IS 'abatementRange/high/unit (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_abatementrange_high_system IS 'abatementRange/high/system (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_abatementrange_high_code IS 'abatementRange/high/code (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_abatementstring IS 'abatementString (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_recordeddate IS 'recordedDate (timestamp)';
COMMENT ON COLUMN cds2db_in.condition.con_recorder_ref IS 'recorder/reference (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_recorder_type IS 'recorder/type (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_recorder_identifier_use IS 'recorder/identifier/use (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_recorder_identifier_type_system IS 'recorder/identifier/type/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_recorder_identifier_type_version IS 'recorder/identifier/type/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_recorder_identifier_type_code IS 'recorder/identifier/type/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_recorder_identifier_type_display IS 'recorder/identifier/type/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_recorder_identifier_type_text IS 'recorder/identifier/type/text (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_recorder_identifier_system IS 'recorder/identifier/system (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_recorder_identifier_value IS 'recorder/identifier/value (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_recorder_display IS 'recorder/display (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_asserter_ref IS 'asserter/reference (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_asserter_type IS 'asserter/type (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_asserter_identifier_use IS 'asserter/identifier/use (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_asserter_identifier_type_system IS 'asserter/identifier/type/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_asserter_identifier_type_version IS 'asserter/identifier/type/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_asserter_identifier_type_code IS 'asserter/identifier/type/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_asserter_identifier_type_display IS 'asserter/identifier/type/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_asserter_identifier_type_text IS 'asserter/identifier/type/text (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_asserter_identifier_system IS 'asserter/identifier/system (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_asserter_identifier_value IS 'asserter/identifier/value (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_asserter_display IS 'asserter/display (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_stage_summary_system IS 'stage/summary/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_stage_summary_version IS 'stage/summary/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_stage_summary_code IS 'stage/summary/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_stage_summary_display IS 'stage/summary/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_stage_summary_text IS 'stage/summary/text (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_stage_assessment_ref IS 'stage/assessment/reference (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_stage_assessment_type IS 'stage/assessment/type (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_stage_assessment_identifier_use IS 'stage/assessment/identifier/use (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_stage_assessment_identifier_type_system IS 'stage/assessment/identifier/type/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_stage_assessment_identifier_type_version IS 'stage/assessment/identifier/type/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_stage_assessment_identifier_type_code IS 'stage/assessment/identifier/type/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_stage_assessment_identifier_type_display IS 'stage/assessment/identifier/type/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_stage_assessment_identifier_type_text IS 'stage/assessment/identifier/type/text (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_stage_assessment_identifier_system IS 'stage/assessment/identifier/system (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_stage_assessment_identifier_value IS 'stage/assessment/identifier/value (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_stage_assessment_display IS 'stage/assessment/display (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_stage_type_system IS 'stage/type/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_stage_type_version IS 'stage/type/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_stage_type_code IS 'stage/type/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_stage_type_display IS 'stage/type/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_stage_type_text IS 'stage/type/text (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_note_authorstring IS 'note/authorString (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_note_authorreference_ref IS 'note/authorReference/reference (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_note_authorreference_type IS 'note/authorReference/type (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_note_authorreference_identifier_use IS 'note/authorReference/identifier/use (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_note_authorreference_identifier_type_system IS 'note/authorReference/identifier/type/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_note_authorreference_identifier_type_version IS 'note/authorReference/identifier/type/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_note_authorreference_identifier_type_code IS 'note/authorReference/identifier/type/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_note_authorreference_identifier_type_display IS 'note/authorReference/identifier/type/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_note_authorreference_identifier_type_text IS 'note/authorReference/identifier/type/text (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_note_authorreference_identifier_system IS 'note/authorReference/identifier/system (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_note_authorreference_identifier_value IS 'note/authorReference/identifier/value (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_note_authorreference_display IS 'note/authorReference/display (varchar)';
COMMENT ON COLUMN cds2db_in.condition.con_note_time IS 'note/time (timestamp)';
COMMENT ON COLUMN cds2db_in.condition.con_note_text IS 'note/text (varchar)';
COMMENT ON COLUMN cds2db_in.condition.input_datetime IS 'Time at which the data record is inserted';
COMMENT ON COLUMN cds2db_in.condition.last_check_datetime IS 'Time at which data record was last checked';
COMMENT ON COLUMN cds2db_in.condition.current_dataset_status IS 'Processing status of the data record';
COMMENT ON COLUMN cds2db_in.condition.input_processing_nr IS '(First) Processing number of the data record';
COMMENT ON COLUMN cds2db_in.condition.last_processing_nr IS 'Last processing number of the data record';
COMMENT ON COLUMN cds2db_in.medication.medication_id IS 'Primary key of the entity';
COMMENT ON COLUMN cds2db_in.medication.medication_raw_id IS 'Primary key of the corresponding raw table';
COMMENT ON COLUMN cds2db_in.medication.med_id IS 'id (varchar)';
COMMENT ON COLUMN cds2db_in.medication.med_meta_versionid IS 'meta/versionId (varchar)';
COMMENT ON COLUMN cds2db_in.medication.med_meta_lastupdated IS 'meta/lastUpdated (timestamp)';
COMMENT ON COLUMN cds2db_in.medication.med_meta_profile IS 'meta/profile (varchar)';
COMMENT ON COLUMN cds2db_in.medication.med_identifier_use IS 'identifier/use (varchar)';
COMMENT ON COLUMN cds2db_in.medication.med_identifier_type_system IS 'identifier/type/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.medication.med_identifier_type_version IS 'identifier/type/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.medication.med_identifier_type_code IS 'identifier/type/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.medication.med_identifier_type_display IS 'identifier/type/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.medication.med_identifier_type_text IS 'identifier/type/text (varchar)';
COMMENT ON COLUMN cds2db_in.medication.med_identifier_system IS 'identifier/system (varchar)';
COMMENT ON COLUMN cds2db_in.medication.med_identifier_value IS 'identifier/value (varchar)';
COMMENT ON COLUMN cds2db_in.medication.med_identifier_start IS 'identifier/start (timestamp)';
COMMENT ON COLUMN cds2db_in.medication.med_identifier_end IS 'identifier/end (timestamp)';
COMMENT ON COLUMN cds2db_in.medication.med_code_system IS 'code/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.medication.med_code_version IS 'code/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.medication.med_code_code IS 'code/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.medication.med_code_display IS 'code/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.medication.med_code_text IS 'code/text (varchar)';
COMMENT ON COLUMN cds2db_in.medication.med_status IS 'status (varchar)';
COMMENT ON COLUMN cds2db_in.medication.med_form_system IS 'form/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.medication.med_form_version IS 'form/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.medication.med_form_code IS 'form/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.medication.med_form_display IS 'form/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.medication.med_form_text IS 'form/text (varchar)';
COMMENT ON COLUMN cds2db_in.medication.med_amount_numerator_value IS 'amount/numerator/value (double precision)';
COMMENT ON COLUMN cds2db_in.medication.med_amount_numerator_comparator IS 'amount/numerator/comparator (varchar)';
COMMENT ON COLUMN cds2db_in.medication.med_amount_numerator_unit IS 'amount/numerator/unit (varchar)';
COMMENT ON COLUMN cds2db_in.medication.med_amount_numerator_system IS 'amount/numerator/system (varchar)';
COMMENT ON COLUMN cds2db_in.medication.med_amount_numerator_code IS 'amount/numerator/code (varchar)';
COMMENT ON COLUMN cds2db_in.medication.med_amount_denominator_value IS 'amount/denominator/value (double precision)';
COMMENT ON COLUMN cds2db_in.medication.med_amount_denominator_comparator IS 'amount/denominator/comparator (varchar)';
COMMENT ON COLUMN cds2db_in.medication.med_amount_denominator_unit IS 'amount/denominator/unit (varchar)';
COMMENT ON COLUMN cds2db_in.medication.med_amount_denominator_system IS 'amount/denominator/system (varchar)';
COMMENT ON COLUMN cds2db_in.medication.med_amount_denominator_code IS 'amount/denominator/code (varchar)';
COMMENT ON COLUMN cds2db_in.medication.med_ingredient_strength_numerator_value IS 'ingredient/strength/numerator/value (double precision)';
COMMENT ON COLUMN cds2db_in.medication.med_ingredient_strength_numerator_comparator IS 'ingredient/strength/numerator/comparator (varchar)';
COMMENT ON COLUMN cds2db_in.medication.med_ingredient_strength_numerator_unit IS 'ingredient/strength/numerator/unit (varchar)';
COMMENT ON COLUMN cds2db_in.medication.med_ingredient_strength_numerator_system IS 'ingredient/strength/numerator/system (varchar)';
COMMENT ON COLUMN cds2db_in.medication.med_ingredient_strength_numerator_code IS 'ingredient/strength/numerator/code (varchar)';
COMMENT ON COLUMN cds2db_in.medication.med_ingredient_strength_denominator_value IS 'ingredient/strength/denominator/value (double precision)';
COMMENT ON COLUMN cds2db_in.medication.med_ingredient_strength_denominator_comparator IS 'ingredient/strength/denominator/comparator (varchar)';
COMMENT ON COLUMN cds2db_in.medication.med_ingredient_strength_denominator_unit IS 'ingredient/strength/denominator/unit (varchar)';
COMMENT ON COLUMN cds2db_in.medication.med_ingredient_strength_denominator_system IS 'ingredient/strength/denominator/system (varchar)';
COMMENT ON COLUMN cds2db_in.medication.med_ingredient_strength_denominator_code IS 'ingredient/strength/denominator/code (varchar)';
COMMENT ON COLUMN cds2db_in.medication.med_ingredient_itemcodeableconcept_system IS 'ingredient/itemCodeableConcept/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.medication.med_ingredient_itemcodeableconcept_version IS 'ingredient/itemCodeableConcept/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.medication.med_ingredient_itemcodeableconcept_code IS 'ingredient/itemCodeableConcept/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.medication.med_ingredient_itemcodeableconcept_display IS 'ingredient/itemCodeableConcept/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.medication.med_ingredient_itemcodeableconcept_text IS 'ingredient/itemCodeableConcept/text (varchar)';
COMMENT ON COLUMN cds2db_in.medication.med_ingredient_itemreference_ref IS 'ingredient/itemReference/reference (varchar)';
COMMENT ON COLUMN cds2db_in.medication.med_ingredient_itemreference_type IS 'ingredient/itemReference/type (varchar)';
COMMENT ON COLUMN cds2db_in.medication.med_ingredient_itemreference_identifier_use IS 'ingredient/itemReference/identifier/use (varchar)';
COMMENT ON COLUMN cds2db_in.medication.med_ingredient_itemreference_identifier_type_system IS 'ingredient/itemReference/identifier/type/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.medication.med_ingredient_itemreference_identifier_type_version IS 'ingredient/itemReference/identifier/type/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.medication.med_ingredient_itemreference_identifier_type_code IS 'ingredient/itemReference/identifier/type/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.medication.med_ingredient_itemreference_identifier_type_display IS 'ingredient/itemReference/identifier/type/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.medication.med_ingredient_itemreference_identifier_type_text IS 'ingredient/itemReference/identifier/type/text (varchar)';
COMMENT ON COLUMN cds2db_in.medication.med_ingredient_itemreference_identifier_system IS 'ingredient/itemReference/identifier/system (varchar)';
COMMENT ON COLUMN cds2db_in.medication.med_ingredient_itemreference_identifier_value IS 'ingredient/itemReference/identifier/value (varchar)';
COMMENT ON COLUMN cds2db_in.medication.med_ingredient_itemreference_display IS 'ingredient/itemReference/display (varchar)';
COMMENT ON COLUMN cds2db_in.medication.med_ingredient_isactive IS 'ingredient/isActive (boolean)';
COMMENT ON COLUMN cds2db_in.medication.input_datetime IS 'Time at which the data record is inserted';
COMMENT ON COLUMN cds2db_in.medication.last_check_datetime IS 'Time at which data record was last checked';
COMMENT ON COLUMN cds2db_in.medication.current_dataset_status IS 'Processing status of the data record';
COMMENT ON COLUMN cds2db_in.medication.input_processing_nr IS '(First) Processing number of the data record';
COMMENT ON COLUMN cds2db_in.medication.last_processing_nr IS 'Last processing number of the data record';
COMMENT ON COLUMN cds2db_in.medicationrequest.medicationrequest_id IS 'Primary key of the entity';
COMMENT ON COLUMN cds2db_in.medicationrequest.medicationrequest_raw_id IS 'Primary key of the corresponding raw table';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_id IS 'id (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_meta_versionid IS 'meta/versionId (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_meta_lastupdated IS 'meta/lastUpdated (timestamp)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_meta_profile IS 'meta/profile (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_identifier_use IS 'identifier/use (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_identifier_type_system IS 'identifier/type/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_identifier_type_version IS 'identifier/type/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_identifier_type_code IS 'identifier/type/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_identifier_type_display IS 'identifier/type/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_identifier_type_text IS 'identifier/type/text (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_identifier_system IS 'identifier/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_identifier_value IS 'identifier/value (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_identifier_start IS 'identifier/start (timestamp)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_identifier_end IS 'identifier/end (timestamp)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_encounter_ref IS 'encounter/reference (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_patient_ref IS 'subject/reference (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_medicationreference_ref IS 'medicationReference/reference (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_status IS 'status (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_statusreason_system IS 'statusReason/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_statusreason_version IS 'statusReason/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_statusreason_code IS 'statusReason/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_statusreason_display IS 'statusReason/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_statusreason_text IS 'statusReason/text (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_intend IS 'intend (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_intent IS 'intent (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_category_system IS 'category/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_category_version IS 'category/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_category_code IS 'category/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_category_display IS 'category/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_category_text IS 'category/text (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_priority IS 'priority (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_reportedboolean IS 'reportedBoolean (boolean)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_reportedreference_ref IS 'reportedReference/reference (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_reportedreference_type IS 'reportedReference/type (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_reportedreference_identifier_use IS 'reportedReference/identifier/use (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_reportedreference_identifier_type_system IS 'reportedReference/identifier/type/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_reportedreference_identifier_type_version IS 'reportedReference/identifier/type/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_reportedreference_identifier_type_code IS 'reportedReference/identifier/type/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_reportedreference_identifier_type_display IS 'reportedReference/identifier/type/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_reportedreference_identifier_type_text IS 'reportedReference/identifier/type/text (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_reportedreference_identifier_system IS 'reportedReference/identifier/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_reportedreference_identifier_value IS 'reportedReference/identifier/value (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_reportedreference_display IS 'reportedReference/display (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_medicationcodeableconcept_system IS 'medicationCodeableConcept/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_medicationcodeableconcept_version IS 'medicationCodeableConcept/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_medicationcodeableconcept_code IS 'medicationCodeableConcept/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_medicationcodeableconcept_display IS 'medicationCodeableConcept/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_medicationcodeableconcept_text IS 'medicationCodeableConcept/text (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_supportinginformation_ref IS 'supportingInformation/reference (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_supportinginformation_type IS 'supportingInformation/type (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_supportinginformation_identifier_use IS 'supportingInformation/identifier/use (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_supportinginformation_identifier_type_system IS 'supportingInformation/identifier/type/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_supportinginformation_identifier_type_version IS 'supportingInformation/identifier/type/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_supportinginformation_identifier_type_code IS 'supportingInformation/identifier/type/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_supportinginformation_identifier_type_display IS 'supportingInformation/identifier/type/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_supportinginformation_identifier_type_text IS 'supportingInformation/identifier/type/text (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_supportinginformation_identifier_system IS 'supportingInformation/identifier/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_supportinginformation_identifier_value IS 'supportingInformation/identifier/value (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_supportinginformation_display IS 'supportingInformation/display (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_authoredon IS 'authoredOn (timestamp)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_requester_ref IS 'requester/reference (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_requester_type IS 'requester/type (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_requester_identifier_use IS 'requester/identifier/use (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_requester_identifier_type_system IS 'requester/identifier/type/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_requester_identifier_type_version IS 'requester/identifier/type/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_requester_identifier_type_code IS 'requester/identifier/type/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_requester_identifier_type_display IS 'requester/identifier/type/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_requester_identifier_type_text IS 'requester/identifier/type/text (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_requester_identifier_system IS 'requester/identifier/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_requester_identifier_value IS 'requester/identifier/value (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_requester_display IS 'requester/display (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_reasoncode_system IS 'reasonCode/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_reasoncode_version IS 'reasonCode/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_reasoncode_code IS 'reasonCode/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_reasoncode_display IS 'reasonCode/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_reasoncode_text IS 'reasonCode/text (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_reasonreference_ref IS 'reasonReference/reference (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_reasonreference_type IS 'reasonReference/type (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_reasonreference_identifier_use IS 'reasonReference/identifier/use (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_reasonreference_identifier_type_system IS 'reasonReference/identifier/type/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_reasonreference_identifier_type_version IS 'reasonReference/identifier/type/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_reasonreference_identifier_type_code IS 'reasonReference/identifier/type/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_reasonreference_identifier_type_display IS 'reasonReference/identifier/type/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_reasonreference_identifier_type_text IS 'reasonReference/identifier/type/text (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_reasonreference_identifier_system IS 'reasonReference/identifier/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_reasonreference_identifier_value IS 'reasonReference/identifier/value (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_reasonreference_display IS 'reasonReference/display (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_basedon_ref IS 'basedOn/reference (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_basedon_type IS 'basedOn/type (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_basedon_identifier_use IS 'basedOn/identifier/use (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_basedon_identifier_type_system IS 'basedOn/identifier/type/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_basedon_identifier_type_version IS 'basedOn/identifier/type/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_basedon_identifier_type_code IS 'basedOn/identifier/type/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_basedon_identifier_type_display IS 'basedOn/identifier/type/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_basedon_identifier_type_text IS 'basedOn/identifier/type/text (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_basedon_identifier_system IS 'basedOn/identifier/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_basedon_identifier_value IS 'basedOn/identifier/value (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_basedon_display IS 'basedOn/display (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_note_authorstring IS 'note/authorString (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_note_authorreference_ref IS 'note/authorReference/reference (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_note_authorreference_type IS 'note/authorReference/type (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_note_authorreference_identifier_use IS 'note/authorReference/identifier/use (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_note_authorreference_identifier_type_system IS 'note/authorReference/identifier/type/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_note_authorreference_identifier_type_version IS 'note/authorReference/identifier/type/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_note_authorreference_identifier_type_code IS 'note/authorReference/identifier/type/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_note_authorreference_identifier_type_display IS 'note/authorReference/identifier/type/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_note_authorreference_identifier_type_text IS 'note/authorReference/identifier/type/text (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_note_authorreference_identifier_system IS 'note/authorReference/identifier/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_note_authorreference_identifier_value IS 'note/authorReference/identifier/value (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_note_authorreference_display IS 'note/authorReference/display (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_note_time IS 'note/time (timestamp)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_note_text IS 'note/text (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_sequence IS 'dosageInstruction/sequence (int)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_text IS 'dosageInstruction/text (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_additionalinstruction_system IS 'dosageInstruction/additionalInstruction/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_additionalinstruction_version IS 'dosageInstruction/additionalInstruction/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_additionalinstruction_code IS 'dosageInstruction/additionalInstruction/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_additionalinstruction_display IS 'dosageInstruction/additionalInstruction/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_additionalinstruction_text IS 'dosageInstruction/additionalInstruction/text (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_patientinstruction IS 'dosageInstruction/patientInstruction (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_timing_event IS 'dosageInstruction/timing/event (timestamp)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_timing_repeat_boundsduration_value IS 'dosageInstruction/timing/repeat/boundsDuration/value (double precision)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_timing_repeat_boundsduration_comparator IS 'dosageInstruction/timing/repeat/boundsDuration/comparator (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_timing_repeat_boundsduration_unit IS 'dosageInstruction/timing/repeat/boundsDuration/unit (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_timing_repeat_boundsduration_system IS 'dosageInstruction/timing/repeat/boundsDuration/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_timing_repeat_boundsduration_code IS 'dosageInstruction/timing/repeat/boundsDuration/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_timing_repeat_boundsrange_low_value IS 'dosageInstruction/timing/repeat/boundsRange/low/value (double precision)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_timing_repeat_boundsrange_low_unit IS 'dosageInstruction/timing/repeat/boundsRange/low/unit (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_timing_repeat_boundsrange_low_system IS 'dosageInstruction/timing/repeat/boundsRange/low/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_timing_repeat_boundsrange_low_code IS 'dosageInstruction/timing/repeat/boundsRange/low/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_timing_repeat_boundsrange_high_value IS 'dosageInstruction/timing/repeat/boundsRange/high/value (double precision)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_timing_repeat_boundsrange_high_unit IS 'dosageInstruction/timing/repeat/boundsRange/high/unit (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_timing_repeat_boundsrange_high_system IS 'dosageInstruction/timing/repeat/boundsRange/high/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_timing_repeat_boundsrange_high_code IS 'dosageInstruction/timing/repeat/boundsRange/high/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_timing_repeat_boundsperiod_start IS 'dosageInstruction/timing/repeat/boundsPeriod/start (timestamp)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_timing_repeat_boundsperiod_end IS 'dosageInstruction/timing/repeat/boundsPeriod/end (timestamp)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_timing_repeat_count IS 'dosageInstruction/timing/repeat/count (int)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_timing_repeat_countmax IS 'dosageInstruction/timing/repeat/countMax (int)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_timing_repeat_duration IS 'dosageInstruction/timing/repeat/duration (double precision)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_timing_repeat_durationmax IS 'dosageInstruction/timing/repeat/durationMax (double precision)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_timing_repeat_durationunit IS 'dosageInstruction/timing/repeat/durationUnit (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_timing_repeat_frequency IS 'dosageInstruction/timing/repeat/frequency (int)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_timing_repeat_frequencymax IS 'dosageInstruction/timing/repeat/frequencyMax (int)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_timing_repeat_period IS 'dosageInstruction/timing/repeat/period (double precision)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_timing_repeat_periodmax IS 'dosageInstruction/timing/repeat/periodMax (double precision)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_timing_repeat_periodunit IS 'dosageInstruction/timing/repeat/periodUnit (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_timing_repeat_dayofweek IS 'dosageInstruction/timing/repeat/dayOfWeek (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_timing_repeat_timeofday IS 'dosageInstruction/timing/repeat/timeOfDay (time)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_timing_repeat_when IS 'dosageInstruction/timing/repeat/when (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_timing_repeat_offset IS 'dosageInstruction/timing/repeat/offset (int)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_timing_code_system IS 'dosageInstruction/timing/code/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_timing_code_version IS 'dosageInstruction/timing/code/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_timing_code_code IS 'dosageInstruction/timing/code/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_timing_code_display IS 'dosageInstruction/timing/code/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_timing_code_text IS 'dosageInstruction/timing/code/text (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_asneededboolean IS 'dosageInstruction/asNeededBoolean (boolean)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_asneededcodeableconcept_system IS 'dosageInstruction/asNeededCodeableConcept/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_asneededcodeableconcept_version IS 'dosageInstruction/asNeededCodeableConcept/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_asneededcodeableconcept_code IS 'dosageInstruction/asNeededCodeableConcept/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_asneededcodeableconcept_display IS 'dosageInstruction/asNeededCodeableConcept/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_asneededcodeableconcept_text IS 'dosageInstruction/asNeededCodeableConcept/text (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_site_system IS 'dosageInstruction/site/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_site_version IS 'dosageInstruction/site/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_site_code IS 'dosageInstruction/site/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_site_display IS 'dosageInstruction/site/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_site_text IS 'dosageInstruction/site/text (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_route_system IS 'dosageInstruction/route/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_route_version IS 'dosageInstruction/route/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_route_code IS 'dosageInstruction/route/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_route_display IS 'dosageInstruction/route/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_route_text IS 'dosageInstruction/route/text (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_method_system IS 'dosageInstruction/method/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_method_version IS 'dosageInstruction/method/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_method_code IS 'dosageInstruction/method/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_method_display IS 'dosageInstruction/method/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_method_text IS 'dosageInstruction/method/text (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_doseandrate_type_system IS 'dosageInstruction/doseAndRate/type/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_doseandrate_type_version IS 'dosageInstruction/doseAndRate/type/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_doseandrate_type_code IS 'dosageInstruction/doseAndRate/type/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_doseandrate_type_display IS 'dosageInstruction/doseAndRate/type/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_doseandrate_type_text IS 'dosageInstruction/doseAndRate/type/text (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_doseandrate_doserange_low_value IS 'dosageInstruction/doseAndRate/doseRange/low/value (double precision)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_doseandrate_doserange_low_unit IS 'dosageInstruction/doseAndRate/doseRange/low/unit (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_doseandrate_doserange_low_system IS 'dosageInstruction/doseAndRate/doseRange/low/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_doseandrate_doserange_low_code IS 'dosageInstruction/doseAndRate/doseRange/low/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_doseandrate_doserange_high_value IS 'dosageInstruction/doseAndRate/doseRange/high/value (double precision)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_doseandrate_doserange_high_unit IS 'dosageInstruction/doseAndRate/doseRange/high/unit (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_doseandrate_doserange_high_system IS 'dosageInstruction/doseAndRate/doseRange/high/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_doseandrate_doserange_high_code IS 'dosageInstruction/doseAndRate/doseRange/high/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_doseandrate_dosequantity_value IS 'dosageInstruction/doseAndRate/doseQuantity/value (double precision)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_doseandrate_dosequantity_comparator IS 'dosageInstruction/doseAndRate/doseQuantity/comparator (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_doseandrate_dosequantity_unit IS 'dosageInstruction/doseAndRate/doseQuantity/unit (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_doseandrate_dosequantity_system IS 'dosageInstruction/doseAndRate/doseQuantity/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_doseandrate_dosequantity_code IS 'dosageInstruction/doseAndRate/doseQuantity/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_doseandrate_rateratio_numerator_value IS 'dosageInstruction/doseAndRate/rateRatio/numerator/value (double precision)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_doseandrate_rateratio_numerator_comparator IS 'dosageInstruction/doseAndRate/rateRatio/numerator/comparator (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_doseandrate_rateratio_numerator_unit IS 'dosageInstruction/doseAndRate/rateRatio/numerator/unit (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_doseandrate_rateratio_numerator_system IS 'dosageInstruction/doseAndRate/rateRatio/numerator/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_doseandrate_rateratio_numerator_code IS 'dosageInstruction/doseAndRate/rateRatio/numerator/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_doseandrate_rateratio_denominator_value IS 'dosageInstruction/doseAndRate/rateRatio/denominator/value (double precision)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_doseandrate_rateratio_denominator_comparator IS 'dosageInstruction/doseAndRate/rateRatio/denominator/comparator (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_doseandrate_rateratio_denominator_unit IS 'dosageInstruction/doseAndRate/rateRatio/denominator/unit (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_doseandrate_rateratio_denominator_system IS 'dosageInstruction/doseAndRate/rateRatio/denominator/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_doseandrate_rateratio_denominator_code IS 'dosageInstruction/doseAndRate/rateRatio/denominator/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_doseandrate_raterange_low_value IS 'dosageInstruction/doseAndRate/rateRange/low/value (double precision)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_doseandrate_raterange_low_unit IS 'dosageInstruction/doseAndRate/rateRange/low/unit (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_doseandrate_raterange_low_system IS 'dosageInstruction/doseAndRate/rateRange/low/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_doseandrate_raterange_low_code IS 'dosageInstruction/doseAndRate/rateRange/low/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_doseandrate_raterange_high_value IS 'dosageInstruction/doseAndRate/rateRange/high/value (double precision)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_doseandrate_raterange_high_unit IS 'dosageInstruction/doseAndRate/rateRange/high/unit (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_doseandrate_raterange_high_system IS 'dosageInstruction/doseAndRate/rateRange/high/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_doseandrate_raterange_high_code IS 'dosageInstruction/doseAndRate/rateRange/high/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_doseandrate_ratequantity_value IS 'dosageInstruction/doseAndRate/rateQuantity/value (double precision)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_doseandrate_ratequantity_unit IS 'dosageInstruction/doseAndRate/rateQuantity/unit (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_doseandrate_ratequantity_system IS 'dosageInstruction/doseAndRate/rateQuantity/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_doseandrate_ratequantity_code IS 'dosageInstruction/doseAndRate/rateQuantity/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_maxdoseperperiod_numerator_value IS 'dosageInstruction/maxDosePerPeriod/numerator/value (double precision)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_maxdoseperperiod_numerator_comparator IS 'dosageInstruction/maxDosePerPeriod/numerator/comparator (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_maxdoseperperiod_numerator_unit IS 'dosageInstruction/maxDosePerPeriod/numerator/unit (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_maxdoseperperiod_numerator_system IS 'dosageInstruction/maxDosePerPeriod/numerator/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_maxdoseperperiod_numerator_code IS 'dosageInstruction/maxDosePerPeriod/numerator/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_maxdoseperperiod_denominator_value IS 'dosageInstruction/maxDosePerPeriod/denominator/value (double precision)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_maxdoseperperiod_denominator_comparator IS 'dosageInstruction/maxDosePerPeriod/denominator/comparator (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_maxdoseperperiod_denominator_unit IS 'dosageInstruction/maxDosePerPeriod/denominator/unit (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_maxdoseperperiod_denominator_system IS 'dosageInstruction/maxDosePerPeriod/denominator/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_maxdoseperperiod_denominator_code IS 'dosageInstruction/maxDosePerPeriod/denominator/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_maxdoseperadministration_value IS 'dosageInstruction/maxDosePerAdministration/value (double precision)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_maxdoseperadministration_unit IS 'dosageInstruction/maxDosePerAdministration/unit (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_maxdoseperadministration_system IS 'dosageInstruction/maxDosePerAdministration/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_maxdoseperadministration_code IS 'dosageInstruction/maxDosePerAdministration/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_maxdoseperlifetime_value IS 'dosageInstruction/maxDosePerLifetime/value (double precision)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_maxdoseperlifetime_unit IS 'dosageInstruction/maxDosePerLifetime/unit (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_maxdoseperlifetime_system IS 'dosageInstruction/maxDosePerLifetime/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_doseinstruc_maxdoseperlifetime_code IS 'dosageInstruction/maxDosePerLifetime/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_substitution_reason_system IS 'substitution/reason/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_substitution_reason_version IS 'substitution/reason/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_substitution_reason_code IS 'substitution/reason/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_substitution_reason_display IS 'substitution/reason/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.medreq_substitution_reason_text IS 'substitution/reason/text (varchar)';
COMMENT ON COLUMN cds2db_in.medicationrequest.input_datetime IS 'Time at which the data record is inserted';
COMMENT ON COLUMN cds2db_in.medicationrequest.last_check_datetime IS 'Time at which data record was last checked';
COMMENT ON COLUMN cds2db_in.medicationrequest.current_dataset_status IS 'Processing status of the data record';
COMMENT ON COLUMN cds2db_in.medicationrequest.input_processing_nr IS '(First) Processing number of the data record';
COMMENT ON COLUMN cds2db_in.medicationrequest.last_processing_nr IS 'Last processing number of the data record';
COMMENT ON COLUMN cds2db_in.medicationadministration.medicationadministration_id IS 'Primary key of the entity';
COMMENT ON COLUMN cds2db_in.medicationadministration.medicationadministration_raw_id IS 'Primary key of the corresponding raw table';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_id IS 'id (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_meta_versionid IS 'meta/versionId (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_meta_lastupdated IS 'meta/lastUpdated (timestamp)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_meta_profile IS 'meta/profile (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_identifier_use IS 'identifier/use (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_identifier_type_system IS 'identifier/type/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_identifier_type_version IS 'identifier/type/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_identifier_type_code IS 'identifier/type/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_identifier_type_display IS 'identifier/type/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_identifier_type_text IS 'identifier/type/text (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_identifier_system IS 'identifier/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_identifier_value IS 'identifier/value (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_identifier_start IS 'identifier/start (timestamp)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_identifier_end IS 'identifier/end (timestamp)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_encounter_ref IS 'context/reference (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_patient_ref IS 'subject/reference (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_partof_ref IS 'partOf/reference (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_status IS 'status (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_statusreason_system IS 'statusReason/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_statusreason_version IS 'statusReason/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_statusreason_code IS 'statusReason/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_statusreason_display IS 'statusReason/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_statusreason_text IS 'statusReason/text (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_category_system IS 'category/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_category_version IS 'category/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_category_code IS 'category/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_category_display IS 'category/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_category_text IS 'category/text (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_medicationreference_ref IS 'medicationReference/reference (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_medicationcodeableconcept_system IS 'medicationCodeableConcept/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_medicationcodeableconcept_version IS 'medicationCodeableConcept/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_medicationcodeableconcept_code IS 'medicationCodeableConcept/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_medicationcodeableconcept_display IS 'medicationCodeableConcept/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_medicationcodeableconcept_text IS 'medicationCodeableConcept/text (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_supportinginformation_ref IS 'supportingInformation/reference (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_supportinginformation_type IS 'supportingInformation/type (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_supportinginformation_identifier_use IS 'supportingInformation/identifier/use (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_supportinginformation_identifier_type_system IS 'supportingInformation/identifier/type/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_supportinginformation_identifier_type_version IS 'supportingInformation/identifier/type/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_supportinginformation_identifier_type_code IS 'supportingInformation/identifier/type/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_supportinginformation_identifier_type_display IS 'supportingInformation/identifier/type/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_supportinginformation_identifier_type_text IS 'supportingInformation/identifier/type/text (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_supportinginformation_identifier_system IS 'supportingInformation/identifier/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_supportinginformation_identifier_value IS 'supportingInformation/identifier/value (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_supportinginformation_display IS 'supportingInformation/display (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_effectivedatetime IS 'effectiveDateTime (timestamp)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_effectiveperiod_start IS 'effectivePeriod/start (timestamp)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_effectiveperiod_end IS 'effectivePeriod/end (timestamp)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_performer_function_system IS 'performer/function/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_performer_function_version IS 'performer/function/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_performer_function_code IS 'performer/function/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_performer_function_display IS 'performer/function/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_performer_function_text IS 'performer/function/text (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_reasoncode_system IS 'reasonCode/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_reasoncode_version IS 'reasonCode/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_reasoncode_code IS 'reasonCode/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_reasoncode_display IS 'reasonCode/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_reasoncode_text IS 'reasonCode/text (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_reasonreference_ref IS 'reasonReference/reference (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_reasonreference_type IS 'reasonReference/type (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_reasonreference_identifier_use IS 'reasonReference/identifier/use (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_reasonreference_identifier_type_system IS 'reasonReference/identifier/type/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_reasonreference_identifier_type_version IS 'reasonReference/identifier/type/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_reasonreference_identifier_type_code IS 'reasonReference/identifier/type/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_reasonreference_identifier_type_display IS 'reasonReference/identifier/type/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_reasonreference_identifier_type_text IS 'reasonReference/identifier/type/text (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_reasonreference_identifier_system IS 'reasonReference/identifier/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_reasonreference_identifier_value IS 'reasonReference/identifier/value (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_reasonreference_display IS 'reasonReference/display (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_request_ref IS 'request/reference (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_note_authorstring IS 'note/authorString (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_note_authorreference_ref IS 'note/authorReference/reference (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_note_authorreference_type IS 'note/authorReference/type (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_note_authorreference_identifier_use IS 'note/authorReference/identifier/use (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_note_authorreference_identifier_type_system IS 'note/authorReference/identifier/type/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_note_authorreference_identifier_type_version IS 'note/authorReference/identifier/type/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_note_authorreference_identifier_type_code IS 'note/authorReference/identifier/type/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_note_authorreference_identifier_type_display IS 'note/authorReference/identifier/type/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_note_authorreference_identifier_type_text IS 'note/authorReference/identifier/type/text (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_note_authorreference_identifier_system IS 'note/authorReference/identifier/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_note_authorreference_identifier_value IS 'note/authorReference/identifier/value (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_note_authorreference_display IS 'note/authorReference/display (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_note_time IS 'note/time (timestamp)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_note_text IS 'note/text (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_dosage_text IS 'dosage/text (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_dosage_site_system IS 'dosage/site/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_dosage_site_version IS 'dosage/site/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_dosage_site_code IS 'dosage/site/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_dosage_site_display IS 'dosage/site/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_dosage_site_text IS 'dosage/site/text (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_dosage_route_system IS 'dosage/route/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_dosage_route_version IS 'dosage/route/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_dosage_route_code IS 'dosage/route/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_dosage_route_display IS 'dosage/route/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_dosage_route_text IS 'dosage/route/text (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_dosage_method_system IS 'dosage/method/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_dosage_method_version IS 'dosage/method/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_dosage_method_code IS 'dosage/method/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_dosage_method_display IS 'dosage/method/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_dosage_method_text IS 'dosage/method/text (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_dosage_dose_value IS 'dosage/dose/value (double precision)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_dosage_dose_unit IS 'dosage/dose/unit (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_dosage_dose_system IS 'dosage/dose/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_dosage_dose_code IS 'dosage/dose/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_dosage_rateratio_numerator_value IS 'dosage/rateRatio/numerator/value (double precision)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_dosage_rateratio_numerator_comparator IS 'dosage/rateRatio/numerator/comparator (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_dosage_rateratio_numerator_unit IS 'dosage/rateRatio/numerator/unit (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_dosage_rateratio_numerator_system IS 'dosage/rateRatio/numerator/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_dosage_rateratio_numerator_code IS 'dosage/rateRatio/numerator/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_dosage_rateratio_denominator_value IS 'dosage/rateRatio/denominator/value (double precision)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_dosage_rateratio_denominator_comparator IS 'dosage/rateRatio/denominator/comparator (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_dosage_rateratio_denominator_unit IS 'dosage/rateRatio/denominator/unit (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_dosage_rateratio_denominator_system IS 'dosage/rateRatio/denominator/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_dosage_rateratio_denominator_code IS 'dosage/rateRatio/denominator/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_dosage_ratequantity_value IS 'dosage/rateQuantity/value (double precision)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_dosage_ratequantity_unit IS 'dosage/rateQuantity/unit (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_dosage_ratequantity_system IS 'dosage/rateQuantity/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.medadm_dosage_ratequantity_code IS 'dosage/rateQuantity/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationadministration.input_datetime IS 'Time at which the data record is inserted';
COMMENT ON COLUMN cds2db_in.medicationadministration.last_check_datetime IS 'Time at which data record was last checked';
COMMENT ON COLUMN cds2db_in.medicationadministration.current_dataset_status IS 'Processing status of the data record';
COMMENT ON COLUMN cds2db_in.medicationadministration.input_processing_nr IS '(First) Processing number of the data record';
COMMENT ON COLUMN cds2db_in.medicationadministration.last_processing_nr IS 'Last processing number of the data record';
COMMENT ON COLUMN cds2db_in.medicationstatement.medicationstatement_id IS 'Primary key of the entity';
COMMENT ON COLUMN cds2db_in.medicationstatement.medicationstatement_raw_id IS 'Primary key of the corresponding raw table';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_id IS 'id (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_meta_versionid IS 'meta/versionId (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_meta_lastupdated IS 'meta/lastUpdated (timestamp)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_meta_profile IS 'meta/profile (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_identifier_use IS 'identifier/use (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_identifier_type_system IS 'identifier/type/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_identifier_type_version IS 'identifier/type/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_identifier_type_code IS 'identifier/type/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_identifier_type_display IS 'identifier/type/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_identifier_type_text IS 'identifier/type/text (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_identifier_system IS 'identifier/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_identifier_value IS 'identifier/value (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_identifier_start IS 'identifier/start (timestamp)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_identifier_end IS 'identifier/end (timestamp)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_encounter_ref IS 'context/reference (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_patient_ref IS 'subject/reference (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_partof_ref IS 'partOf/reference (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_basedon_ref IS 'basedOn/reference (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_basedon_type IS 'basedOn/type (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_basedon_identifier_use IS 'basedOn/identifier/use (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_basedon_identifier_type_system IS 'basedOn/identifier/type/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_basedon_identifier_type_version IS 'basedOn/identifier/type/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_basedon_identifier_type_code IS 'basedOn/identifier/type/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_basedon_identifier_type_display IS 'basedOn/identifier/type/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_basedon_identifier_type_text IS 'basedOn/identifier/type/text (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_basedon_identifier_system IS 'basedOn/identifier/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_basedon_identifier_value IS 'basedOn/identifier/value (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_basedon_display IS 'basedOn/display (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_status IS 'status (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_statusreason_system IS 'statusReason/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_statusreason_version IS 'statusReason/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_statusreason_code IS 'statusReason/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_statusreason_display IS 'statusReason/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_statusreason_text IS 'statusReason/text (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_category_system IS 'category/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_category_version IS 'category/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_category_code IS 'category/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_category_display IS 'category/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_category_text IS 'category/text (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_medicationreference_ref IS 'medicationReference/reference (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_medicationcodeableconcept_system IS 'medicationCodeableConcept/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_medicationcodeableconcept_version IS 'medicationCodeableConcept/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_medicationcodeableconcept_code IS 'medicationCodeableConcept/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_medicationcodeableconcept_display IS 'medicationCodeableConcept/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_medicationcodeableconcept_text IS 'medicationCodeableConcept/text (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_effectivedatetime IS 'effectiveDateTime (timestamp)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_effectiveperiod_start IS 'effectivePeriod/start (timestamp)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_effectiveperiod_end IS 'effectivePeriod/end (timestamp)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dateasserted IS 'dateAsserted (timestamp)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_informationsource_ref IS 'informationSource/reference (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_informationsource_type IS 'informationSource/type (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_informationsource_identifier_use IS 'informationSource/identifier/use (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_informationsource_identifier_type_system IS 'informationSource/identifier/type/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_informationsource_identifier_type_version IS 'informationSource/identifier/type/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_informationsource_identifier_type_code IS 'informationSource/identifier/type/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_informationsource_identifier_type_display IS 'informationSource/identifier/type/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_informationsource_identifier_type_text IS 'informationSource/identifier/type/text (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_informationsource_identifier_system IS 'informationSource/identifier/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_informationsource_identifier_value IS 'informationSource/identifier/value (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_informationsource_display IS 'informationSource/display (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_derivedfrom_ref IS 'derivedFrom/reference (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_derivedfrom_type IS 'derivedFrom/type (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_derivedfrom_identifier_use IS 'derivedFrom/identifier/use (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_derivedfrom_identifier_type_system IS 'derivedFrom/identifier/type/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_derivedfrom_identifier_type_version IS 'derivedFrom/identifier/type/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_derivedfrom_identifier_type_code IS 'derivedFrom/identifier/type/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_derivedfrom_identifier_type_display IS 'derivedFrom/identifier/type/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_derivedfrom_identifier_type_text IS 'derivedFrom/identifier/type/text (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_derivedfrom_identifier_system IS 'derivedFrom/identifier/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_derivedfrom_identifier_value IS 'derivedFrom/identifier/value (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_derivedfrom_display IS 'derivedFrom/display (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_reasoncode_system IS 'reasonCode/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_reasoncode_version IS 'reasonCode/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_reasoncode_code IS 'reasonCode/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_reasoncode_display IS 'reasonCode/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_reasoncode_text IS 'reasonCode/text (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_reasonreference_ref IS 'reasonReference/reference (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_reasonreference_type IS 'reasonReference/type (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_reasonreference_identifier_use IS 'reasonReference/identifier/use (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_reasonreference_identifier_type_system IS 'reasonReference/identifier/type/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_reasonreference_identifier_type_version IS 'reasonReference/identifier/type/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_reasonreference_identifier_type_code IS 'reasonReference/identifier/type/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_reasonreference_identifier_type_display IS 'reasonReference/identifier/type/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_reasonreference_identifier_type_text IS 'reasonReference/identifier/type/text (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_reasonreference_identifier_system IS 'reasonReference/identifier/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_reasonreference_identifier_value IS 'reasonReference/identifier/value (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_reasonreference_display IS 'reasonReference/display (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_note_authorstring IS 'note/authorString (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_note_authorreference_ref IS 'note/authorReference/reference (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_note_authorreference_type IS 'note/authorReference/type (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_note_authorreference_identifier_use IS 'note/authorReference/identifier/use (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_note_authorreference_identifier_type_system IS 'note/authorReference/identifier/type/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_note_authorreference_identifier_type_version IS 'note/authorReference/identifier/type/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_note_authorreference_identifier_type_code IS 'note/authorReference/identifier/type/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_note_authorreference_identifier_type_display IS 'note/authorReference/identifier/type/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_note_authorreference_identifier_type_text IS 'note/authorReference/identifier/type/text (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_note_authorreference_identifier_system IS 'note/authorReference/identifier/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_note_authorreference_identifier_value IS 'note/authorReference/identifier/value (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_note_authorreference_display IS 'note/authorReference/display (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_note_time IS 'note/time (timestamp)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_note_text IS 'note/text (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_sequence IS 'dosage/sequence (int)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_text IS 'dosage/text (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_additionalinstruction_system IS 'dosage/additionalInstruction/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_additionalinstruction_version IS 'dosage/additionalInstruction/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_additionalinstruction_code IS 'dosage/additionalInstruction/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_additionalinstruction_display IS 'dosage/additionalInstruction/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_additionalinstruction_text IS 'dosage/additionalInstruction/text (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_patientinstruction IS 'dosage/patientInstruction (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_timing_event IS 'dosage/timing/event (timestamp)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_timing_repeat_boundsduration_value IS 'dosage/timing/repeat/boundsDuration/value (double precision)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_timing_repeat_boundsduration_comparator IS 'dosage/timing/repeat/boundsDuration/comparator (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_timing_repeat_boundsduration_unit IS 'dosage/timing/repeat/boundsDuration/unit (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_timing_repeat_boundsduration_system IS 'dosage/timing/repeat/boundsDuration/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_timing_repeat_boundsduration_code IS 'dosage/timing/repeat/boundsDuration/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_timing_repeat_boundsrange_low_value IS 'dosage/timing/repeat/boundsRange/low/value (double precision)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_timing_repeat_boundsrange_low_unit IS 'dosage/timing/repeat/boundsRange/low/unit (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_timing_repeat_boundsrange_low_system IS 'dosage/timing/repeat/boundsRange/low/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_timing_repeat_boundsrange_low_code IS 'dosage/timing/repeat/boundsRange/low/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_timing_repeat_boundsrange_high_value IS 'dosage/timing/repeat/boundsRange/high/value (double precision)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_timing_repeat_boundsrange_high_unit IS 'dosage/timing/repeat/boundsRange/high/unit (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_timing_repeat_boundsrange_high_system IS 'dosage/timing/repeat/boundsRange/high/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_timing_repeat_boundsrange_high_code IS 'dosage/timing/repeat/boundsRange/high/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_timing_repeat_boundsperiod_start IS 'dosage/timing/repeat/boundsPeriod/start (timestamp)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_timing_repeat_boundsperiod_end IS 'dosage/timing/repeat/boundsPeriod/end (timestamp)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_timing_repeat_count IS 'dosage/timing/repeat/count (int)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_timing_repeat_countmax IS 'dosage/timing/repeat/countMax (int)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_timing_repeat_duration IS 'dosage/timing/repeat/duration (double precision)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_timing_repeat_durationmax IS 'dosage/timing/repeat/durationMax (double precision)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_timing_repeat_durationunit IS 'dosage/timing/repeat/durationUnit (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_timing_repeat_frequency IS 'dosage/timing/repeat/frequency (int)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_timing_repeat_frequencymax IS 'dosage/timing/repeat/frequencyMax (int)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_timing_repeat_period IS 'dosage/timing/repeat/period (double precision)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_timing_repeat_periodmax IS 'dosage/timing/repeat/periodMax (double precision)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_timing_repeat_periodunit IS 'dosage/timing/repeat/periodUnit (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_timing_repeat_dayofweek IS 'dosage/timing/repeat/dayOfWeek (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_timing_repeat_timeofday IS 'dosage/timing/repeat/timeOfDay (time)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_timing_repeat_when IS 'dosage/timing/repeat/when (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_timing_repeat_offset IS 'dosage/timing/repeat/offset (int)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_timing_code_system IS 'dosage/timing/code/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_timing_code_version IS 'dosage/timing/code/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_timing_code_code IS 'dosage/timing/code/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_timing_code_display IS 'dosage/timing/code/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_timing_code_text IS 'dosage/timing/code/text (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_asneededboolean IS 'dosage/asNeededBoolean (boolean)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_asneededcodeableconcept_system IS 'dosage/asNeededCodeableConcept/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_asneededcodeableconcept_version IS 'dosage/asNeededCodeableConcept/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_asneededcodeableconcept_code IS 'dosage/asNeededCodeableConcept/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_asneededcodeableconcept_display IS 'dosage/asNeededCodeableConcept/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_asneededcodeableconcept_text IS 'dosage/asNeededCodeableConcept/text (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_site_system IS 'dosage/site/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_site_version IS 'dosage/site/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_site_code IS 'dosage/site/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_site_display IS 'dosage/site/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_site_text IS 'dosage/site/text (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_route_system IS 'dosage/route/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_route_version IS 'dosage/route/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_route_code IS 'dosage/route/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_route_display IS 'dosage/route/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_route_text IS 'dosage/route/text (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_method_system IS 'dosage/method/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_method_version IS 'dosage/method/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_method_code IS 'dosage/method/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_method_display IS 'dosage/method/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_method_text IS 'dosage/method/text (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_doseandrate_type_system IS 'dosage/doseAndRate/type/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_doseandrate_type_version IS 'dosage/doseAndRate/type/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_doseandrate_type_code IS 'dosage/doseAndRate/type/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_doseandrate_type_display IS 'dosage/doseAndRate/type/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_doseandrate_type_text IS 'dosage/doseAndRate/type/text (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_doseandrate_doserange_low_value IS 'dosage/doseAndRate/doseRange/low/value (double precision)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_doseandrate_doserange_low_unit IS 'dosage/doseAndRate/doseRange/low/unit (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_doseandrate_doserange_low_system IS 'dosage/doseAndRate/doseRange/low/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_doseandrate_doserange_low_code IS 'dosage/doseAndRate/doseRange/low/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_doseandrate_doserange_high_value IS 'dosage/doseAndRate/doseRange/high/value (double precision)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_doseandrate_doserange_high_unit IS 'dosage/doseAndRate/doseRange/high/unit (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_doseandrate_doserange_high_system IS 'dosage/doseAndRate/doseRange/high/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_doseandrate_doserange_high_code IS 'dosage/doseAndRate/doseRange/high/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_doseandrate_dosequantity_value IS 'dosage/doseAndRate/doseQuantity/value (double precision)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_doseandrate_dosequantity_comparator IS 'dosage/doseAndRate/doseQuantity/comparator (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_doseandrate_dosequantity_unit IS 'dosage/doseAndRate/doseQuantity/unit (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_doseandrate_dosequantity_system IS 'dosage/doseAndRate/doseQuantity/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_doseandrate_dosequantity_code IS 'dosage/doseAndRate/doseQuantity/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_doseandrate_rateratio_numerator_value IS 'dosage/doseAndRate/rateRatio/numerator/value (double precision)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_doseandrate_rateratio_numerator_comparator IS 'dosage/doseAndRate/rateRatio/numerator/comparator (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_doseandrate_rateratio_numerator_unit IS 'dosage/doseAndRate/rateRatio/numerator/unit (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_doseandrate_rateratio_numerator_system IS 'dosage/doseAndRate/rateRatio/numerator/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_doseandrate_rateratio_numerator_code IS 'dosage/doseAndRate/rateRatio/numerator/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_doseandrate_rateratio_denominator_value IS 'dosage/doseAndRate/rateRatio/denominator/value (double precision)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_doseandrate_rateratio_denominator_comparator IS 'dosage/doseAndRate/rateRatio/denominator/comparator (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_doseandrate_rateratio_denominator_unit IS 'dosage/doseAndRate/rateRatio/denominator/unit (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_doseandrate_rateratio_denominator_system IS 'dosage/doseAndRate/rateRatio/denominator/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_doseandrate_rateratio_denominator_code IS 'dosage/doseAndRate/rateRatio/denominator/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_doseandrate_raterange_low_value IS 'dosage/doseAndRate/rateRange/low/value (double precision)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_doseandrate_raterange_low_unit IS 'dosage/doseAndRate/rateRange/low/unit (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_doseandrate_raterange_low_system IS 'dosage/doseAndRate/rateRange/low/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_doseandrate_raterange_low_code IS 'dosage/doseAndRate/rateRange/low/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_doseandrate_raterange_high_value IS 'dosage/doseAndRate/rateRange/high/value (double precision)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_doseandrate_raterange_high_unit IS 'dosage/doseAndRate/rateRange/high/unit (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_doseandrate_raterange_high_system IS 'dosage/doseAndRate/rateRange/high/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_doseandrate_raterange_high_code IS 'dosage/doseAndRate/rateRange/high/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_doseandrate_ratequantity_value IS 'dosage/doseAndRate/rateQuantity/value (double precision)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_doseandrate_ratequantity_unit IS 'dosage/doseAndRate/rateQuantity/unit (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_doseandrate_ratequantity_system IS 'dosage/doseAndRate/rateQuantity/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_doseandrate_ratequantity_code IS 'dosage/doseAndRate/rateQuantity/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_maxdoseperperiod_numerator_value IS 'dosage/maxDosePerPeriod/numerator/value (double precision)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_maxdoseperperiod_numerator_comparator IS 'dosage/maxDosePerPeriod/numerator/comparator (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_maxdoseperperiod_numerator_unit IS 'dosage/maxDosePerPeriod/numerator/unit (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_maxdoseperperiod_numerator_system IS 'dosage/maxDosePerPeriod/numerator/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_maxdoseperperiod_numerator_code IS 'dosage/maxDosePerPeriod/numerator/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_maxdoseperperiod_denominator_value IS 'dosage/maxDosePerPeriod/denominator/value (double precision)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_maxdoseperperiod_denominator_comparator IS 'dosage/maxDosePerPeriod/denominator/comparator (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_maxdoseperperiod_denominator_unit IS 'dosage/maxDosePerPeriod/denominator/unit (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_maxdoseperperiod_denominator_system IS 'dosage/maxDosePerPeriod/denominator/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_maxdoseperperiod_denominator_code IS 'dosage/maxDosePerPeriod/denominator/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_maxdoseperadministration_value IS 'dosage/maxDosePerAdministration/value (double precision)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_maxdoseperadministration_unit IS 'dosage/maxDosePerAdministration/unit (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_maxdoseperadministration_system IS 'dosage/maxDosePerAdministration/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_maxdoseperadministration_code IS 'dosage/maxDosePerAdministration/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_maxdoseperlifetime_value IS 'dosage/maxDosePerLifetime/value (double precision)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_maxdoseperlifetime_unit IS 'dosage/maxDosePerLifetime/unit (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_maxdoseperlifetime_system IS 'dosage/maxDosePerLifetime/system (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.medstat_dosage_maxdoseperlifetime_code IS 'dosage/maxDosePerLifetime/code (varchar)';
COMMENT ON COLUMN cds2db_in.medicationstatement.input_datetime IS 'Time at which the data record is inserted';
COMMENT ON COLUMN cds2db_in.medicationstatement.last_check_datetime IS 'Time at which data record was last checked';
COMMENT ON COLUMN cds2db_in.medicationstatement.current_dataset_status IS 'Processing status of the data record';
COMMENT ON COLUMN cds2db_in.medicationstatement.input_processing_nr IS '(First) Processing number of the data record';
COMMENT ON COLUMN cds2db_in.medicationstatement.last_processing_nr IS 'Last processing number of the data record';
COMMENT ON COLUMN cds2db_in.observation.observation_id IS 'Primary key of the entity';
COMMENT ON COLUMN cds2db_in.observation.observation_raw_id IS 'Primary key of the corresponding raw table';
COMMENT ON COLUMN cds2db_in.observation.obs_id IS 'id (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_meta_versionid IS 'meta/versionId (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_meta_lastupdated IS 'meta/lastUpdated (timestamp)';
COMMENT ON COLUMN cds2db_in.observation.obs_meta_profile IS 'meta/profile (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_identifier_use IS 'identifier/use (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_identifier_type_system IS 'identifier/type/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_identifier_type_version IS 'identifier/type/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_identifier_type_code IS 'identifier/type/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_identifier_type_display IS 'identifier/type/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_identifier_type_text IS 'identifier/type/text (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_identifier_system IS 'identifier/system (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_identifier_value IS 'identifier/value (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_identifier_start IS 'identifier/start (timestamp)';
COMMENT ON COLUMN cds2db_in.observation.obs_identifier_end IS 'identifier/end (timestamp)';
COMMENT ON COLUMN cds2db_in.observation.obs_encounter_ref IS 'encounter/reference (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_patient_ref IS 'subject/reference (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_partof_ref IS 'partOf/reference (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_basedon_ref IS 'basedOn/reference (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_basedon_type IS 'basedOn/type (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_basedon_identifier_use IS 'basedOn/identifier/use (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_basedon_identifier_type_system IS 'basedOn/identifier/type/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_basedon_identifier_type_version IS 'basedOn/identifier/type/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_basedon_identifier_type_code IS 'basedOn/identifier/type/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_basedon_identifier_type_display IS 'basedOn/identifier/type/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_basedon_identifier_type_text IS 'basedOn/identifier/type/text (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_basedon_identifier_system IS 'basedOn/identifier/system (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_basedon_identifier_value IS 'basedOn/identifier/value (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_basedon_display IS 'basedOn/display (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_status IS 'status (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_category_system IS 'category/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_category_version IS 'category/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_category_code IS 'category/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_category_display IS 'category/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_category_text IS 'category/text (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_code_system IS 'code/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_code_version IS 'code/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_code_code IS 'code/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_code_display IS 'code/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_code_text IS 'code/text (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_effectivedatetime IS 'effectiveDateTime (timestamp)';
COMMENT ON COLUMN cds2db_in.observation.obs_issued IS 'issued (timestamp)';
COMMENT ON COLUMN cds2db_in.observation.obs_valuerange_low_value IS 'valueRange/low/value (double precision)';
COMMENT ON COLUMN cds2db_in.observation.obs_valuerange_low_unit IS 'valueRange/low/unit (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_valuerange_low_system IS 'valueRange/low/system (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_valuerange_low_code IS 'valueRange/low/code (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_valuerange_high_value IS 'valueRange/high/value (double precision)';
COMMENT ON COLUMN cds2db_in.observation.obs_valuerange_high_unit IS 'valueRange/high/unit (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_valuerange_high_system IS 'valueRange/high/system (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_valuerange_high_code IS 'valueRange/high/code (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_valueratio_numerator_value IS 'valueRatio/numerator/value (double precision)';
COMMENT ON COLUMN cds2db_in.observation.obs_valueratio_numerator_comparator IS 'valueRatio/numerator/comparator (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_valueratio_numerator_unit IS 'valueRatio/numerator/unit (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_valueratio_numerator_system IS 'valueRatio/numerator/system (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_valueratio_numerator_code IS 'valueRatio/numerator/code (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_valueratio_denominator_value IS 'valueRatio/denominator/value (double precision)';
COMMENT ON COLUMN cds2db_in.observation.obs_valueratio_denominator_comparator IS 'valueRatio/denominator/comparator (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_valueratio_denominator_unit IS 'valueRatio/denominator/unit (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_valueratio_denominator_system IS 'valueRatio/denominator/system (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_valueratio_denominator_code IS 'valueRatio/denominator/code (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_valuequantity_value IS 'valueQuantity/value (double precision)';
COMMENT ON COLUMN cds2db_in.observation.obs_valuequantity_comparator IS 'valueQuantity/comparator (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_valuequantity_unit IS 'valueQuantity/unit (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_valuequantity_system IS 'valueQuantity/system (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_valuequantity_code IS 'valueQuantity/code (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_valuecodeableconcept_system IS 'valueCodeableConcept/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_valuecodeableconcept_version IS 'valueCodeableConcept/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_valuecodeableconcept_code IS 'valueCodeableConcept/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_valuecodeableconcept_display IS 'valueCodeableConcept/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_valuecodeableconcept_text IS 'valueCodeableConcept/text (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_dataabsentreason_system IS 'dataAbsentReason/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_dataabsentreason_version IS 'dataAbsentReason/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_dataabsentreason_code IS 'dataAbsentReason/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_dataabsentreason_display IS 'dataAbsentReason/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_dataabsentreason_text IS 'dataAbsentReason/text (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_note_authorstring IS 'note/authorString (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_note_authorreference_ref IS 'note/authorReference/reference (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_note_authorreference_type IS 'note/authorReference/type (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_note_authorreference_identifier_use IS 'note/authorReference/identifier/use (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_note_authorreference_identifier_type_system IS 'note/authorReference/identifier/type/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_note_authorreference_identifier_type_version IS 'note/authorReference/identifier/type/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_note_authorreference_identifier_type_code IS 'note/authorReference/identifier/type/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_note_authorreference_identifier_type_display IS 'note/authorReference/identifier/type/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_note_authorreference_identifier_type_text IS 'note/authorReference/identifier/type/text (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_note_authorreference_identifier_system IS 'note/authorReference/identifier/system (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_note_authorreference_identifier_value IS 'note/authorReference/identifier/value (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_note_authorreference_display IS 'note/authorReference/display (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_note_time IS 'note/time (timestamp)';
COMMENT ON COLUMN cds2db_in.observation.obs_note_text IS 'note/text (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_method_system IS 'method/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_method_version IS 'method/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_method_code IS 'method/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_method_display IS 'method/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_method_text IS 'method/text (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_performer_ref IS 'performer/reference (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_performer_type IS 'performer/type (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_performer_identifier_use IS 'performer/identifier/use (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_performer_identifier_type_system IS 'performer/identifier/type/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_performer_identifier_type_version IS 'performer/identifier/type/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_performer_identifier_type_code IS 'performer/identifier/type/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_performer_identifier_type_display IS 'performer/identifier/type/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_performer_identifier_type_text IS 'performer/identifier/type/text (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_performer_identifier_system IS 'performer/identifier/system (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_performer_identifier_value IS 'performer/identifier/value (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_performer_display IS 'performer/display (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_referencerange_low_value IS 'referenceRange/low/value (double precision)';
COMMENT ON COLUMN cds2db_in.observation.obs_referencerange_low_unit IS 'referenceRange/low/unit (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_referencerange_low_system IS 'referenceRange/low/system (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_referencerange_low_code IS 'referenceRange/low/code (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_referencerange_high_value IS 'referenceRange/high/value (double precision)';
COMMENT ON COLUMN cds2db_in.observation.obs_referencerange_high_unit IS 'referenceRange/high/unit (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_referencerange_high_system IS 'referenceRange/high/system (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_referencerange_high_code IS 'referenceRange/high/code (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_referencerange_type_system IS 'referenceRange/type/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_referencerange_type_version IS 'referenceRange/type/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_referencerange_type_code IS 'referenceRange/type/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_referencerange_type_display IS 'referenceRange/type/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_referencerange_type_text IS 'referenceRange/type/text (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_referencerange_appliesto_system IS 'referenceRange/appliesTo/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_referencerange_appliesto_version IS 'referenceRange/appliesTo/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_referencerange_appliesto_code IS 'referenceRange/appliesTo/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_referencerange_appliesto_display IS 'referenceRange/appliesTo/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_referencerange_appliesto_text IS 'referenceRange/appliesTo/text (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_referencerange_age_low_value IS 'referenceRange/age/low/value (double precision)';
COMMENT ON COLUMN cds2db_in.observation.obs_referencerange_age_low_unit IS 'referenceRange/age/low/unit (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_referencerange_age_low_system IS 'referenceRange/age/low/system (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_referencerange_age_low_code IS 'referenceRange/age/low/code (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_referencerange_age_high_value IS 'referenceRange/age/high/value (double precision)';
COMMENT ON COLUMN cds2db_in.observation.obs_referencerange_age_high_unit IS 'referenceRange/age/high/unit (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_referencerange_age_high_system IS 'referenceRange/age/high/system (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_referencerange_age_high_code IS 'referenceRange/age/high/code (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_referencerange_text IS 'referenceRange/text (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_hasmember_ref IS 'hasMember/reference (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_hasmember_type IS 'hasMember/type (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_hasmember_identifier_use IS 'hasMember/identifier/use (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_hasmember_identifier_type_system IS 'hasMember/identifier/type/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_hasmember_identifier_type_version IS 'hasMember/identifier/type/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_hasmember_identifier_type_code IS 'hasMember/identifier/type/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_hasmember_identifier_type_display IS 'hasMember/identifier/type/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_hasmember_identifier_type_text IS 'hasMember/identifier/type/text (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_hasmember_identifier_system IS 'hasMember/identifier/system (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_hasmember_identifier_value IS 'hasMember/identifier/value (varchar)';
COMMENT ON COLUMN cds2db_in.observation.obs_hasmember_display IS 'hasMember/display (varchar)';
COMMENT ON COLUMN cds2db_in.observation.input_datetime IS 'Time at which the data record is inserted';
COMMENT ON COLUMN cds2db_in.observation.last_check_datetime IS 'Time at which data record was last checked';
COMMENT ON COLUMN cds2db_in.observation.current_dataset_status IS 'Processing status of the data record';
COMMENT ON COLUMN cds2db_in.observation.input_processing_nr IS '(First) Processing number of the data record';
COMMENT ON COLUMN cds2db_in.observation.last_processing_nr IS 'Last processing number of the data record';
COMMENT ON COLUMN cds2db_in.diagnosticreport.diagnosticreport_id IS 'Primary key of the entity';
COMMENT ON COLUMN cds2db_in.diagnosticreport.diagnosticreport_raw_id IS 'Primary key of the corresponding raw table';
COMMENT ON COLUMN cds2db_in.diagnosticreport.diagrep_id IS 'id (varchar)';
COMMENT ON COLUMN cds2db_in.diagnosticreport.diagrep_meta_versionid IS 'meta/versionId (varchar)';
COMMENT ON COLUMN cds2db_in.diagnosticreport.diagrep_meta_lastupdated IS 'meta/lastUpdated (timestamp)';
COMMENT ON COLUMN cds2db_in.diagnosticreport.diagrep_meta_profile IS 'meta/profile (varchar)';
COMMENT ON COLUMN cds2db_in.diagnosticreport.diagrep_identifier_use IS 'identifier/use (varchar)';
COMMENT ON COLUMN cds2db_in.diagnosticreport.diagrep_identifier_type_system IS 'identifier/type/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.diagnosticreport.diagrep_identifier_type_version IS 'identifier/type/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.diagnosticreport.diagrep_identifier_type_code IS 'identifier/type/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.diagnosticreport.diagrep_identifier_type_display IS 'identifier/type/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.diagnosticreport.diagrep_identifier_type_text IS 'identifier/type/text (varchar)';
COMMENT ON COLUMN cds2db_in.diagnosticreport.diagrep_identifier_system IS 'identifier/system (varchar)';
COMMENT ON COLUMN cds2db_in.diagnosticreport.diagrep_identifier_value IS 'identifier/value (varchar)';
COMMENT ON COLUMN cds2db_in.diagnosticreport.diagrep_identifier_start IS 'identifier/start (timestamp)';
COMMENT ON COLUMN cds2db_in.diagnosticreport.diagrep_identifier_end IS 'identifier/end (timestamp)';
COMMENT ON COLUMN cds2db_in.diagnosticreport.diagrep_encounter_ref IS 'encounter/reference (varchar)';
COMMENT ON COLUMN cds2db_in.diagnosticreport.diagrep_patient_ref IS 'subject/reference (varchar)';
COMMENT ON COLUMN cds2db_in.diagnosticreport.diagrep_partof_ref IS 'partOf/reference (varchar)';
COMMENT ON COLUMN cds2db_in.diagnosticreport.diagrep_result_ref IS 'result/reference (varchar)';
COMMENT ON COLUMN cds2db_in.diagnosticreport.diagrep_basedon_ref IS 'basedOn/reference (varchar)';
COMMENT ON COLUMN cds2db_in.diagnosticreport.diagrep_status IS 'status (varchar)';
COMMENT ON COLUMN cds2db_in.diagnosticreport.diagrep_category_system IS 'category/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.diagnosticreport.diagrep_category_version IS 'category/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.diagnosticreport.diagrep_category_code IS 'category/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.diagnosticreport.diagrep_category_display IS 'category/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.diagnosticreport.diagrep_category_text IS 'category/text (varchar)';
COMMENT ON COLUMN cds2db_in.diagnosticreport.diagrep_code_system IS 'code/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.diagnosticreport.diagrep_code_version IS 'code/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.diagnosticreport.diagrep_code_code IS 'code/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.diagnosticreport.diagrep_code_display IS 'code/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.diagnosticreport.diagrep_code_text IS 'code/text (varchar)';
COMMENT ON COLUMN cds2db_in.diagnosticreport.diagrep_effectivedatetime IS 'effectiveDateTime (timestamp)';
COMMENT ON COLUMN cds2db_in.diagnosticreport.diagrep_issued IS 'issued (timestamp)';
COMMENT ON COLUMN cds2db_in.diagnosticreport.diagrep_performer_ref IS 'performer/reference (varchar)';
COMMENT ON COLUMN cds2db_in.diagnosticreport.diagrep_performer_type IS 'performer/type (varchar)';
COMMENT ON COLUMN cds2db_in.diagnosticreport.diagrep_performer_identifier_use IS 'performer/identifier/use (varchar)';
COMMENT ON COLUMN cds2db_in.diagnosticreport.diagrep_performer_identifier_type_system IS 'performer/identifier/type/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.diagnosticreport.diagrep_performer_identifier_type_version IS 'performer/identifier/type/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.diagnosticreport.diagrep_performer_identifier_type_code IS 'performer/identifier/type/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.diagnosticreport.diagrep_performer_identifier_type_display IS 'performer/identifier/type/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.diagnosticreport.diagrep_performer_identifier_type_text IS 'performer/identifier/type/text (varchar)';
COMMENT ON COLUMN cds2db_in.diagnosticreport.diagrep_performer_identifier_system IS 'performer/identifier/system (varchar)';
COMMENT ON COLUMN cds2db_in.diagnosticreport.diagrep_performer_identifier_value IS 'performer/identifier/value (varchar)';
COMMENT ON COLUMN cds2db_in.diagnosticreport.diagrep_performer_display IS 'performer/display (varchar)';
COMMENT ON COLUMN cds2db_in.diagnosticreport.diagrep_conclusion IS 'conclusion (varchar)';
COMMENT ON COLUMN cds2db_in.diagnosticreport.diagrep_conclusioncode_system IS 'conclusionCode/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.diagnosticreport.diagrep_conclusioncode_version IS 'conclusionCode/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.diagnosticreport.diagrep_conclusioncode_code IS 'conclusionCode/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.diagnosticreport.diagrep_conclusioncode_display IS 'conclusionCode/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.diagnosticreport.diagrep_conclusioncode_text IS 'conclusionCode/text (varchar)';
COMMENT ON COLUMN cds2db_in.diagnosticreport.input_datetime IS 'Time at which the data record is inserted';
COMMENT ON COLUMN cds2db_in.diagnosticreport.last_check_datetime IS 'Time at which data record was last checked';
COMMENT ON COLUMN cds2db_in.diagnosticreport.current_dataset_status IS 'Processing status of the data record';
COMMENT ON COLUMN cds2db_in.diagnosticreport.input_processing_nr IS '(First) Processing number of the data record';
COMMENT ON COLUMN cds2db_in.diagnosticreport.last_processing_nr IS 'Last processing number of the data record';
COMMENT ON COLUMN cds2db_in.servicerequest.servicerequest_id IS 'Primary key of the entity';
COMMENT ON COLUMN cds2db_in.servicerequest.servicerequest_raw_id IS 'Primary key of the corresponding raw table';
COMMENT ON COLUMN cds2db_in.servicerequest.servreq_id IS 'id (varchar)';
COMMENT ON COLUMN cds2db_in.servicerequest.servreq_meta_versionid IS 'meta/versionId (varchar)';
COMMENT ON COLUMN cds2db_in.servicerequest.servreq_meta_lastupdated IS 'meta/lastUpdated (timestamp)';
COMMENT ON COLUMN cds2db_in.servicerequest.servreq_meta_profile IS 'meta/profile (varchar)';
COMMENT ON COLUMN cds2db_in.servicerequest.servreq_identifier_use IS 'identifier/use (varchar)';
COMMENT ON COLUMN cds2db_in.servicerequest.servreq_identifier_type_system IS 'identifier/type/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.servicerequest.servreq_identifier_type_version IS 'identifier/type/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.servicerequest.servreq_identifier_type_code IS 'identifier/type/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.servicerequest.servreq_identifier_type_display IS 'identifier/type/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.servicerequest.servreq_identifier_type_text IS 'identifier/type/text (varchar)';
COMMENT ON COLUMN cds2db_in.servicerequest.servreq_identifier_system IS 'identifier/system (varchar)';
COMMENT ON COLUMN cds2db_in.servicerequest.servreq_identifier_value IS 'identifier/value (varchar)';
COMMENT ON COLUMN cds2db_in.servicerequest.servreq_identifier_start IS 'identifier/start (timestamp)';
COMMENT ON COLUMN cds2db_in.servicerequest.servreq_identifier_end IS 'identifier/end (timestamp)';
COMMENT ON COLUMN cds2db_in.servicerequest.servreq_encounter_ref IS 'encounter/reference (varchar)';
COMMENT ON COLUMN cds2db_in.servicerequest.servreq_patient_ref IS 'subject/reference (varchar)';
COMMENT ON COLUMN cds2db_in.servicerequest.servreq_basedon_ref IS 'basedOn/reference (varchar)';
COMMENT ON COLUMN cds2db_in.servicerequest.servreq_basedon_type IS 'basedOn/type (varchar)';
COMMENT ON COLUMN cds2db_in.servicerequest.servreq_basedon_identifier_use IS 'basedOn/identifier/use (varchar)';
COMMENT ON COLUMN cds2db_in.servicerequest.servreq_basedon_identifier_type_system IS 'basedOn/identifier/type/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.servicerequest.servreq_basedon_identifier_type_version IS 'basedOn/identifier/type/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.servicerequest.servreq_basedon_identifier_type_code IS 'basedOn/identifier/type/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.servicerequest.servreq_basedon_identifier_type_display IS 'basedOn/identifier/type/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.servicerequest.servreq_basedon_identifier_type_text IS 'basedOn/identifier/type/text (varchar)';
COMMENT ON COLUMN cds2db_in.servicerequest.servreq_basedon_identifier_system IS 'basedOn/identifier/system (varchar)';
COMMENT ON COLUMN cds2db_in.servicerequest.servreq_basedon_identifier_value IS 'basedOn/identifier/value (varchar)';
COMMENT ON COLUMN cds2db_in.servicerequest.servreq_basedon_display IS 'basedOn/display (varchar)';
COMMENT ON COLUMN cds2db_in.servicerequest.servreq_status IS 'status (varchar)';
COMMENT ON COLUMN cds2db_in.servicerequest.servreq_intent IS 'intent (varchar)';
COMMENT ON COLUMN cds2db_in.servicerequest.servreq_category_system IS 'category/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.servicerequest.servreq_category_version IS 'category/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.servicerequest.servreq_category_code IS 'category/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.servicerequest.servreq_category_display IS 'category/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.servicerequest.servreq_category_text IS 'category/text (varchar)';
COMMENT ON COLUMN cds2db_in.servicerequest.servreq_code_system IS 'code/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.servicerequest.servreq_code_version IS 'code/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.servicerequest.servreq_code_code IS 'code/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.servicerequest.servreq_code_display IS 'code/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.servicerequest.servreq_code_text IS 'code/text (varchar)';
COMMENT ON COLUMN cds2db_in.servicerequest.servreq_authoredon IS 'authoredOn (timestamp)';
COMMENT ON COLUMN cds2db_in.servicerequest.servreq_requester_ref IS 'requester/reference (varchar)';
COMMENT ON COLUMN cds2db_in.servicerequest.servreq_requester_type IS 'requester/type (varchar)';
COMMENT ON COLUMN cds2db_in.servicerequest.servreq_requester_identifier_use IS 'requester/identifier/use (varchar)';
COMMENT ON COLUMN cds2db_in.servicerequest.servreq_requester_identifier_type_system IS 'requester/identifier/type/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.servicerequest.servreq_requester_identifier_type_version IS 'requester/identifier/type/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.servicerequest.servreq_requester_identifier_type_code IS 'requester/identifier/type/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.servicerequest.servreq_requester_identifier_type_display IS 'requester/identifier/type/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.servicerequest.servreq_requester_identifier_type_text IS 'requester/identifier/type/text (varchar)';
COMMENT ON COLUMN cds2db_in.servicerequest.servreq_requester_identifier_system IS 'requester/identifier/system (varchar)';
COMMENT ON COLUMN cds2db_in.servicerequest.servreq_requester_identifier_value IS 'requester/identifier/value (varchar)';
COMMENT ON COLUMN cds2db_in.servicerequest.servreq_requester_display IS 'requester/display (varchar)';
COMMENT ON COLUMN cds2db_in.servicerequest.servreq_performer_ref IS 'performer/reference (varchar)';
COMMENT ON COLUMN cds2db_in.servicerequest.servreq_performer_type IS 'performer/type (varchar)';
COMMENT ON COLUMN cds2db_in.servicerequest.servreq_performer_identifier_use IS 'performer/identifier/use (varchar)';
COMMENT ON COLUMN cds2db_in.servicerequest.servreq_performer_identifier_type_system IS 'performer/identifier/type/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.servicerequest.servreq_performer_identifier_type_version IS 'performer/identifier/type/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.servicerequest.servreq_performer_identifier_type_code IS 'performer/identifier/type/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.servicerequest.servreq_performer_identifier_type_display IS 'performer/identifier/type/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.servicerequest.servreq_performer_identifier_type_text IS 'performer/identifier/type/text (varchar)';
COMMENT ON COLUMN cds2db_in.servicerequest.servreq_performer_identifier_system IS 'performer/identifier/system (varchar)';
COMMENT ON COLUMN cds2db_in.servicerequest.servreq_performer_identifier_value IS 'performer/identifier/value (varchar)';
COMMENT ON COLUMN cds2db_in.servicerequest.servreq_performer_display IS 'performer/display (varchar)';
COMMENT ON COLUMN cds2db_in.servicerequest.servreq_locationcode_system IS 'locationCode/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.servicerequest.servreq_locationcode_version IS 'locationCode/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.servicerequest.servreq_locationcode_code IS 'locationCode/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.servicerequest.servreq_locationcode_display IS 'locationCode/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.servicerequest.servreq_locationcode_text IS 'locationCode/text (varchar)';
COMMENT ON COLUMN cds2db_in.servicerequest.input_datetime IS 'Time at which the data record is inserted';
COMMENT ON COLUMN cds2db_in.servicerequest.last_check_datetime IS 'Time at which data record was last checked';
COMMENT ON COLUMN cds2db_in.servicerequest.current_dataset_status IS 'Processing status of the data record';
COMMENT ON COLUMN cds2db_in.servicerequest.input_processing_nr IS '(First) Processing number of the data record';
COMMENT ON COLUMN cds2db_in.servicerequest.last_processing_nr IS 'Last processing number of the data record';
COMMENT ON COLUMN cds2db_in.procedure.procedure_id IS 'Primary key of the entity';
COMMENT ON COLUMN cds2db_in.procedure.procedure_raw_id IS 'Primary key of the corresponding raw table';
COMMENT ON COLUMN cds2db_in.procedure.proc_id IS 'id (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_meta_versionid IS 'meta/versionId (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_meta_lastupdated IS 'meta/lastUpdated (timestamp)';
COMMENT ON COLUMN cds2db_in.procedure.proc_meta_profile IS 'meta/profile (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_identifier_use IS 'identifier/use (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_identifier_type_system IS 'identifier/type/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_identifier_type_version IS 'identifier/type/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_identifier_type_code IS 'identifier/type/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_identifier_type_display IS 'identifier/type/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_identifier_type_text IS 'identifier/type/text (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_identifier_system IS 'identifier/system (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_identifier_value IS 'identifier/value (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_identifier_start IS 'identifier/start (timestamp)';
COMMENT ON COLUMN cds2db_in.procedure.proc_identifier_end IS 'identifier/end (timestamp)';
COMMENT ON COLUMN cds2db_in.procedure.proc_encounter_ref IS 'encounter/reference (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_patient_ref IS 'subject/reference (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_partof_ref IS 'partOf/reference (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_basedon_ref IS 'basedOn/reference (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_basedon_type IS 'basedOn/type (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_basedon_identifier_use IS 'basedOn/identifier/use (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_basedon_identifier_type_system IS 'basedOn/identifier/type/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_basedon_identifier_type_version IS 'basedOn/identifier/type/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_basedon_identifier_type_code IS 'basedOn/identifier/type/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_basedon_identifier_type_display IS 'basedOn/identifier/type/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_basedon_identifier_type_text IS 'basedOn/identifier/type/text (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_basedon_identifier_system IS 'basedOn/identifier/system (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_basedon_identifier_value IS 'basedOn/identifier/value (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_basedon_display IS 'basedOn/display (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_status IS 'status (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_statusreason_system IS 'statusReason/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_statusreason_version IS 'statusReason/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_statusreason_code IS 'statusReason/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_statusreason_display IS 'statusReason/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_statusreason_text IS 'statusReason/text (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_category_system IS 'category/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_category_version IS 'category/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_category_code IS 'category/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_category_display IS 'category/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_category_text IS 'category/text (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_code_system IS 'code/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_code_version IS 'code/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_code_code IS 'code/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_code_display IS 'code/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_code_text IS 'code/text (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_performeddatetime IS 'performedDateTime (timestamp)';
COMMENT ON COLUMN cds2db_in.procedure.proc_performedperiod_start IS 'performedPeriod/start (timestamp)';
COMMENT ON COLUMN cds2db_in.procedure.proc_performedperiod_end IS 'performedPeriod/end (timestamp)';
COMMENT ON COLUMN cds2db_in.procedure.proc_reasoncode_system IS 'reasonCode/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_reasoncode_version IS 'reasonCode/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_reasoncode_code IS 'reasonCode/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_reasoncode_display IS 'reasonCode/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_reasoncode_text IS 'reasonCode/text (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_reasonreference_ref IS 'reasonReference/reference (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_reasonreference_type IS 'reasonReference/type (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_reasonreference_identifier_use IS 'reasonReference/identifier/use (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_reasonreference_identifier_type_system IS 'reasonReference/identifier/type/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_reasonreference_identifier_type_version IS 'reasonReference/identifier/type/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_reasonreference_identifier_type_code IS 'reasonReference/identifier/type/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_reasonreference_identifier_type_display IS 'reasonReference/identifier/type/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_reasonreference_identifier_type_text IS 'reasonReference/identifier/type/text (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_reasonreference_identifier_system IS 'reasonReference/identifier/system (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_reasonreference_identifier_value IS 'reasonReference/identifier/value (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_reasonreference_display IS 'reasonReference/display (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_note_authorstring IS 'note/authorString (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_note_authorreference_ref IS 'note/authorReference/reference (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_note_authorreference_type IS 'note/authorReference/type (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_note_authorreference_identifier_use IS 'note/authorReference/identifier/use (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_note_authorreference_identifier_type_system IS 'note/authorReference/identifier/type/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_note_authorreference_identifier_type_version IS 'note/authorReference/identifier/type/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_note_authorreference_identifier_type_code IS 'note/authorReference/identifier/type/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_note_authorreference_identifier_type_display IS 'note/authorReference/identifier/type/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_note_authorreference_identifier_type_text IS 'note/authorReference/identifier/type/text (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_note_authorreference_identifier_system IS 'note/authorReference/identifier/system (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_note_authorreference_identifier_value IS 'note/authorReference/identifier/value (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_note_authorreference_display IS 'note/authorReference/display (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.proc_note_time IS 'note/time (timestamp)';
COMMENT ON COLUMN cds2db_in.procedure.proc_note_text IS 'note/text (varchar)';
COMMENT ON COLUMN cds2db_in.procedure.input_datetime IS 'Time at which the data record is inserted';
COMMENT ON COLUMN cds2db_in.procedure.last_check_datetime IS 'Time at which data record was last checked';
COMMENT ON COLUMN cds2db_in.procedure.current_dataset_status IS 'Processing status of the data record';
COMMENT ON COLUMN cds2db_in.procedure.input_processing_nr IS '(First) Processing number of the data record';
COMMENT ON COLUMN cds2db_in.procedure.last_processing_nr IS 'Last processing number of the data record';
COMMENT ON COLUMN cds2db_in.consent.consent_id IS 'Primary key of the entity';
COMMENT ON COLUMN cds2db_in.consent.consent_raw_id IS 'Primary key of the corresponding raw table';
COMMENT ON COLUMN cds2db_in.consent.cons_id IS 'id (varchar)';
COMMENT ON COLUMN cds2db_in.consent.cons_meta_versionid IS 'meta/versionId (varchar)';
COMMENT ON COLUMN cds2db_in.consent.cons_meta_lastupdated IS 'meta/lastUpdated (timestamp)';
COMMENT ON COLUMN cds2db_in.consent.cons_meta_profile IS 'meta/profile (varchar)';
COMMENT ON COLUMN cds2db_in.consent.cons_identifier_use IS 'identifier/use (varchar)';
COMMENT ON COLUMN cds2db_in.consent.cons_identifier_type_system IS 'identifier/type/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.consent.cons_identifier_type_version IS 'identifier/type/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.consent.cons_identifier_type_code IS 'identifier/type/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.consent.cons_identifier_type_display IS 'identifier/type/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.consent.cons_identifier_type_text IS 'identifier/type/text (varchar)';
COMMENT ON COLUMN cds2db_in.consent.cons_identifier_system IS 'identifier/system (varchar)';
COMMENT ON COLUMN cds2db_in.consent.cons_identifier_value IS 'identifier/value (varchar)';
COMMENT ON COLUMN cds2db_in.consent.cons_identifier_start IS 'identifier/start (timestamp)';
COMMENT ON COLUMN cds2db_in.consent.cons_identifier_end IS 'identifier/end (timestamp)';
COMMENT ON COLUMN cds2db_in.consent.cons_patient_ref IS 'patient/reference (varchar)';
COMMENT ON COLUMN cds2db_in.consent.cons_status IS 'status (varchar)';
COMMENT ON COLUMN cds2db_in.consent.cons_scope_system IS 'scope/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.consent.cons_scope_version IS 'scope/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.consent.cons_scope_code IS 'scope/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.consent.cons_scope_display IS 'scope/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.consent.cons_scope_text IS 'scope/text (varchar)';
COMMENT ON COLUMN cds2db_in.consent.cons_datetime IS 'dateTime (timestamp)';
COMMENT ON COLUMN cds2db_in.consent.cons_provision_type IS 'provision/type (varchar)';
COMMENT ON COLUMN cds2db_in.consent.cons_provision_period_start IS 'provision/period/start (timestamp)';
COMMENT ON COLUMN cds2db_in.consent.cons_provision_period_end IS 'provision/period/end (timestamp)';
COMMENT ON COLUMN cds2db_in.consent.cons_provision_actor_role_system IS 'provision/actor/role/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.consent.cons_provision_actor_role_version IS 'provision/actor/role/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.consent.cons_provision_actor_role_code IS 'provision/actor/role/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.consent.cons_provision_actor_role_display IS 'provision/actor/role/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.consent.cons_provision_actor_role_text IS 'provision/actor/role/text (varchar)';
COMMENT ON COLUMN cds2db_in.consent.cons_provision_code_system IS 'provision/code/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.consent.cons_provision_code_version IS 'provision/code/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.consent.cons_provision_code_code IS 'provision/code/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.consent.cons_provision_code_display IS 'provision/code/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.consent.cons_provision_code_text IS 'provision/code/text (varchar)';
COMMENT ON COLUMN cds2db_in.consent.cons_provision_dataperiod_start IS 'provision/dataPeriod/start (timestamp)';
COMMENT ON COLUMN cds2db_in.consent.cons_provision_dataperiod_end IS 'provision/dataPeriod/end (timestamp)';
COMMENT ON COLUMN cds2db_in.consent.input_datetime IS 'Time at which the data record is inserted';
COMMENT ON COLUMN cds2db_in.consent.last_check_datetime IS 'Time at which data record was last checked';
COMMENT ON COLUMN cds2db_in.consent.current_dataset_status IS 'Processing status of the data record';
COMMENT ON COLUMN cds2db_in.consent.input_processing_nr IS '(First) Processing number of the data record';
COMMENT ON COLUMN cds2db_in.consent.last_processing_nr IS 'Last processing number of the data record';
COMMENT ON COLUMN cds2db_in.location.location_id IS 'Primary key of the entity';
COMMENT ON COLUMN cds2db_in.location.location_raw_id IS 'Primary key of the corresponding raw table';
COMMENT ON COLUMN cds2db_in.location.loc_id IS 'id (varchar)';
COMMENT ON COLUMN cds2db_in.location.loc_meta_versionid IS 'meta/versionId (varchar)';
COMMENT ON COLUMN cds2db_in.location.loc_meta_lastupdated IS 'meta/lastUpdated (timestamp)';
COMMENT ON COLUMN cds2db_in.location.loc_meta_profile IS 'meta/profile (varchar)';
COMMENT ON COLUMN cds2db_in.location.loc_identifier_use IS 'identifier/use (varchar)';
COMMENT ON COLUMN cds2db_in.location.loc_identifier_type_system IS 'identifier/type/coding/system (varchar)';
COMMENT ON COLUMN cds2db_in.location.loc_identifier_type_version IS 'identifier/type/coding/version (varchar)';
COMMENT ON COLUMN cds2db_in.location.loc_identifier_type_code IS 'identifier/type/coding/code (varchar)';
COMMENT ON COLUMN cds2db_in.location.loc_identifier_type_display IS 'identifier/type/coding/display (varchar)';
COMMENT ON COLUMN cds2db_in.location.loc_identifier_type_text IS 'identifier/type/text (varchar)';
COMMENT ON COLUMN cds2db_in.location.loc_identifier_system IS 'identifier/system (varchar)';
COMMENT ON COLUMN cds2db_in.location.loc_identifier_value IS 'identifier/value (varchar)';
COMMENT ON COLUMN cds2db_in.location.loc_identifier_start IS 'identifier/start (timestamp)';
COMMENT ON COLUMN cds2db_in.location.loc_identifier_end IS 'identifier/end (timestamp)';
COMMENT ON COLUMN cds2db_in.location.loc_status IS 'status (varchar)';
COMMENT ON COLUMN cds2db_in.location.loc_name IS 'name (varchar)';
COMMENT ON COLUMN cds2db_in.location.loc_description IS 'description (varchar)';
COMMENT ON COLUMN cds2db_in.location.loc_alias IS 'alias (varchar)';
COMMENT ON COLUMN cds2db_in.location.input_datetime IS 'Time at which the data record is inserted';
COMMENT ON COLUMN cds2db_in.location.last_check_datetime IS 'Time at which data record was last checked';
COMMENT ON COLUMN cds2db_in.location.current_dataset_status IS 'Processing status of the data record';
COMMENT ON COLUMN cds2db_in.location.input_processing_nr IS '(First) Processing number of the data record';
COMMENT ON COLUMN cds2db_in.location.last_processing_nr IS 'Last processing number of the data record';
COMMENT ON COLUMN cds2db_in.pids_per_ward.pids_per_ward_id IS 'Primary key of the entity';
COMMENT ON COLUMN cds2db_in.pids_per_ward.pids_per_ward_raw_id IS 'Primary key of the corresponding raw table';
COMMENT ON COLUMN cds2db_in.pids_per_ward.ward_name IS 'ward_name (varchar)';
COMMENT ON COLUMN cds2db_in.pids_per_ward.patient_id IS 'patient_id (varchar)';
COMMENT ON COLUMN cds2db_in.pids_per_ward.encounter_id IS 'encounter_id (varchar)';
COMMENT ON COLUMN cds2db_in.pids_per_ward.input_datetime IS 'Time at which the data record is inserted';
COMMENT ON COLUMN cds2db_in.pids_per_ward.last_check_datetime IS 'Time at which data record was last checked';
COMMENT ON COLUMN cds2db_in.pids_per_ward.current_dataset_status IS 'Processing status of the data record';
COMMENT ON COLUMN cds2db_in.pids_per_ward.input_processing_nr IS '(First) Processing number of the data record';
COMMENT ON COLUMN cds2db_in.pids_per_ward.last_processing_nr IS 'Last processing number of the data record';

-- Output on
\o

------------------------------------------------------
-- INDEX for IDs on Tables in Schema "cds2db_in" --
------------------------------------------------------

------------------------- Index for cds2db_in - encounter ---------------------------------
  CREATE INDEX IF NOT EXISTS idx_encounter_raw_id ON cds2db_in.encounter ( encounter_raw_id DESC); -- Primary key of the corresponding raw table

-- Index idx_cds2db_in_encounter_input_dt for Table "encounter" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_encounter_input_dt
ON cds2db_in.encounter (
   input_datetime DESC -- Time at which the data record is inserted
);

-- Index idx_cds2db_in_encounter_input_pnr for Table "encounter" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_encounter_input_pnr
ON cds2db_in.encounter (
   input_processing_nr DESC -- (First) Processing number of the data record
);

-- Index idx_cds2db_in_encounter_last_dt for Table "encounter" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_encounter_last_dt
ON cds2db_in.encounter (
   last_check_datetime DESC -- Time at which data record was last checked
);

-- Index idx_cds2db_in_encounter_last_dt for Table "encounter" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_encounter_last_pnr
ON cds2db_in.encounter (
   last_processing_nr DESC -- Last processing number of the data record
);

-- Index idx_cds2db_in_encounter_hash for Table "encounter" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_encounter_hash
ON cds2db_in.encounter (
   hash_index_col -- Column for automatic hash value for comparing FHIR data
);

CREATE INDEX IF NOT EXISTS idx_encounter_enc_id ON cds2db_in.encounter ( enc_id );
CREATE INDEX IF NOT EXISTS idx_encounter_enc_meta_versionid ON cds2db_in.encounter ( enc_meta_versionid );
CREATE INDEX IF NOT EXISTS idx_encounter_enc_meta_lastupdated ON cds2db_in.encounter ( enc_meta_lastupdated );
CREATE INDEX IF NOT EXISTS idx_encounter_enc_meta_profile ON cds2db_in.encounter ( enc_meta_profile );
------------------------- Index for cds2db_in - patient ---------------------------------
  CREATE INDEX IF NOT EXISTS idx_patient_raw_id ON cds2db_in.patient ( patient_raw_id DESC); -- Primary key of the corresponding raw table

-- Index idx_cds2db_in_patient_input_dt for Table "patient" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_patient_input_dt
ON cds2db_in.patient (
   input_datetime DESC -- Time at which the data record is inserted
);

-- Index idx_cds2db_in_patient_input_pnr for Table "patient" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_patient_input_pnr
ON cds2db_in.patient (
   input_processing_nr DESC -- (First) Processing number of the data record
);

-- Index idx_cds2db_in_patient_last_dt for Table "patient" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_patient_last_dt
ON cds2db_in.patient (
   last_check_datetime DESC -- Time at which data record was last checked
);

-- Index idx_cds2db_in_patient_last_dt for Table "patient" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_patient_last_pnr
ON cds2db_in.patient (
   last_processing_nr DESC -- Last processing number of the data record
);

-- Index idx_cds2db_in_patient_hash for Table "patient" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_patient_hash
ON cds2db_in.patient (
   hash_index_col -- Column for automatic hash value for comparing FHIR data
);

CREATE INDEX IF NOT EXISTS idx_patient_pat_id ON cds2db_in.patient ( pat_id );
CREATE INDEX IF NOT EXISTS idx_patient_pat_meta_versionid ON cds2db_in.patient ( pat_meta_versionid );
CREATE INDEX IF NOT EXISTS idx_patient_pat_meta_lastupdated ON cds2db_in.patient ( pat_meta_lastupdated );
CREATE INDEX IF NOT EXISTS idx_patient_pat_meta_profile ON cds2db_in.patient ( pat_meta_profile );
------------------------- Index for cds2db_in - condition ---------------------------------
  CREATE INDEX IF NOT EXISTS idx_condition_raw_id ON cds2db_in.condition ( condition_raw_id DESC); -- Primary key of the corresponding raw table

-- Index idx_cds2db_in_condition_input_dt for Table "condition" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_condition_input_dt
ON cds2db_in.condition (
   input_datetime DESC -- Time at which the data record is inserted
);

-- Index idx_cds2db_in_condition_input_pnr for Table "condition" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_condition_input_pnr
ON cds2db_in.condition (
   input_processing_nr DESC -- (First) Processing number of the data record
);

-- Index idx_cds2db_in_condition_last_dt for Table "condition" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_condition_last_dt
ON cds2db_in.condition (
   last_check_datetime DESC -- Time at which data record was last checked
);

-- Index idx_cds2db_in_condition_last_dt for Table "condition" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_condition_last_pnr
ON cds2db_in.condition (
   last_processing_nr DESC -- Last processing number of the data record
);

-- Index idx_cds2db_in_condition_hash for Table "condition" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_condition_hash
ON cds2db_in.condition (
   hash_index_col -- Column for automatic hash value for comparing FHIR data
);

CREATE INDEX IF NOT EXISTS idx_condition_con_id ON cds2db_in.condition ( con_id );
CREATE INDEX IF NOT EXISTS idx_condition_con_meta_versionid ON cds2db_in.condition ( con_meta_versionid );
CREATE INDEX IF NOT EXISTS idx_condition_con_meta_lastupdated ON cds2db_in.condition ( con_meta_lastupdated );
CREATE INDEX IF NOT EXISTS idx_condition_con_meta_profile ON cds2db_in.condition ( con_meta_profile );
------------------------- Index for cds2db_in - medication ---------------------------------
  CREATE INDEX IF NOT EXISTS idx_medication_raw_id ON cds2db_in.medication ( medication_raw_id DESC); -- Primary key of the corresponding raw table

-- Index idx_cds2db_in_medication_input_dt for Table "medication" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_medication_input_dt
ON cds2db_in.medication (
   input_datetime DESC -- Time at which the data record is inserted
);

-- Index idx_cds2db_in_medication_input_pnr for Table "medication" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_medication_input_pnr
ON cds2db_in.medication (
   input_processing_nr DESC -- (First) Processing number of the data record
);

-- Index idx_cds2db_in_medication_last_dt for Table "medication" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_medication_last_dt
ON cds2db_in.medication (
   last_check_datetime DESC -- Time at which data record was last checked
);

-- Index idx_cds2db_in_medication_last_dt for Table "medication" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_medication_last_pnr
ON cds2db_in.medication (
   last_processing_nr DESC -- Last processing number of the data record
);

-- Index idx_cds2db_in_medication_hash for Table "medication" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_medication_hash
ON cds2db_in.medication (
   hash_index_col -- Column for automatic hash value for comparing FHIR data
);

CREATE INDEX IF NOT EXISTS idx_medication_med_id ON cds2db_in.medication ( med_id );
CREATE INDEX IF NOT EXISTS idx_medication_med_meta_versionid ON cds2db_in.medication ( med_meta_versionid );
CREATE INDEX IF NOT EXISTS idx_medication_med_meta_lastupdated ON cds2db_in.medication ( med_meta_lastupdated );
CREATE INDEX IF NOT EXISTS idx_medication_med_meta_profile ON cds2db_in.medication ( med_meta_profile );
------------------------- Index for cds2db_in - medicationrequest ---------------------------------
  CREATE INDEX IF NOT EXISTS idx_medicationrequest_raw_id ON cds2db_in.medicationrequest ( medicationrequest_raw_id DESC); -- Primary key of the corresponding raw table

-- Index idx_cds2db_in_medicationrequest_input_dt for Table "medicationrequest" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_medicationrequest_input_dt
ON cds2db_in.medicationrequest (
   input_datetime DESC -- Time at which the data record is inserted
);

-- Index idx_cds2db_in_medicationrequest_input_pnr for Table "medicationrequest" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_medicationrequest_input_pnr
ON cds2db_in.medicationrequest (
   input_processing_nr DESC -- (First) Processing number of the data record
);

-- Index idx_cds2db_in_medicationrequest_last_dt for Table "medicationrequest" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_medicationrequest_last_dt
ON cds2db_in.medicationrequest (
   last_check_datetime DESC -- Time at which data record was last checked
);

-- Index idx_cds2db_in_medicationrequest_last_dt for Table "medicationrequest" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_medicationrequest_last_pnr
ON cds2db_in.medicationrequest (
   last_processing_nr DESC -- Last processing number of the data record
);

-- Index idx_cds2db_in_medicationrequest_hash for Table "medicationrequest" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_medicationrequest_hash
ON cds2db_in.medicationrequest (
   hash_index_col -- Column for automatic hash value for comparing FHIR data
);

CREATE INDEX IF NOT EXISTS idx_medicationrequest_medreq_id ON cds2db_in.medicationrequest ( medreq_id );
CREATE INDEX IF NOT EXISTS idx_medicationrequest_medreq_meta_versionid ON cds2db_in.medicationrequest ( medreq_meta_versionid );
CREATE INDEX IF NOT EXISTS idx_medicationrequest_medreq_meta_lastupdated ON cds2db_in.medicationrequest ( medreq_meta_lastupdated );
CREATE INDEX IF NOT EXISTS idx_medicationrequest_medreq_meta_profile ON cds2db_in.medicationrequest ( medreq_meta_profile );
------------------------- Index for cds2db_in - medicationadministration ---------------------------------
  CREATE INDEX IF NOT EXISTS idx_medicationadministration_raw_id ON cds2db_in.medicationadministration ( medicationadministration_raw_id DESC); -- Primary key of the corresponding raw table

-- Index idx_cds2db_in_medicationadministration_input_dt for Table "medicationadministration" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_medicationadministration_input_dt
ON cds2db_in.medicationadministration (
   input_datetime DESC -- Time at which the data record is inserted
);

-- Index idx_cds2db_in_medicationadministration_input_pnr for Table "medicationadministration" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_medicationadministration_input_pnr
ON cds2db_in.medicationadministration (
   input_processing_nr DESC -- (First) Processing number of the data record
);

-- Index idx_cds2db_in_medicationadministration_last_dt for Table "medicationadministration" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_medicationadministration_last_dt
ON cds2db_in.medicationadministration (
   last_check_datetime DESC -- Time at which data record was last checked
);

-- Index idx_cds2db_in_medicationadministration_last_dt for Table "medicationadministration" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_medicationadministration_last_pnr
ON cds2db_in.medicationadministration (
   last_processing_nr DESC -- Last processing number of the data record
);

-- Index idx_cds2db_in_medicationadministration_hash for Table "medicationadministration" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_medicationadministration_hash
ON cds2db_in.medicationadministration (
   hash_index_col -- Column for automatic hash value for comparing FHIR data
);

CREATE INDEX IF NOT EXISTS idx_medicationadministration_medadm_id ON cds2db_in.medicationadministration ( medadm_id );
CREATE INDEX IF NOT EXISTS idx_medicationadministration_medadm_meta_versionid ON cds2db_in.medicationadministration ( medadm_meta_versionid );
CREATE INDEX IF NOT EXISTS idx_medicationadministration_medadm_meta_lastupdated ON cds2db_in.medicationadministration ( medadm_meta_lastupdated );
CREATE INDEX IF NOT EXISTS idx_medicationadministration_medadm_meta_profile ON cds2db_in.medicationadministration ( medadm_meta_profile );
------------------------- Index for cds2db_in - medicationstatement ---------------------------------
  CREATE INDEX IF NOT EXISTS idx_medicationstatement_raw_id ON cds2db_in.medicationstatement ( medicationstatement_raw_id DESC); -- Primary key of the corresponding raw table

-- Index idx_cds2db_in_medicationstatement_input_dt for Table "medicationstatement" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_medicationstatement_input_dt
ON cds2db_in.medicationstatement (
   input_datetime DESC -- Time at which the data record is inserted
);

-- Index idx_cds2db_in_medicationstatement_input_pnr for Table "medicationstatement" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_medicationstatement_input_pnr
ON cds2db_in.medicationstatement (
   input_processing_nr DESC -- (First) Processing number of the data record
);

-- Index idx_cds2db_in_medicationstatement_last_dt for Table "medicationstatement" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_medicationstatement_last_dt
ON cds2db_in.medicationstatement (
   last_check_datetime DESC -- Time at which data record was last checked
);

-- Index idx_cds2db_in_medicationstatement_last_dt for Table "medicationstatement" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_medicationstatement_last_pnr
ON cds2db_in.medicationstatement (
   last_processing_nr DESC -- Last processing number of the data record
);

-- Index idx_cds2db_in_medicationstatement_hash for Table "medicationstatement" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_medicationstatement_hash
ON cds2db_in.medicationstatement (
   hash_index_col -- Column for automatic hash value for comparing FHIR data
);

CREATE INDEX IF NOT EXISTS idx_medicationstatement_medstat_id ON cds2db_in.medicationstatement ( medstat_id );
CREATE INDEX IF NOT EXISTS idx_medicationstatement_medstat_meta_versionid ON cds2db_in.medicationstatement ( medstat_meta_versionid );
CREATE INDEX IF NOT EXISTS idx_medicationstatement_medstat_meta_lastupdated ON cds2db_in.medicationstatement ( medstat_meta_lastupdated );
CREATE INDEX IF NOT EXISTS idx_medicationstatement_medstat_meta_profile ON cds2db_in.medicationstatement ( medstat_meta_profile );
------------------------- Index for cds2db_in - observation ---------------------------------
  CREATE INDEX IF NOT EXISTS idx_observation_raw_id ON cds2db_in.observation ( observation_raw_id DESC); -- Primary key of the corresponding raw table

-- Index idx_cds2db_in_observation_input_dt for Table "observation" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_observation_input_dt
ON cds2db_in.observation (
   input_datetime DESC -- Time at which the data record is inserted
);

-- Index idx_cds2db_in_observation_input_pnr for Table "observation" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_observation_input_pnr
ON cds2db_in.observation (
   input_processing_nr DESC -- (First) Processing number of the data record
);

-- Index idx_cds2db_in_observation_last_dt for Table "observation" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_observation_last_dt
ON cds2db_in.observation (
   last_check_datetime DESC -- Time at which data record was last checked
);

-- Index idx_cds2db_in_observation_last_dt for Table "observation" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_observation_last_pnr
ON cds2db_in.observation (
   last_processing_nr DESC -- Last processing number of the data record
);

-- Index idx_cds2db_in_observation_hash for Table "observation" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_observation_hash
ON cds2db_in.observation (
   hash_index_col -- Column for automatic hash value for comparing FHIR data
);

CREATE INDEX IF NOT EXISTS idx_observation_obs_id ON cds2db_in.observation ( obs_id );
CREATE INDEX IF NOT EXISTS idx_observation_obs_meta_versionid ON cds2db_in.observation ( obs_meta_versionid );
CREATE INDEX IF NOT EXISTS idx_observation_obs_meta_lastupdated ON cds2db_in.observation ( obs_meta_lastupdated );
CREATE INDEX IF NOT EXISTS idx_observation_obs_meta_profile ON cds2db_in.observation ( obs_meta_profile );
------------------------- Index for cds2db_in - diagnosticreport ---------------------------------
  CREATE INDEX IF NOT EXISTS idx_diagnosticreport_raw_id ON cds2db_in.diagnosticreport ( diagnosticreport_raw_id DESC); -- Primary key of the corresponding raw table

-- Index idx_cds2db_in_diagnosticreport_input_dt for Table "diagnosticreport" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_diagnosticreport_input_dt
ON cds2db_in.diagnosticreport (
   input_datetime DESC -- Time at which the data record is inserted
);

-- Index idx_cds2db_in_diagnosticreport_input_pnr for Table "diagnosticreport" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_diagnosticreport_input_pnr
ON cds2db_in.diagnosticreport (
   input_processing_nr DESC -- (First) Processing number of the data record
);

-- Index idx_cds2db_in_diagnosticreport_last_dt for Table "diagnosticreport" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_diagnosticreport_last_dt
ON cds2db_in.diagnosticreport (
   last_check_datetime DESC -- Time at which data record was last checked
);

-- Index idx_cds2db_in_diagnosticreport_last_dt for Table "diagnosticreport" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_diagnosticreport_last_pnr
ON cds2db_in.diagnosticreport (
   last_processing_nr DESC -- Last processing number of the data record
);

-- Index idx_cds2db_in_diagnosticreport_hash for Table "diagnosticreport" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_diagnosticreport_hash
ON cds2db_in.diagnosticreport (
   hash_index_col -- Column for automatic hash value for comparing FHIR data
);

CREATE INDEX IF NOT EXISTS idx_diagnosticreport_diagrep_id ON cds2db_in.diagnosticreport ( diagrep_id );
CREATE INDEX IF NOT EXISTS idx_diagnosticreport_diagrep_meta_versionid ON cds2db_in.diagnosticreport ( diagrep_meta_versionid );
CREATE INDEX IF NOT EXISTS idx_diagnosticreport_diagrep_meta_lastupdated ON cds2db_in.diagnosticreport ( diagrep_meta_lastupdated );
CREATE INDEX IF NOT EXISTS idx_diagnosticreport_diagrep_meta_profile ON cds2db_in.diagnosticreport ( diagrep_meta_profile );
------------------------- Index for cds2db_in - servicerequest ---------------------------------
  CREATE INDEX IF NOT EXISTS idx_servicerequest_raw_id ON cds2db_in.servicerequest ( servicerequest_raw_id DESC); -- Primary key of the corresponding raw table

-- Index idx_cds2db_in_servicerequest_input_dt for Table "servicerequest" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_servicerequest_input_dt
ON cds2db_in.servicerequest (
   input_datetime DESC -- Time at which the data record is inserted
);

-- Index idx_cds2db_in_servicerequest_input_pnr for Table "servicerequest" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_servicerequest_input_pnr
ON cds2db_in.servicerequest (
   input_processing_nr DESC -- (First) Processing number of the data record
);

-- Index idx_cds2db_in_servicerequest_last_dt for Table "servicerequest" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_servicerequest_last_dt
ON cds2db_in.servicerequest (
   last_check_datetime DESC -- Time at which data record was last checked
);

-- Index idx_cds2db_in_servicerequest_last_dt for Table "servicerequest" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_servicerequest_last_pnr
ON cds2db_in.servicerequest (
   last_processing_nr DESC -- Last processing number of the data record
);

-- Index idx_cds2db_in_servicerequest_hash for Table "servicerequest" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_servicerequest_hash
ON cds2db_in.servicerequest (
   hash_index_col -- Column for automatic hash value for comparing FHIR data
);

CREATE INDEX IF NOT EXISTS idx_servicerequest_servreq_id ON cds2db_in.servicerequest ( servreq_id );
CREATE INDEX IF NOT EXISTS idx_servicerequest_servreq_meta_versionid ON cds2db_in.servicerequest ( servreq_meta_versionid );
CREATE INDEX IF NOT EXISTS idx_servicerequest_servreq_meta_lastupdated ON cds2db_in.servicerequest ( servreq_meta_lastupdated );
CREATE INDEX IF NOT EXISTS idx_servicerequest_servreq_meta_profile ON cds2db_in.servicerequest ( servreq_meta_profile );
------------------------- Index for cds2db_in - procedure ---------------------------------
  CREATE INDEX IF NOT EXISTS idx_procedure_raw_id ON cds2db_in.procedure ( procedure_raw_id DESC); -- Primary key of the corresponding raw table

-- Index idx_cds2db_in_procedure_input_dt for Table "procedure" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_procedure_input_dt
ON cds2db_in.procedure (
   input_datetime DESC -- Time at which the data record is inserted
);

-- Index idx_cds2db_in_procedure_input_pnr for Table "procedure" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_procedure_input_pnr
ON cds2db_in.procedure (
   input_processing_nr DESC -- (First) Processing number of the data record
);

-- Index idx_cds2db_in_procedure_last_dt for Table "procedure" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_procedure_last_dt
ON cds2db_in.procedure (
   last_check_datetime DESC -- Time at which data record was last checked
);

-- Index idx_cds2db_in_procedure_last_dt for Table "procedure" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_procedure_last_pnr
ON cds2db_in.procedure (
   last_processing_nr DESC -- Last processing number of the data record
);

-- Index idx_cds2db_in_procedure_hash for Table "procedure" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_procedure_hash
ON cds2db_in.procedure (
   hash_index_col -- Column for automatic hash value for comparing FHIR data
);

CREATE INDEX IF NOT EXISTS idx_procedure_proc_id ON cds2db_in.procedure ( proc_id );
CREATE INDEX IF NOT EXISTS idx_procedure_proc_meta_versionid ON cds2db_in.procedure ( proc_meta_versionid );
CREATE INDEX IF NOT EXISTS idx_procedure_proc_meta_lastupdated ON cds2db_in.procedure ( proc_meta_lastupdated );
CREATE INDEX IF NOT EXISTS idx_procedure_proc_meta_profile ON cds2db_in.procedure ( proc_meta_profile );
------------------------- Index for cds2db_in - consent ---------------------------------
  CREATE INDEX IF NOT EXISTS idx_consent_raw_id ON cds2db_in.consent ( consent_raw_id DESC); -- Primary key of the corresponding raw table

-- Index idx_cds2db_in_consent_input_dt for Table "consent" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_consent_input_dt
ON cds2db_in.consent (
   input_datetime DESC -- Time at which the data record is inserted
);

-- Index idx_cds2db_in_consent_input_pnr for Table "consent" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_consent_input_pnr
ON cds2db_in.consent (
   input_processing_nr DESC -- (First) Processing number of the data record
);

-- Index idx_cds2db_in_consent_last_dt for Table "consent" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_consent_last_dt
ON cds2db_in.consent (
   last_check_datetime DESC -- Time at which data record was last checked
);

-- Index idx_cds2db_in_consent_last_dt for Table "consent" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_consent_last_pnr
ON cds2db_in.consent (
   last_processing_nr DESC -- Last processing number of the data record
);

-- Index idx_cds2db_in_consent_hash for Table "consent" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_consent_hash
ON cds2db_in.consent (
   hash_index_col -- Column for automatic hash value for comparing FHIR data
);

CREATE INDEX IF NOT EXISTS idx_consent_cons_id ON cds2db_in.consent ( cons_id );
CREATE INDEX IF NOT EXISTS idx_consent_cons_meta_versionid ON cds2db_in.consent ( cons_meta_versionid );
CREATE INDEX IF NOT EXISTS idx_consent_cons_meta_lastupdated ON cds2db_in.consent ( cons_meta_lastupdated );
CREATE INDEX IF NOT EXISTS idx_consent_cons_meta_profile ON cds2db_in.consent ( cons_meta_profile );
------------------------- Index for cds2db_in - location ---------------------------------
  CREATE INDEX IF NOT EXISTS idx_location_raw_id ON cds2db_in.location ( location_raw_id DESC); -- Primary key of the corresponding raw table

-- Index idx_cds2db_in_location_input_dt for Table "location" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_location_input_dt
ON cds2db_in.location (
   input_datetime DESC -- Time at which the data record is inserted
);

-- Index idx_cds2db_in_location_input_pnr for Table "location" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_location_input_pnr
ON cds2db_in.location (
   input_processing_nr DESC -- (First) Processing number of the data record
);

-- Index idx_cds2db_in_location_last_dt for Table "location" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_location_last_dt
ON cds2db_in.location (
   last_check_datetime DESC -- Time at which data record was last checked
);

-- Index idx_cds2db_in_location_last_dt for Table "location" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_location_last_pnr
ON cds2db_in.location (
   last_processing_nr DESC -- Last processing number of the data record
);

-- Index idx_cds2db_in_location_hash for Table "location" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_location_hash
ON cds2db_in.location (
   hash_index_col -- Column for automatic hash value for comparing FHIR data
);

CREATE INDEX IF NOT EXISTS idx_location_loc_id ON cds2db_in.location ( loc_id );
CREATE INDEX IF NOT EXISTS idx_location_loc_meta_versionid ON cds2db_in.location ( loc_meta_versionid );
CREATE INDEX IF NOT EXISTS idx_location_loc_meta_lastupdated ON cds2db_in.location ( loc_meta_lastupdated );
CREATE INDEX IF NOT EXISTS idx_location_loc_meta_profile ON cds2db_in.location ( loc_meta_profile );
------------------------- Index for cds2db_in - pids_per_ward ---------------------------------
  CREATE INDEX IF NOT EXISTS idx_pids_per_ward_raw_id ON cds2db_in.pids_per_ward ( pids_per_ward_raw_id DESC); -- Primary key of the corresponding raw table

-- Index idx_cds2db_in_pids_per_ward_input_dt for Table "pids_per_ward" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_pids_per_ward_input_dt
ON cds2db_in.pids_per_ward (
   input_datetime DESC -- Time at which the data record is inserted
);

-- Index idx_cds2db_in_pids_per_ward_input_pnr for Table "pids_per_ward" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_pids_per_ward_input_pnr
ON cds2db_in.pids_per_ward (
   input_processing_nr DESC -- (First) Processing number of the data record
);

-- Index idx_cds2db_in_pids_per_ward_last_dt for Table "pids_per_ward" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_pids_per_ward_last_dt
ON cds2db_in.pids_per_ward (
   last_check_datetime DESC -- Time at which data record was last checked
);

-- Index idx_cds2db_in_pids_per_ward_last_dt for Table "pids_per_ward" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_pids_per_ward_last_pnr
ON cds2db_in.pids_per_ward (
   last_processing_nr DESC -- Last processing number of the data record
);

-- Index idx_cds2db_in_pids_per_ward_hash for Table "pids_per_ward" in schema "cds2db_in"
----------------------------------------------------
CREATE INDEX IF NOT EXISTS idx_cds2db_in_pids_per_ward_hash
ON cds2db_in.pids_per_ward (
   hash_index_col -- Column for automatic hash value for comparing FHIR data
);



