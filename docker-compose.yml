version: '3.2'

services:

  # FHIR Server for testing/simulating
  # replace it with the productive FHIR Server and/or configure this
  # FHIR Server in the services below.
#  blaze-DIC:
#    image: "samply/blaze:latest"
#    restart: unless-stopped
#    environment:
#      BASE_URL: "http://localhost:8080"
#      LOG_LEVEL: ${BLAZE_LOG_LEVEL:-info}
#      JAVA_TOOL_OPTIONS: ${BLAZE_JVM_ARGS:--Xmx4g}
#      DB_BLOCK_CACHE_SIZE: ${BLAZE_BLOCK_CACHE_SIZE:-256}
#      DB_RESOURCE_CACHE_SIZE: ${BLAZE_DB_RESOURCE_CACHE_SIZE:-1000000}
#      DB_RESOURCE_HANDLE_CACHE_SIZE: ${BLAZE_DB_RESOURCE_HANDLE_CACHE_SIZE:-1000000}
#    ports:
#      - "127.0.0.1:8080:8080"
#    networks:
#      - internal
#      - external
#    volumes:
#      - "blaze-data-DIC:/app/data"

  # SQL Server for redcap
  redcap_db:
    image: mariadb:11
    #container_name: ${COMPOSE_PROJECT_NAME}_mysql
    #command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    env_file: ${PWD}/REDCap-db/.env-redcap-db
    secrets:
      - redcap_db_root.password
      - redcap_db.password
    networks:
      - internal
    volumes:
      - ${PWD}/REDCap-db/mariadb.cnf:/etc/mysql/mariadb.cnf
      - redcap-db-data:/var/lib/mysql
      - ${PWD}/REDCap-db/init:/docker-entrypoint-initdb.d
      #- ./.my.cnf:/root/.my.cnf

  # Frontend (redcap)
  redcap:
    build: ./REDCap-app/build
    #user: "www-data:www-data"
    #container_name: ${COMPOSE_PROJECT_NAME}_app
    depends_on:
      - redcap_db
    restart: unless-stopped
    networks:
      - internal
      - external
    ports:
      - "127.0.0.1:8082:80"
    volumes:
      - ./REDCap-app/html/redcap:/var/www/html/redcap
      - ./REDCap-app/html/redcapdocs:/var/www/html/redcapdocs
      - ./REDCap-app/build/config/php.ini:/usr/local/etc/php/conf.d/my.ini
      - ./REDCap-app/log/:/var/log/


  # Database (postgres) for medical safety (AMTS) information
  amts_db:
    #image: postgres:15
    build: ./Postgres-amts_db/build
    #container_name: pg_container
    restart: unless-stopped
        #    healthcheck:
    # test: [ "CMD-SHELL", "pg_isready -U postgres -d interpolar" ]
    # interval: 10s
    # timeout: 5s
    # retries: 5
    ports:
      - "15432:5432"
    environment:
      TZ: Europe/Berlin
      POSTGRES_PASSWORD_FILE: /run/secrets/amts_db.password
      POSTGRES_USER: interpolar_admin
      POSTGRES_DB: interpolar
    command: "-c config_file=/etc/postgresql.conf"
    secrets:
      - amts_db.password
    networks:
      - internal
    volumes:
      - db-data:/var/lib/postgresql/data
      - ${PWD}/Postgres-amts_db/postgresql.conf:/etc/postgresql.conf
      - ${PWD}/Postgres-amts_db/init/:/docker-entrypoint-initdb.d/

  # Web-administration of amts_db (optional)
  pgadmin:
    image: dpage/pgadmin4:7.2
    #container_name: pgadmin4_container
    restart: unless-stopped
    ports:
      - "127.0.0.1:8089:80"
    environment:
      PGADMIN_DEFAULT_PASSWORD: "password"
      PGADMIN_DEFAULT_EMAIL: a@b.cd
    depends_on:
      - amts_db
    networks:
      - internal
      - external
    volumes:
      - pgadmin-data:/var/lib/pgadmin

  # This section is no service, but for building the R-environment
  # to execute (manualy) R scripts for r-kds2db and r-db2frontend,
  # e.g. StartRetrieval.R
  r-env:
    build:
      context: ./
      dockerfile: Dockerfile_R
    working_dir: /src
    restart: "no"
    volumes:
      #- ./R-kds2db:/src
      - ./R-kds2db/outputLocal:/src/R-kds2db/outputLocal
      - ./R-kds2db/outputGlobal:/src/R-kds2db/outputGlobal
      - ./R-kds2db/kds2db_config.toml:/src/R-kds2db/kds2db_config.toml
      - ./R-db2frontend/db2frontend_config.toml:/src/R-db2frontend/db2frontend_config.toml
      - ./amts_db_config.toml:/src/amts_db_config.toml
    depends_on:
      - amts_db
      - redcap
      - redcap_db
    networks:
      - internal
    command: ["/bin/true"]


networks:
  external:
    driver: bridge
  internal:
    driver: bridge

secrets:
  amts_db.password:
    file: ./Postgres-amts_db/.env_amts_db.password
  redcap_db_root.password:
    file: ./REDCap-db/.env_redcap_db_root.password
  redcap_db.password:
    file: ./REDCap-db/.env_redcap_db.password

volumes:
    redcap-db-data:
    blaze-data-DIC:
    blaze-data-IP:
    db-data:
    pgadmin-data:

