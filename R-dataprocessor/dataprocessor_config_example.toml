##################################################
# Project Definition for module dataprocessor    #
##################################################

[general]

#################
# VERBOSE LEVELS
#
# VL_00_NOTHING             = 0
# VL_10_MAIN_INFO           = 1
# VL_20_OUTER_SCRIPTS       = 2
# VL_30_INNER_SCRIPTS       = 3
# VL_40_INNER_SCRIPTS_INFOS = 4
# VL_50_TABLES              = 5
# VL_60_ALL_TABLES          = 6
# VL_70_DOWNLOAD            = 7
# VL_80_COI_PROCESSING      = 8
# VL_90_FHIR_RESPONSE       = 9
#################
VERBOSE               = 10 # Retrieval / analysis verbose level

#################
# Set true if every sourcing of the 00_Main file should create result
# directories in the otuputGlobal and otuputLocal directores with a timestamp
# suffix. If false then every run will write in the same subdirectory without
# a timestamp. The default behaviour should write in subdirectories with only
# the project name (false) or in or in a subdirectory with the project name
# and the suffix '_timestamp'. (true)
#################
USE_TIMESTAMP_AS_RESULT_DIR_SUFFIX = false

#################
# Maximum of saved cds2db result folders in outputLocal and outputGlobal
#################
MAX_DIR_COUNT = 5

[analyse]

#################
# Filter for the displayable PID
# ------------------------------
# To filter the correct patient ID from the hospital information system for the
# frontend, there are 3 possible parameters.
# These can be used to filter out the correct FHIR identifier of the patient
# resource. They all target the system property of the identifier.
# All 3 work as patterns, i.e. if you simply enter a string, all identifiers
# containing this string will be found.
# If you want to search for the exact string, the string must be preceded by an
# umbrella ‘^’ and ended with a dollar sign ‘$’.
# If more than one value is to be searched for, the individual values must be
# OR-linked using a pipe symbol '|'.
# (see https://hypebright.nl/index.php/en/2020/05/25/ultimate-cheatsheet-for-regex-in-r-2/)
# Exception: If a variable is commented out or the empty string "" then the filter
# on this FHIR expression is deactivated. The same result can be achieved by passing
# ".*" as the pattern, which means "any characters any number of times".
# If the filter result on a single Patient resource will provide more than one
# Identifier, then they are written one after the other, separated by semicolons.
#################
# 1. Patient.indentifier.system
FRONTEND_DISPLAYED_PATIENT_FHIR_IDENTIFIER_SYSTEM = ".*"
# 2. Patient.indentifier.type.coding.system
FRONTEND_DISPLAYED_PATIENT_FHIR_IDENTIFIER_TYPE_SYSTEM = ".*"
# 3. Patient.indentifier.type.coding.code
FRONTEND_DISPLAYED_PATIENT_FHIR_IDENTIFIER_TYPE_CODE = ".*"

#################
# Filter for the medical case ID
# ------------------------------
# The following filter targets Encounter.indentifier.system.
# It is used for 2 things:
# 1.) If not all Encounter resources of the 3 levels are linked to each other via partOf relationships, they must at least have a common identifier (all absolutely the same), as specified in the Implementation Guide.
# They can all be found here using this common identifier.
# 2.) This identifier should correspond to the ID of the hospital case and is displayed in the frontend as "Case ID".
#
# It is *not* a pattern. It must be specified here as an exact string.
#################
COMMON_ENCOUNTER_FHIR_IDENTIFIER_SYSTEM = ""

#################
# Only Encounters that have one of the entries specified here as a class attribute are displayed
# in the frontend. This match must be exact, i.e. no patterns may be specified here.
# This can be used to ensure that, for example, no outpatient Encounters are displayed even though
# they have not yet ended.
#################
FRONTEND_DISPLAYED_ENCOUNTER_CLASS = ["IMP"]

#################
# This parameter should contain the FHIR element where the name of the room and bed can be found.
# This must be the name of a column in the encounter database table or if the location is a real
# reference to a Location resource, the name of a column in the location table. (see
# Table_Description.xlsx in the cds2db module)
#
# Examples (choose exact one or create your own):
#################
#FRONTEND_DISPLAYED_ROOM_AND_BED_COLUMN = "enc_location_display"
#FRONTEND_DISPLAYED_ROOM_AND_BED_COLUMN = "enc_location_identifier_value"
#FRONTEND_DISPLAYED_ROOM_AND_BED_COLUMN = "loc_name"
#FRONTEND_DISPLAYED_ROOM_AND_BED_COLUMN = "loc_identifier_type_display"

#################
# The codes for height, weight and BMI can be customised here. If several codes
# can occur, these must be entered in the respective list separated by spaces.
#################
OBSERVATION_BODY_WEIGHT_SYSTEM = "http://loinc.org"
OBSERVATION_BODY_WEIGHT_CODES  = "3142-7 29463-7"
OBSERVATION_BODY_HEIGHT_SYSTEM = "http://loinc.org"
OBSERVATION_BODY_HEIGHT_CODES  = "8302-2"
OBSERVATION_BMI_SYSTEM         = "http://loinc.org"
OBSERVATION_BMI_CODES          = "39156-5"

[mrp.calculation]

# Global variables for the module can be defined here. They overwrite any existing variables from
# the global (or any previously loaded) config.toml.

# Path to all Excel files used in the MRP calculation. This path contains the subrepository
# INTERPOLAR-WP7 (see: https://github.com/medizininformatik-initiative/INTERPOLAR-WP7).
# Please ensure that the subrepository is initialized and updated using: git submodule update --init --recursive
# Also make sure that the main branch is checked out using: git submodule status
# If a different branch is selected, navigate to the subrepository directory: cd Input-Repo/INTERPOLAR-WP7
# Then check out the main branch: git checkout main
# To update the main- and the subrepository, use the following command: git pull && git submodule update --recursive
MRP_PAIR_PATH = ["./Input-Repo/INTERPOLAR-WP7"]

# Default value that applies to the validity period in days for the laboratory values
DEFAULT_LOINC_VALIDITY_DAYS = 7


[database]

PATH_TO_DB_CONFIG_TOML = "./cds_hub_db_config.toml"
